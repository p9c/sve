// +build minimal

#define protected public
#define private public

#include "widgets-minimal.h"
#include "_cgo_export.h"

#include <QAbstractGraphicsShapeItem>
#include <QAbstractScrollArea>
#include <QAbstractSlider>
#include <QAction>
#include <QActionEvent>
#include <QActionGroup>
#include <QApplication>
#include <QBitmap>
#include <QBrush>
#include <QByteArray>
#include <QChildEvent>
#include <QCloseEvent>
#include <QColor>
#include <QContextMenuEvent>
#include <QCursor>
#include <QDesktopWidget>
#include <QDialogButtonBox>
#include <QDirModel>
#include <QDragEnterEvent>
#include <QDragLeaveEvent>
#include <QDragMoveEvent>
#include <QDropEvent>
#include <QEvent>
#include <QFileSystemModel>
#include <QFocusEvent>
#include <QFont>
#include <QFontInfo>
#include <QFontMetrics>
#include <QFrame>
#include <QGraphicsEffect>
#include <QGraphicsEllipseItem>
#include <QGraphicsItem>
#include <QGraphicsItemGroup>
#include <QGraphicsLayout>
#include <QGraphicsLayoutItem>
#include <QGraphicsLineItem>
#include <QGraphicsObject>
#include <QGraphicsPathItem>
#include <QGraphicsPixmapItem>
#include <QGraphicsPolygonItem>
#include <QGraphicsProxyWidget>
#include <QGraphicsRectItem>
#include <QGraphicsScene>
#include <QGraphicsSceneContextMenuEvent>
#include <QGraphicsSceneDragDropEvent>
#include <QGraphicsSceneEvent>
#include <QGraphicsSceneHelpEvent>
#include <QGraphicsSceneHoverEvent>
#include <QGraphicsSceneMouseEvent>
#include <QGraphicsSceneMoveEvent>
#include <QGraphicsSceneResizeEvent>
#include <QGraphicsSceneWheelEvent>
#include <QGraphicsSimpleTextItem>
#include <QGraphicsTextItem>
#include <QGraphicsTransform>
#include <QGraphicsView>
#include <QGraphicsWidget>
#include <QHideEvent>
#include <QIcon>
#include <QInputMethodEvent>
#include <QKeyEvent>
#include <QKeySequence>
#include <QLabel>
#include <QLayout>
#include <QLayoutItem>
#include <QLineF>
#include <QLocale>
#include <QMargins>
#include <QMatrix>
#include <QMatrix4x4>
#include <QMenu>
#include <QMessageBox>
#include <QMetaMethod>
#include <QMetaObject>
#include <QMimeData>
#include <QMouseEvent>
#include <QMoveEvent>
#include <QMovie>
#include <QObject>
#include <QPaintDevice>
#include <QPaintEngine>
#include <QPaintEvent>
#include <QPainter>
#include <QPainterPath>
#include <QPalette>
#include <QPen>
#include <QPicture>
#include <QPixmap>
#include <QPoint>
#include <QPointF>
#include <QPolygon>
#include <QPolygonF>
#include <QRect>
#include <QRectF>
#include <QRegion>
#include <QResizeEvent>
#include <QScreen>
#include <QScrollBar>
#include <QSessionManager>
#include <QShowEvent>
#include <QSize>
#include <QSizeF>
#include <QSizePolicy>
#include <QSlider>
#include <QSpacerItem>
#include <QString>
#include <QStyle>
#include <QStyleHintReturn>
#include <QStyleOption>
#include <QStyleOptionComplex>
#include <QStyleOptionFrame>
#include <QStyleOptionGraphicsItem>
#include <QStyleOptionMenuItem>
#include <QStyleOptionSlider>
#include <QTabletEvent>
#include <QTextCursor>
#include <QTextDocument>
#include <QTimerEvent>
#include <QTransform>
#include <QVariant>
#include <QWheelEvent>
#include <QWidget>
#include <QWindow>
#include <QStringList>

class MyQAbstractGraphicsShapeItem: public QAbstractGraphicsShapeItem
{
public:
	MyQAbstractGraphicsShapeItem(QGraphicsItem *parent = Q_NULLPTR) : QAbstractGraphicsShapeItem(parent) {QAbstractGraphicsShapeItem_QAbstractGraphicsShapeItem_QRegisterMetaType();};
	 ~MyQAbstractGraphicsShapeItem() { callbackQAbstractGraphicsShapeItem_DestroyQAbstractGraphicsShapeItem(this); };
	QPainterPath opaqueArea() const { return *static_cast<QPainterPath*>(callbackQGraphicsItem_OpaqueArea(const_cast<void*>(static_cast<const void*>(this)))); };
	bool isObscuredBy(const QGraphicsItem * item) const { return callbackQGraphicsItem_IsObscuredBy(const_cast<void*>(static_cast<const void*>(this)), const_cast<QGraphicsItem*>(item)) != 0; };
	QVariant itemChange(QGraphicsItem::GraphicsItemChange change, const QVariant & value) { return *static_cast<QVariant*>(callbackQGraphicsItem_ItemChange(this, change, const_cast<QVariant*>(&value))); };
	bool sceneEvent(QEvent * event) { return callbackQGraphicsItem_SceneEvent(this, event) != 0; };
	bool sceneEventFilter(QGraphicsItem * watched, QEvent * event) { return callbackQGraphicsItem_SceneEventFilter(this, watched, event) != 0; };
	void advance(int phase) { callbackQGraphicsItem_Advance(this, phase); };
	void contextMenuEvent(QGraphicsSceneContextMenuEvent * event) { callbackQGraphicsItem_ContextMenuEvent(this, event); };
	void dragEnterEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DragEnterEvent(this, event); };
	void dragLeaveEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DragLeaveEvent(this, event); };
	void dragMoveEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DragMoveEvent(this, event); };
	void dropEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DropEvent(this, event); };
	void focusInEvent(QFocusEvent * event) { callbackQGraphicsItem_FocusInEvent(this, event); };
	void focusOutEvent(QFocusEvent * event) { callbackQGraphicsItem_FocusOutEvent(this, event); };
	void hoverEnterEvent(QGraphicsSceneHoverEvent * event) { callbackQGraphicsItem_HoverEnterEvent(this, event); };
	void hoverLeaveEvent(QGraphicsSceneHoverEvent * event) { callbackQGraphicsItem_HoverLeaveEvent(this, event); };
	void hoverMoveEvent(QGraphicsSceneHoverEvent * event) { callbackQGraphicsItem_HoverMoveEvent(this, event); };
	void inputMethodEvent(QInputMethodEvent * event) { callbackQGraphicsItem_InputMethodEvent(this, event); };
	void keyPressEvent(QKeyEvent * event) { callbackQGraphicsItem_KeyPressEvent(this, event); };
	void keyReleaseEvent(QKeyEvent * event) { callbackQGraphicsItem_KeyReleaseEvent(this, event); };
	void mouseDoubleClickEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MouseDoubleClickEvent(this, event); };
	void mouseMoveEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MouseMoveEvent(this, event); };
	void mousePressEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MousePressEvent(this, event); };
	void mouseReleaseEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MouseReleaseEvent(this, event); };
	void paint(QPainter * painter, const QStyleOptionGraphicsItem * option, QWidget * widget) { callbackQAbstractGraphicsShapeItem_Paint(this, painter, const_cast<QStyleOptionGraphicsItem*>(option), widget); };
	void wheelEvent(QGraphicsSceneWheelEvent * event) { callbackQGraphicsItem_WheelEvent(this, event); };
	QPainterPath shape() const { return *static_cast<QPainterPath*>(callbackQGraphicsItem_Shape(const_cast<void*>(static_cast<const void*>(this)))); };
	QRectF boundingRect() const { return *static_cast<QRectF*>(callbackQAbstractGraphicsShapeItem_BoundingRect(const_cast<void*>(static_cast<const void*>(this)))); };
	QVariant inputMethodQuery(Qt::InputMethodQuery query) const { return *static_cast<QVariant*>(callbackQGraphicsItem_InputMethodQuery(const_cast<void*>(static_cast<const void*>(this)), query)); };
	bool collidesWithItem(const QGraphicsItem * other, Qt::ItemSelectionMode mode) const { return callbackQGraphicsItem_CollidesWithItem(const_cast<void*>(static_cast<const void*>(this)), const_cast<QGraphicsItem*>(other), mode) != 0; };
	bool collidesWithPath(const QPainterPath & path, Qt::ItemSelectionMode mode) const { return callbackQGraphicsItem_CollidesWithPath(const_cast<void*>(static_cast<const void*>(this)), const_cast<QPainterPath*>(&path), mode) != 0; };
	bool contains(const QPointF & point) const { return callbackQGraphicsItem_Contains(const_cast<void*>(static_cast<const void*>(this)), const_cast<QPointF*>(&point)) != 0; };
	int type() const { return callbackQGraphicsItem_Type(const_cast<void*>(static_cast<const void*>(this))); };
};

Q_DECLARE_METATYPE(QAbstractGraphicsShapeItem*)
Q_DECLARE_METATYPE(MyQAbstractGraphicsShapeItem*)

int QAbstractGraphicsShapeItem_QAbstractGraphicsShapeItem_QRegisterMetaType(){qRegisterMetaType<QAbstractGraphicsShapeItem*>(); return qRegisterMetaType<MyQAbstractGraphicsShapeItem*>();}

void* QAbstractGraphicsShapeItem_NewQAbstractGraphicsShapeItem(void* parent)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(parent))) {
		return new MyQAbstractGraphicsShapeItem(static_cast<QGraphicsObject*>(parent));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(parent))) {
		return new MyQAbstractGraphicsShapeItem(static_cast<QGraphicsWidget*>(parent));
	} else {
		return new MyQAbstractGraphicsShapeItem(static_cast<QGraphicsItem*>(parent));
	}
}

void QAbstractGraphicsShapeItem_SetBrush(void* ptr, void* brush)
{
	static_cast<QAbstractGraphicsShapeItem*>(ptr)->setBrush(*static_cast<QBrush*>(brush));
}

void QAbstractGraphicsShapeItem_SetPen(void* ptr, void* pen)
{
	static_cast<QAbstractGraphicsShapeItem*>(ptr)->setPen(*static_cast<QPen*>(pen));
}

void QAbstractGraphicsShapeItem_DestroyQAbstractGraphicsShapeItem(void* ptr)
{
	static_cast<QAbstractGraphicsShapeItem*>(ptr)->~QAbstractGraphicsShapeItem();
}

void QAbstractGraphicsShapeItem_DestroyQAbstractGraphicsShapeItemDefault(void* ptr)
{
	Q_UNUSED(ptr);

}

void* QAbstractGraphicsShapeItem_Brush(void* ptr)
{
	return new QBrush(static_cast<QAbstractGraphicsShapeItem*>(ptr)->brush());
}

void* QAbstractGraphicsShapeItem_Pen(void* ptr)
{
	return new QPen(static_cast<QAbstractGraphicsShapeItem*>(ptr)->pen());
}

void QAbstractGraphicsShapeItem_Paint(void* ptr, void* painter, void* option, void* widget)
{
		static_cast<QAbstractGraphicsShapeItem*>(ptr)->paint(static_cast<QPainter*>(painter), static_cast<QStyleOptionGraphicsItem*>(option), static_cast<QWidget*>(widget));
}

void QAbstractGraphicsShapeItem_PaintDefault(void* ptr, void* painter, void* option, void* widget)
{
	if (dynamic_cast<QGraphicsSimpleTextItem*>(static_cast<QAbstractGraphicsShapeItem*>(ptr))) {
		static_cast<QGraphicsSimpleTextItem*>(ptr)->QGraphicsSimpleTextItem::paint(static_cast<QPainter*>(painter), static_cast<QStyleOptionGraphicsItem*>(option), static_cast<QWidget*>(widget));
	} else if (dynamic_cast<QGraphicsRectItem*>(static_cast<QAbstractGraphicsShapeItem*>(ptr))) {
		static_cast<QGraphicsRectItem*>(ptr)->QGraphicsRectItem::paint(static_cast<QPainter*>(painter), static_cast<QStyleOptionGraphicsItem*>(option), static_cast<QWidget*>(widget));
	} else if (dynamic_cast<QGraphicsPolygonItem*>(static_cast<QAbstractGraphicsShapeItem*>(ptr))) {
		static_cast<QGraphicsPolygonItem*>(ptr)->QGraphicsPolygonItem::paint(static_cast<QPainter*>(painter), static_cast<QStyleOptionGraphicsItem*>(option), static_cast<QWidget*>(widget));
	} else if (dynamic_cast<QGraphicsPathItem*>(static_cast<QAbstractGraphicsShapeItem*>(ptr))) {
		static_cast<QGraphicsPathItem*>(ptr)->QGraphicsPathItem::paint(static_cast<QPainter*>(painter), static_cast<QStyleOptionGraphicsItem*>(option), static_cast<QWidget*>(widget));
	} else if (dynamic_cast<QGraphicsEllipseItem*>(static_cast<QAbstractGraphicsShapeItem*>(ptr))) {
		static_cast<QGraphicsEllipseItem*>(ptr)->QGraphicsEllipseItem::paint(static_cast<QPainter*>(painter), static_cast<QStyleOptionGraphicsItem*>(option), static_cast<QWidget*>(widget));
	} else {
	
	}
}

void* QAbstractGraphicsShapeItem_BoundingRect(void* ptr)
{
	return ({ QRectF tmpValue = static_cast<QAbstractGraphicsShapeItem*>(ptr)->boundingRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QAbstractGraphicsShapeItem_BoundingRectDefault(void* ptr)
{
	if (dynamic_cast<QGraphicsSimpleTextItem*>(static_cast<QAbstractGraphicsShapeItem*>(ptr))) {
		return ({ QRectF tmpValue = static_cast<QGraphicsSimpleTextItem*>(ptr)->QGraphicsSimpleTextItem::boundingRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	} else if (dynamic_cast<QGraphicsRectItem*>(static_cast<QAbstractGraphicsShapeItem*>(ptr))) {
		return ({ QRectF tmpValue = static_cast<QGraphicsRectItem*>(ptr)->QGraphicsRectItem::boundingRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	} else if (dynamic_cast<QGraphicsPolygonItem*>(static_cast<QAbstractGraphicsShapeItem*>(ptr))) {
		return ({ QRectF tmpValue = static_cast<QGraphicsPolygonItem*>(ptr)->QGraphicsPolygonItem::boundingRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	} else if (dynamic_cast<QGraphicsPathItem*>(static_cast<QAbstractGraphicsShapeItem*>(ptr))) {
		return ({ QRectF tmpValue = static_cast<QGraphicsPathItem*>(ptr)->QGraphicsPathItem::boundingRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	} else if (dynamic_cast<QGraphicsEllipseItem*>(static_cast<QAbstractGraphicsShapeItem*>(ptr))) {
		return ({ QRectF tmpValue = static_cast<QGraphicsEllipseItem*>(ptr)->QGraphicsEllipseItem::boundingRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	} else {
	
	}
}

class MyQAbstractScrollArea: public QAbstractScrollArea
{
public:
	MyQAbstractScrollArea(QWidget *parent = Q_NULLPTR) : QAbstractScrollArea(parent) {QAbstractScrollArea_QAbstractScrollArea_QRegisterMetaType();};
	bool event(QEvent * event) { return callbackQWidget_Event(this, event) != 0; };
	bool viewportEvent(QEvent * event) { return callbackQAbstractScrollArea_ViewportEvent(this, event) != 0; };
	void contextMenuEvent(QContextMenuEvent * e) { callbackQWidget_ContextMenuEvent(this, e); };
	void dragEnterEvent(QDragEnterEvent * event) { callbackQWidget_DragEnterEvent(this, event); };
	void dragLeaveEvent(QDragLeaveEvent * event) { callbackQWidget_DragLeaveEvent(this, event); };
	void dragMoveEvent(QDragMoveEvent * event) { callbackQWidget_DragMoveEvent(this, event); };
	void dropEvent(QDropEvent * event) { callbackQWidget_DropEvent(this, event); };
	void keyPressEvent(QKeyEvent * e) { callbackQWidget_KeyPressEvent(this, e); };
	void mouseDoubleClickEvent(QMouseEvent * e) { callbackQWidget_MouseDoubleClickEvent(this, e); };
	void mouseMoveEvent(QMouseEvent * e) { callbackQWidget_MouseMoveEvent(this, e); };
	void mousePressEvent(QMouseEvent * e) { callbackQWidget_MousePressEvent(this, e); };
	void mouseReleaseEvent(QMouseEvent * e) { callbackQWidget_MouseReleaseEvent(this, e); };
	void paintEvent(QPaintEvent * event) { callbackQWidget_PaintEvent(this, event); };
	void resizeEvent(QResizeEvent * event) { callbackQWidget_ResizeEvent(this, event); };
	void scrollContentsBy(int dx, int dy) { callbackQAbstractScrollArea_ScrollContentsBy(this, dx, dy); };
	void setupViewport(QWidget * viewport) { callbackQAbstractScrollArea_SetupViewport(this, viewport); };
	void wheelEvent(QWheelEvent * e) { callbackQWidget_WheelEvent(this, e); };
	 ~MyQAbstractScrollArea() { callbackQAbstractScrollArea_DestroyQAbstractScrollArea(this); };
	QSize minimumSizeHint() const { return *static_cast<QSize*>(callbackQWidget_MinimumSizeHint(const_cast<void*>(static_cast<const void*>(this)))); };
	QSize sizeHint() const { return *static_cast<QSize*>(callbackQWidget_SizeHint(const_cast<void*>(static_cast<const void*>(this)))); };
	QSize viewportSizeHint() const { return *static_cast<QSize*>(callbackQAbstractScrollArea_ViewportSizeHint(const_cast<void*>(static_cast<const void*>(this)))); };
	const QMetaObject * metaObject() const { return static_cast<QMetaObject*>(callbackQWidget_MetaObject(const_cast<void*>(static_cast<const void*>(this)))); };
	void changeEvent(QEvent * ev) { callbackQWidget_ChangeEvent(this, ev); };
	bool close() { return callbackQWidget_Close(this) != 0; };
	bool focusNextPrevChild(bool next) { return callbackQWidget_FocusNextPrevChild(this, next) != 0; };
	bool nativeEvent(const QByteArray & eventType, void * message, long * result) { return callbackQWidget_NativeEvent(this, const_cast<QByteArray*>(&eventType), message, result) != 0; };
	void actionEvent(QActionEvent * event) { callbackQWidget_ActionEvent(this, event); };
	void closeEvent(QCloseEvent * event) { callbackQWidget_CloseEvent(this, event); };
	void Signal_CustomContextMenuRequested(const QPoint & pos) { callbackQWidget_CustomContextMenuRequested(this, const_cast<QPoint*>(&pos)); };
	void enterEvent(QEvent * event) { callbackQWidget_EnterEvent(this, event); };
	void focusInEvent(QFocusEvent * event) { callbackQWidget_FocusInEvent(this, event); };
	void focusOutEvent(QFocusEvent * event) { callbackQWidget_FocusOutEvent(this, event); };
	void hide() { callbackQWidget_Hide(this); };
	void hideEvent(QHideEvent * event) { callbackQWidget_HideEvent(this, event); };
	void inputMethodEvent(QInputMethodEvent * event) { callbackQWidget_InputMethodEvent(this, event); };
	void keyReleaseEvent(QKeyEvent * event) { callbackQWidget_KeyReleaseEvent(this, event); };
	void leaveEvent(QEvent * event) { callbackQWidget_LeaveEvent(this, event); };
	void lower() { callbackQWidget_Lower(this); };
	void moveEvent(QMoveEvent * event) { callbackQWidget_MoveEvent(this, event); };
	void raise() { callbackQWidget_Raise(this); };
	void repaint() { callbackQWidget_Repaint(this); };
	void setDisabled(bool disable) { callbackQWidget_SetDisabled(this, disable); };
	void setEnabled(bool vbo) { callbackQWidget_SetEnabled(this, vbo); };
	void setFocus() { callbackQWidget_SetFocus2(this); };
	void setHidden(bool hidden) { callbackQWidget_SetHidden(this, hidden); };
	void setStyleSheet(const QString & styleSheet) { QByteArray t728ae7 = styleSheet.toUtf8(); QtWidgets_PackedString styleSheetPacked = { const_cast<char*>(t728ae7.prepend("WHITESPACE").constData()+10), t728ae7.size()-10 };callbackQWidget_SetStyleSheet(this, styleSheetPacked); };
	void setVisible(bool visible) { callbackQWidget_SetVisible(this, visible); };
	void setWindowModified(bool vbo) { callbackQWidget_SetWindowModified(this, vbo); };
	void setWindowTitle(const QString & vqs) { QByteArray tda39a3 = vqs.toUtf8(); QtWidgets_PackedString vqsPacked = { const_cast<char*>(tda39a3.prepend("WHITESPACE").constData()+10), tda39a3.size()-10 };callbackQWidget_SetWindowTitle(this, vqsPacked); };
	void show() { callbackQWidget_Show(this); };
	void showEvent(QShowEvent * event) { callbackQWidget_ShowEvent(this, event); };
	void showFullScreen() { callbackQWidget_ShowFullScreen(this); };
	void showMaximized() { callbackQWidget_ShowMaximized(this); };
	void showMinimized() { callbackQWidget_ShowMinimized(this); };
	void showNormal() { callbackQWidget_ShowNormal(this); };
	void tabletEvent(QTabletEvent * event) { callbackQWidget_TabletEvent(this, event); };
	void update() { callbackQWidget_Update(this); };
	void updateMicroFocus() { callbackQWidget_UpdateMicroFocus(this); };
	void Signal_WindowIconChanged(const QIcon & icon) { callbackQWidget_WindowIconChanged(this, const_cast<QIcon*>(&icon)); };
	void Signal_WindowTitleChanged(const QString & title) { QByteArray t3c6de1 = title.toUtf8(); QtWidgets_PackedString titlePacked = { const_cast<char*>(t3c6de1.prepend("WHITESPACE").constData()+10), t3c6de1.size()-10 };callbackQWidget_WindowTitleChanged(this, titlePacked); };
	QPaintEngine * paintEngine() const { return static_cast<QPaintEngine*>(callbackQWidget_PaintEngine(const_cast<void*>(static_cast<const void*>(this)))); };
	QVariant inputMethodQuery(Qt::InputMethodQuery query) const { return *static_cast<QVariant*>(callbackQWidget_InputMethodQuery(const_cast<void*>(static_cast<const void*>(this)), query)); };
	bool hasHeightForWidth() const { return callbackQWidget_HasHeightForWidth(const_cast<void*>(static_cast<const void*>(this))) != 0; };
	int heightForWidth(int w) const { return callbackQWidget_HeightForWidth(const_cast<void*>(static_cast<const void*>(this)), w); };
	int metric(QPaintDevice::PaintDeviceMetric m) const { return callbackQWidget_Metric(const_cast<void*>(static_cast<const void*>(this)), m); };
	void initPainter(QPainter * painter) const { callbackQWidget_InitPainter(const_cast<void*>(static_cast<const void*>(this)), painter); };
	bool eventFilter(QObject * watched, QEvent * event) { return callbackQWidget_EventFilter(this, watched, event) != 0; };
	void childEvent(QChildEvent * event) { callbackQWidget_ChildEvent(this, event); };
	void connectNotify(const QMetaMethod & sign) { callbackQWidget_ConnectNotify(this, const_cast<QMetaMethod*>(&sign)); };
	void customEvent(QEvent * event) { callbackQWidget_CustomEvent(this, event); };
	void deleteLater() { callbackQWidget_DeleteLater(this); };
	void Signal_Destroyed(QObject * obj) { callbackQWidget_Destroyed(this, obj); };
	void disconnectNotify(const QMetaMethod & sign) { callbackQWidget_DisconnectNotify(this, const_cast<QMetaMethod*>(&sign)); };
	void Signal_ObjectNameChanged(const QString & objectName) { QByteArray taa2c4f = objectName.toUtf8(); QtWidgets_PackedString objectNamePacked = { const_cast<char*>(taa2c4f.prepend("WHITESPACE").constData()+10), taa2c4f.size()-10 };callbackQWidget_ObjectNameChanged(this, objectNamePacked); };
	void timerEvent(QTimerEvent * event) { callbackQWidget_TimerEvent(this, event); };
};

Q_DECLARE_METATYPE(QAbstractScrollArea*)
Q_DECLARE_METATYPE(MyQAbstractScrollArea*)

int QAbstractScrollArea_QAbstractScrollArea_QRegisterMetaType(){qRegisterMetaType<QAbstractScrollArea*>(); return qRegisterMetaType<MyQAbstractScrollArea*>();}

void* QAbstractScrollArea_NewQAbstractScrollArea(void* parent)
{
		return new MyQAbstractScrollArea(static_cast<QWidget*>(parent));
}

struct QtWidgets_PackedList QAbstractScrollArea_ScrollBarWidgets(void* ptr, long long alignment)
{
	return ({ QList<QWidget *>* tmpValue2f39ff = new QList<QWidget *>(static_cast<QAbstractScrollArea*>(ptr)->scrollBarWidgets(static_cast<Qt::AlignmentFlag>(alignment))); QtWidgets_PackedList { tmpValue2f39ff, tmpValue2f39ff->size() }; });
}

char QAbstractScrollArea_ViewportEvent(void* ptr, void* event)
{
	return static_cast<QAbstractScrollArea*>(ptr)->viewportEvent(static_cast<QEvent*>(event));
}

char QAbstractScrollArea_ViewportEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsView*>(ptr)->QGraphicsView::viewportEvent(static_cast<QEvent*>(event));
	} else {
		return static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::viewportEvent(static_cast<QEvent*>(event));
	}
}

void QAbstractScrollArea_AddScrollBarWidget(void* ptr, void* widget, long long alignment)
{
		static_cast<QAbstractScrollArea*>(ptr)->addScrollBarWidget(static_cast<QWidget*>(widget), static_cast<Qt::AlignmentFlag>(alignment));
}

void QAbstractScrollArea_ScrollContentsBy(void* ptr, int dx, int dy)
{
	static_cast<QAbstractScrollArea*>(ptr)->scrollContentsBy(dx, dy);
}

void QAbstractScrollArea_ScrollContentsByDefault(void* ptr, int dx, int dy)
{
	if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::scrollContentsBy(dx, dy);
	} else {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::scrollContentsBy(dx, dy);
	}
}

void QAbstractScrollArea_SetCornerWidget(void* ptr, void* widget)
{
		static_cast<QAbstractScrollArea*>(ptr)->setCornerWidget(static_cast<QWidget*>(widget));
}

void QAbstractScrollArea_SetHorizontalScrollBar(void* ptr, void* scrollBar)
{
	static_cast<QAbstractScrollArea*>(ptr)->setHorizontalScrollBar(static_cast<QScrollBar*>(scrollBar));
}

void QAbstractScrollArea_SetHorizontalScrollBarPolicy(void* ptr, long long vqt)
{
	static_cast<QAbstractScrollArea*>(ptr)->setHorizontalScrollBarPolicy(static_cast<Qt::ScrollBarPolicy>(vqt));
}

void QAbstractScrollArea_SetSizeAdjustPolicy(void* ptr, long long policy)
{
	static_cast<QAbstractScrollArea*>(ptr)->setSizeAdjustPolicy(static_cast<QAbstractScrollArea::SizeAdjustPolicy>(policy));
}

void QAbstractScrollArea_SetVerticalScrollBar(void* ptr, void* scrollBar)
{
	static_cast<QAbstractScrollArea*>(ptr)->setVerticalScrollBar(static_cast<QScrollBar*>(scrollBar));
}

void QAbstractScrollArea_SetVerticalScrollBarPolicy(void* ptr, long long vqt)
{
	static_cast<QAbstractScrollArea*>(ptr)->setVerticalScrollBarPolicy(static_cast<Qt::ScrollBarPolicy>(vqt));
}

void QAbstractScrollArea_SetViewport(void* ptr, void* widget)
{
		static_cast<QAbstractScrollArea*>(ptr)->setViewport(static_cast<QWidget*>(widget));
}

void QAbstractScrollArea_SetViewportMargins2(void* ptr, void* margins)
{
	static_cast<QAbstractScrollArea*>(ptr)->setViewportMargins(*static_cast<QMargins*>(margins));
}

void QAbstractScrollArea_SetViewportMargins(void* ptr, int left, int top, int right, int bottom)
{
	static_cast<QAbstractScrollArea*>(ptr)->setViewportMargins(left, top, right, bottom);
}

void QAbstractScrollArea_SetupViewport(void* ptr, void* viewport)
{
		static_cast<QAbstractScrollArea*>(ptr)->setupViewport(static_cast<QWidget*>(viewport));
}

void QAbstractScrollArea_SetupViewportDefault(void* ptr, void* viewport)
{
	if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::setupViewport(static_cast<QWidget*>(viewport));
	} else {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::setupViewport(static_cast<QWidget*>(viewport));
	}
}

void QAbstractScrollArea_DestroyQAbstractScrollArea(void* ptr)
{
	static_cast<QAbstractScrollArea*>(ptr)->~QAbstractScrollArea();
}

void QAbstractScrollArea_DestroyQAbstractScrollAreaDefault(void* ptr)
{
	Q_UNUSED(ptr);

}

long long QAbstractScrollArea_SizeAdjustPolicy(void* ptr)
{
	return static_cast<QAbstractScrollArea*>(ptr)->sizeAdjustPolicy();
}

void* QAbstractScrollArea_ViewportMargins(void* ptr)
{
	return ({ QMargins tmpValue = static_cast<QAbstractScrollArea*>(ptr)->viewportMargins(); new QMargins(tmpValue.left(), tmpValue.top(), tmpValue.right(), tmpValue.bottom()); });
}

void* QAbstractScrollArea_HorizontalScrollBar(void* ptr)
{
	return static_cast<QAbstractScrollArea*>(ptr)->horizontalScrollBar();
}

void* QAbstractScrollArea_VerticalScrollBar(void* ptr)
{
	return static_cast<QAbstractScrollArea*>(ptr)->verticalScrollBar();
}

void* QAbstractScrollArea_MaximumViewportSize(void* ptr)
{
	return ({ QSize tmpValue = static_cast<QAbstractScrollArea*>(ptr)->maximumViewportSize(); new QSize(tmpValue.width(), tmpValue.height()); });
}

void* QAbstractScrollArea_ViewportSizeHint(void* ptr)
{
	return ({ QSize tmpValue = static_cast<QAbstractScrollArea*>(ptr)->viewportSizeHint(); new QSize(tmpValue.width(), tmpValue.height()); });
}

void* QAbstractScrollArea_ViewportSizeHintDefault(void* ptr)
{
	if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		return ({ QSize tmpValue = static_cast<QGraphicsView*>(ptr)->QGraphicsView::viewportSizeHint(); new QSize(tmpValue.width(), tmpValue.height()); });
	} else {
		return ({ QSize tmpValue = static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::viewportSizeHint(); new QSize(tmpValue.width(), tmpValue.height()); });
	}
}

void* QAbstractScrollArea_CornerWidget(void* ptr)
{
	return static_cast<QAbstractScrollArea*>(ptr)->cornerWidget();
}

void* QAbstractScrollArea_Viewport(void* ptr)
{
	return static_cast<QAbstractScrollArea*>(ptr)->viewport();
}

long long QAbstractScrollArea_HorizontalScrollBarPolicy(void* ptr)
{
	return static_cast<QAbstractScrollArea*>(ptr)->horizontalScrollBarPolicy();
}

long long QAbstractScrollArea_VerticalScrollBarPolicy(void* ptr)
{
	return static_cast<QAbstractScrollArea*>(ptr)->verticalScrollBarPolicy();
}

void* QAbstractScrollArea___scrollBarWidgets_atList(void* ptr, int i)
{
	return ({QWidget * tmp = static_cast<QList<QWidget *>*>(ptr)->at(i); if (i == static_cast<QList<QWidget *>*>(ptr)->size()-1) { static_cast<QList<QWidget *>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QAbstractScrollArea___scrollBarWidgets_setList(void* ptr, void* i)
{
		static_cast<QList<QWidget *>*>(ptr)->append(static_cast<QWidget*>(i));
}

void* QAbstractScrollArea___scrollBarWidgets_newList(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QWidget *>();
}

class MyQAbstractSlider: public QAbstractSlider
{
public:
	MyQAbstractSlider(QWidget *parent = Q_NULLPTR) : QAbstractSlider(parent) {QAbstractSlider_QAbstractSlider_QRegisterMetaType();};
	bool event(QEvent * e) { return callbackQWidget_Event(this, e) != 0; };
	void Signal_ActionTriggered(int action) { callbackQAbstractSlider_ActionTriggered(this, action); };
	void changeEvent(QEvent * ev) { callbackQWidget_ChangeEvent(this, ev); };
	void keyPressEvent(QKeyEvent * ev) { callbackQWidget_KeyPressEvent(this, ev); };
	void Signal_RangeChanged(int min, int max) { callbackQAbstractSlider_RangeChanged(this, min, max); };
	void setOrientation(Qt::Orientation vqt) { callbackQAbstractSlider_SetOrientation(this, vqt); };
	void setRange(int min, int max) { callbackQAbstractSlider_SetRange(this, min, max); };
	void setValue(int vin) { callbackQAbstractSlider_SetValue(this, vin); };
	void sliderChange(QAbstractSlider::SliderChange change) { callbackQAbstractSlider_SliderChange(this, change); };
	void Signal_SliderMoved(int value) { callbackQAbstractSlider_SliderMoved(this, value); };
	void Signal_SliderPressed() { callbackQAbstractSlider_SliderPressed(this); };
	void Signal_SliderReleased() { callbackQAbstractSlider_SliderReleased(this); };
	void timerEvent(QTimerEvent * e) { callbackQWidget_TimerEvent(this, e); };
	void Signal_ValueChanged(int value) { callbackQAbstractSlider_ValueChanged(this, value); };
	void wheelEvent(QWheelEvent * e) { callbackQWidget_WheelEvent(this, e); };
	 ~MyQAbstractSlider() { callbackQAbstractSlider_DestroyQAbstractSlider(this); };
	const QMetaObject * metaObject() const { return static_cast<QMetaObject*>(callbackQWidget_MetaObject(const_cast<void*>(static_cast<const void*>(this)))); };
	bool close() { return callbackQWidget_Close(this) != 0; };
	bool focusNextPrevChild(bool next) { return callbackQWidget_FocusNextPrevChild(this, next) != 0; };
	bool nativeEvent(const QByteArray & eventType, void * message, long * result) { return callbackQWidget_NativeEvent(this, const_cast<QByteArray*>(&eventType), message, result) != 0; };
	void actionEvent(QActionEvent * event) { callbackQWidget_ActionEvent(this, event); };
	void closeEvent(QCloseEvent * event) { callbackQWidget_CloseEvent(this, event); };
	void contextMenuEvent(QContextMenuEvent * event) { callbackQWidget_ContextMenuEvent(this, event); };
	void Signal_CustomContextMenuRequested(const QPoint & pos) { callbackQWidget_CustomContextMenuRequested(this, const_cast<QPoint*>(&pos)); };
	void dragEnterEvent(QDragEnterEvent * event) { callbackQWidget_DragEnterEvent(this, event); };
	void dragLeaveEvent(QDragLeaveEvent * event) { callbackQWidget_DragLeaveEvent(this, event); };
	void dragMoveEvent(QDragMoveEvent * event) { callbackQWidget_DragMoveEvent(this, event); };
	void dropEvent(QDropEvent * event) { callbackQWidget_DropEvent(this, event); };
	void enterEvent(QEvent * event) { callbackQWidget_EnterEvent(this, event); };
	void focusInEvent(QFocusEvent * event) { callbackQWidget_FocusInEvent(this, event); };
	void focusOutEvent(QFocusEvent * event) { callbackQWidget_FocusOutEvent(this, event); };
	void hide() { callbackQWidget_Hide(this); };
	void hideEvent(QHideEvent * event) { callbackQWidget_HideEvent(this, event); };
	void inputMethodEvent(QInputMethodEvent * event) { callbackQWidget_InputMethodEvent(this, event); };
	void keyReleaseEvent(QKeyEvent * event) { callbackQWidget_KeyReleaseEvent(this, event); };
	void leaveEvent(QEvent * event) { callbackQWidget_LeaveEvent(this, event); };
	void lower() { callbackQWidget_Lower(this); };
	void mouseDoubleClickEvent(QMouseEvent * event) { callbackQWidget_MouseDoubleClickEvent(this, event); };
	void mouseMoveEvent(QMouseEvent * event) { callbackQWidget_MouseMoveEvent(this, event); };
	void mousePressEvent(QMouseEvent * event) { callbackQWidget_MousePressEvent(this, event); };
	void mouseReleaseEvent(QMouseEvent * event) { callbackQWidget_MouseReleaseEvent(this, event); };
	void moveEvent(QMoveEvent * event) { callbackQWidget_MoveEvent(this, event); };
	void paintEvent(QPaintEvent * event) { callbackQWidget_PaintEvent(this, event); };
	void raise() { callbackQWidget_Raise(this); };
	void repaint() { callbackQWidget_Repaint(this); };
	void resizeEvent(QResizeEvent * event) { callbackQWidget_ResizeEvent(this, event); };
	void setDisabled(bool disable) { callbackQWidget_SetDisabled(this, disable); };
	void setEnabled(bool vbo) { callbackQWidget_SetEnabled(this, vbo); };
	void setFocus() { callbackQWidget_SetFocus2(this); };
	void setHidden(bool hidden) { callbackQWidget_SetHidden(this, hidden); };
	void setStyleSheet(const QString & styleSheet) { QByteArray t728ae7 = styleSheet.toUtf8(); QtWidgets_PackedString styleSheetPacked = { const_cast<char*>(t728ae7.prepend("WHITESPACE").constData()+10), t728ae7.size()-10 };callbackQWidget_SetStyleSheet(this, styleSheetPacked); };
	void setVisible(bool visible) { callbackQWidget_SetVisible(this, visible); };
	void setWindowModified(bool vbo) { callbackQWidget_SetWindowModified(this, vbo); };
	void setWindowTitle(const QString & vqs) { QByteArray tda39a3 = vqs.toUtf8(); QtWidgets_PackedString vqsPacked = { const_cast<char*>(tda39a3.prepend("WHITESPACE").constData()+10), tda39a3.size()-10 };callbackQWidget_SetWindowTitle(this, vqsPacked); };
	void show() { callbackQWidget_Show(this); };
	void showEvent(QShowEvent * event) { callbackQWidget_ShowEvent(this, event); };
	void showFullScreen() { callbackQWidget_ShowFullScreen(this); };
	void showMaximized() { callbackQWidget_ShowMaximized(this); };
	void showMinimized() { callbackQWidget_ShowMinimized(this); };
	void showNormal() { callbackQWidget_ShowNormal(this); };
	void tabletEvent(QTabletEvent * event) { callbackQWidget_TabletEvent(this, event); };
	void update() { callbackQWidget_Update(this); };
	void updateMicroFocus() { callbackQWidget_UpdateMicroFocus(this); };
	void Signal_WindowIconChanged(const QIcon & icon) { callbackQWidget_WindowIconChanged(this, const_cast<QIcon*>(&icon)); };
	void Signal_WindowTitleChanged(const QString & title) { QByteArray t3c6de1 = title.toUtf8(); QtWidgets_PackedString titlePacked = { const_cast<char*>(t3c6de1.prepend("WHITESPACE").constData()+10), t3c6de1.size()-10 };callbackQWidget_WindowTitleChanged(this, titlePacked); };
	QPaintEngine * paintEngine() const { return static_cast<QPaintEngine*>(callbackQWidget_PaintEngine(const_cast<void*>(static_cast<const void*>(this)))); };
	QSize minimumSizeHint() const { return *static_cast<QSize*>(callbackQWidget_MinimumSizeHint(const_cast<void*>(static_cast<const void*>(this)))); };
	QSize sizeHint() const { return *static_cast<QSize*>(callbackQWidget_SizeHint(const_cast<void*>(static_cast<const void*>(this)))); };
	QVariant inputMethodQuery(Qt::InputMethodQuery query) const { return *static_cast<QVariant*>(callbackQWidget_InputMethodQuery(const_cast<void*>(static_cast<const void*>(this)), query)); };
	bool hasHeightForWidth() const { return callbackQWidget_HasHeightForWidth(const_cast<void*>(static_cast<const void*>(this))) != 0; };
	int heightForWidth(int w) const { return callbackQWidget_HeightForWidth(const_cast<void*>(static_cast<const void*>(this)), w); };
	int metric(QPaintDevice::PaintDeviceMetric m) const { return callbackQWidget_Metric(const_cast<void*>(static_cast<const void*>(this)), m); };
	void initPainter(QPainter * painter) const { callbackQWidget_InitPainter(const_cast<void*>(static_cast<const void*>(this)), painter); };
	bool eventFilter(QObject * watched, QEvent * event) { return callbackQWidget_EventFilter(this, watched, event) != 0; };
	void childEvent(QChildEvent * event) { callbackQWidget_ChildEvent(this, event); };
	void connectNotify(const QMetaMethod & sign) { callbackQWidget_ConnectNotify(this, const_cast<QMetaMethod*>(&sign)); };
	void customEvent(QEvent * event) { callbackQWidget_CustomEvent(this, event); };
	void deleteLater() { callbackQWidget_DeleteLater(this); };
	void Signal_Destroyed(QObject * obj) { callbackQWidget_Destroyed(this, obj); };
	void disconnectNotify(const QMetaMethod & sign) { callbackQWidget_DisconnectNotify(this, const_cast<QMetaMethod*>(&sign)); };
	void Signal_ObjectNameChanged(const QString & objectName) { QByteArray taa2c4f = objectName.toUtf8(); QtWidgets_PackedString objectNamePacked = { const_cast<char*>(taa2c4f.prepend("WHITESPACE").constData()+10), taa2c4f.size()-10 };callbackQWidget_ObjectNameChanged(this, objectNamePacked); };
};

Q_DECLARE_METATYPE(QAbstractSlider*)
Q_DECLARE_METATYPE(MyQAbstractSlider*)

int QAbstractSlider_QAbstractSlider_QRegisterMetaType(){qRegisterMetaType<QAbstractSlider*>(); return qRegisterMetaType<MyQAbstractSlider*>();}

void* QAbstractSlider_NewQAbstractSlider(void* parent)
{
		return new MyQAbstractSlider(static_cast<QWidget*>(parent));
}

void QAbstractSlider_ConnectActionTriggered(void* ptr, long long t)
{
	QObject::connect(static_cast<QAbstractSlider*>(ptr), static_cast<void (QAbstractSlider::*)(int)>(&QAbstractSlider::actionTriggered), static_cast<MyQAbstractSlider*>(ptr), static_cast<void (MyQAbstractSlider::*)(int)>(&MyQAbstractSlider::Signal_ActionTriggered), static_cast<Qt::ConnectionType>(t));
}

void QAbstractSlider_DisconnectActionTriggered(void* ptr)
{
	QObject::disconnect(static_cast<QAbstractSlider*>(ptr), static_cast<void (QAbstractSlider::*)(int)>(&QAbstractSlider::actionTriggered), static_cast<MyQAbstractSlider*>(ptr), static_cast<void (MyQAbstractSlider::*)(int)>(&MyQAbstractSlider::Signal_ActionTriggered));
}

void QAbstractSlider_ActionTriggered(void* ptr, int action)
{
	static_cast<QAbstractSlider*>(ptr)->actionTriggered(action);
}

void QAbstractSlider_ConnectRangeChanged(void* ptr, long long t)
{
	QObject::connect(static_cast<QAbstractSlider*>(ptr), static_cast<void (QAbstractSlider::*)(int, int)>(&QAbstractSlider::rangeChanged), static_cast<MyQAbstractSlider*>(ptr), static_cast<void (MyQAbstractSlider::*)(int, int)>(&MyQAbstractSlider::Signal_RangeChanged), static_cast<Qt::ConnectionType>(t));
}

void QAbstractSlider_DisconnectRangeChanged(void* ptr)
{
	QObject::disconnect(static_cast<QAbstractSlider*>(ptr), static_cast<void (QAbstractSlider::*)(int, int)>(&QAbstractSlider::rangeChanged), static_cast<MyQAbstractSlider*>(ptr), static_cast<void (MyQAbstractSlider::*)(int, int)>(&MyQAbstractSlider::Signal_RangeChanged));
}

void QAbstractSlider_RangeChanged(void* ptr, int min, int max)
{
	static_cast<QAbstractSlider*>(ptr)->rangeChanged(min, max);
}

void QAbstractSlider_SetInvertedAppearance(void* ptr, char vbo)
{
	static_cast<QAbstractSlider*>(ptr)->setInvertedAppearance(vbo != 0);
}

void QAbstractSlider_SetInvertedControls(void* ptr, char vbo)
{
	static_cast<QAbstractSlider*>(ptr)->setInvertedControls(vbo != 0);
}

void QAbstractSlider_SetMaximum(void* ptr, int vin)
{
	static_cast<QAbstractSlider*>(ptr)->setMaximum(vin);
}

void QAbstractSlider_SetMinimum(void* ptr, int vin)
{
	static_cast<QAbstractSlider*>(ptr)->setMinimum(vin);
}

void QAbstractSlider_SetOrientation(void* ptr, long long vqt)
{
	qRegisterMetaType<Qt::Orientation>();
	QMetaObject::invokeMethod(static_cast<QAbstractSlider*>(ptr), "setOrientation", Q_ARG(Qt::Orientation, static_cast<Qt::Orientation>(vqt)));
}

void QAbstractSlider_SetOrientationDefault(void* ptr, long long vqt)
{
	if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::setOrientation(static_cast<Qt::Orientation>(vqt));
	} else {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::setOrientation(static_cast<Qt::Orientation>(vqt));
	}
}

void QAbstractSlider_SetPageStep(void* ptr, int vin)
{
	static_cast<QAbstractSlider*>(ptr)->setPageStep(vin);
}

void QAbstractSlider_SetRange(void* ptr, int min, int max)
{
	QMetaObject::invokeMethod(static_cast<QAbstractSlider*>(ptr), "setRange", Q_ARG(int, min), Q_ARG(int, max));
}

void QAbstractSlider_SetRangeDefault(void* ptr, int min, int max)
{
	if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::setRange(min, max);
	} else {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::setRange(min, max);
	}
}

void QAbstractSlider_SetRepeatAction(void* ptr, long long action, int thresholdTime, int repeatTime)
{
	static_cast<QAbstractSlider*>(ptr)->setRepeatAction(static_cast<QAbstractSlider::SliderAction>(action), thresholdTime, repeatTime);
}

void QAbstractSlider_SetSingleStep(void* ptr, int vin)
{
	static_cast<QAbstractSlider*>(ptr)->setSingleStep(vin);
}

void QAbstractSlider_SetSliderDown(void* ptr, char vbo)
{
	static_cast<QAbstractSlider*>(ptr)->setSliderDown(vbo != 0);
}

void QAbstractSlider_SetSliderPosition(void* ptr, int vin)
{
	static_cast<QAbstractSlider*>(ptr)->setSliderPosition(vin);
}

void QAbstractSlider_SetTracking(void* ptr, char enable)
{
	static_cast<QAbstractSlider*>(ptr)->setTracking(enable != 0);
}

void QAbstractSlider_SetValue(void* ptr, int vin)
{
	QMetaObject::invokeMethod(static_cast<QAbstractSlider*>(ptr), "setValue", Q_ARG(int, vin));
}

void QAbstractSlider_SetValueDefault(void* ptr, int vin)
{
	if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::setValue(vin);
	} else {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::setValue(vin);
	}
}

void QAbstractSlider_SliderChange(void* ptr, long long change)
{
	static_cast<QAbstractSlider*>(ptr)->sliderChange(static_cast<QAbstractSlider::SliderChange>(change));
}

void QAbstractSlider_SliderChangeDefault(void* ptr, long long change)
{
	if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::sliderChange(static_cast<QAbstractSlider::SliderChange>(change));
	} else {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::sliderChange(static_cast<QAbstractSlider::SliderChange>(change));
	}
}

void QAbstractSlider_ConnectSliderMoved(void* ptr, long long t)
{
	QObject::connect(static_cast<QAbstractSlider*>(ptr), static_cast<void (QAbstractSlider::*)(int)>(&QAbstractSlider::sliderMoved), static_cast<MyQAbstractSlider*>(ptr), static_cast<void (MyQAbstractSlider::*)(int)>(&MyQAbstractSlider::Signal_SliderMoved), static_cast<Qt::ConnectionType>(t));
}

void QAbstractSlider_DisconnectSliderMoved(void* ptr)
{
	QObject::disconnect(static_cast<QAbstractSlider*>(ptr), static_cast<void (QAbstractSlider::*)(int)>(&QAbstractSlider::sliderMoved), static_cast<MyQAbstractSlider*>(ptr), static_cast<void (MyQAbstractSlider::*)(int)>(&MyQAbstractSlider::Signal_SliderMoved));
}

void QAbstractSlider_SliderMoved(void* ptr, int value)
{
	static_cast<QAbstractSlider*>(ptr)->sliderMoved(value);
}

void QAbstractSlider_ConnectSliderPressed(void* ptr, long long t)
{
	QObject::connect(static_cast<QAbstractSlider*>(ptr), static_cast<void (QAbstractSlider::*)()>(&QAbstractSlider::sliderPressed), static_cast<MyQAbstractSlider*>(ptr), static_cast<void (MyQAbstractSlider::*)()>(&MyQAbstractSlider::Signal_SliderPressed), static_cast<Qt::ConnectionType>(t));
}

void QAbstractSlider_DisconnectSliderPressed(void* ptr)
{
	QObject::disconnect(static_cast<QAbstractSlider*>(ptr), static_cast<void (QAbstractSlider::*)()>(&QAbstractSlider::sliderPressed), static_cast<MyQAbstractSlider*>(ptr), static_cast<void (MyQAbstractSlider::*)()>(&MyQAbstractSlider::Signal_SliderPressed));
}

void QAbstractSlider_SliderPressed(void* ptr)
{
	static_cast<QAbstractSlider*>(ptr)->sliderPressed();
}

void QAbstractSlider_ConnectSliderReleased(void* ptr, long long t)
{
	QObject::connect(static_cast<QAbstractSlider*>(ptr), static_cast<void (QAbstractSlider::*)()>(&QAbstractSlider::sliderReleased), static_cast<MyQAbstractSlider*>(ptr), static_cast<void (MyQAbstractSlider::*)()>(&MyQAbstractSlider::Signal_SliderReleased), static_cast<Qt::ConnectionType>(t));
}

void QAbstractSlider_DisconnectSliderReleased(void* ptr)
{
	QObject::disconnect(static_cast<QAbstractSlider*>(ptr), static_cast<void (QAbstractSlider::*)()>(&QAbstractSlider::sliderReleased), static_cast<MyQAbstractSlider*>(ptr), static_cast<void (MyQAbstractSlider::*)()>(&MyQAbstractSlider::Signal_SliderReleased));
}

void QAbstractSlider_SliderReleased(void* ptr)
{
	static_cast<QAbstractSlider*>(ptr)->sliderReleased();
}

void QAbstractSlider_TriggerAction(void* ptr, long long action)
{
	static_cast<QAbstractSlider*>(ptr)->triggerAction(static_cast<QAbstractSlider::SliderAction>(action));
}

void QAbstractSlider_ConnectValueChanged(void* ptr, long long t)
{
	QObject::connect(static_cast<QAbstractSlider*>(ptr), static_cast<void (QAbstractSlider::*)(int)>(&QAbstractSlider::valueChanged), static_cast<MyQAbstractSlider*>(ptr), static_cast<void (MyQAbstractSlider::*)(int)>(&MyQAbstractSlider::Signal_ValueChanged), static_cast<Qt::ConnectionType>(t));
}

void QAbstractSlider_DisconnectValueChanged(void* ptr)
{
	QObject::disconnect(static_cast<QAbstractSlider*>(ptr), static_cast<void (QAbstractSlider::*)(int)>(&QAbstractSlider::valueChanged), static_cast<MyQAbstractSlider*>(ptr), static_cast<void (MyQAbstractSlider::*)(int)>(&MyQAbstractSlider::Signal_ValueChanged));
}

void QAbstractSlider_ValueChanged(void* ptr, int value)
{
	static_cast<QAbstractSlider*>(ptr)->valueChanged(value);
}

void QAbstractSlider_DestroyQAbstractSlider(void* ptr)
{
	static_cast<QAbstractSlider*>(ptr)->~QAbstractSlider();
}

void QAbstractSlider_DestroyQAbstractSliderDefault(void* ptr)
{
	Q_UNUSED(ptr);

}

long long QAbstractSlider_RepeatAction(void* ptr)
{
	return static_cast<QAbstractSlider*>(ptr)->repeatAction();
}

long long QAbstractSlider_Orientation(void* ptr)
{
	return static_cast<QAbstractSlider*>(ptr)->orientation();
}

char QAbstractSlider_HasTracking(void* ptr)
{
	return static_cast<QAbstractSlider*>(ptr)->hasTracking();
}

char QAbstractSlider_InvertedAppearance(void* ptr)
{
	return static_cast<QAbstractSlider*>(ptr)->invertedAppearance();
}

char QAbstractSlider_InvertedControls(void* ptr)
{
	return static_cast<QAbstractSlider*>(ptr)->invertedControls();
}

char QAbstractSlider_IsSliderDown(void* ptr)
{
	return static_cast<QAbstractSlider*>(ptr)->isSliderDown();
}

int QAbstractSlider_Maximum(void* ptr)
{
	return static_cast<QAbstractSlider*>(ptr)->maximum();
}

int QAbstractSlider_Minimum(void* ptr)
{
	return static_cast<QAbstractSlider*>(ptr)->minimum();
}

int QAbstractSlider_PageStep(void* ptr)
{
	return static_cast<QAbstractSlider*>(ptr)->pageStep();
}

int QAbstractSlider_SingleStep(void* ptr)
{
	return static_cast<QAbstractSlider*>(ptr)->singleStep();
}

int QAbstractSlider_SliderPosition(void* ptr)
{
	return static_cast<QAbstractSlider*>(ptr)->sliderPosition();
}

int QAbstractSlider_Value(void* ptr)
{
	return static_cast<QAbstractSlider*>(ptr)->value();
}

class MyQAction: public QAction
{
public:
	MyQAction(QObject *parent = Q_NULLPTR) : QAction(parent) {QAction_QAction_QRegisterMetaType();};
	MyQAction(const QIcon &icon, const QString &text, QObject *parent = Q_NULLPTR) : QAction(icon, text, parent) {QAction_QAction_QRegisterMetaType();};
	MyQAction(const QString &text, QObject *parent = Q_NULLPTR) : QAction(text, parent) {QAction_QAction_QRegisterMetaType();};
	bool event(QEvent * e) { return callbackQAction_Event(this, e) != 0; };
	void Signal_Changed() { callbackQAction_Changed(this); };
	void hover() { callbackQAction_Hover(this); };
	void Signal_Hovered() { callbackQAction_Hovered(this); };
	void setChecked(bool vbo) { callbackQAction_SetChecked(this, vbo); };
	void setDisabled(bool b) { callbackQAction_SetDisabled(this, b); };
	void setEnabled(bool vbo) { callbackQAction_SetEnabled(this, vbo); };
	void setVisible(bool vbo) { callbackQAction_SetVisible(this, vbo); };
	void toggle() { callbackQAction_Toggle(this); };
	void Signal_Toggled(bool checked) { callbackQAction_Toggled(this, checked); };
	void trigger() { callbackQAction_Trigger(this); };
	void Signal_Triggered(bool checked) { callbackQAction_Triggered(this, checked); };
	 ~MyQAction() { callbackQAction_DestroyQAction(this); };
	const QMetaObject * metaObject() const { return static_cast<QMetaObject*>(callbackQAction_MetaObject(const_cast<void*>(static_cast<const void*>(this)))); };
	bool eventFilter(QObject * watched, QEvent * event) { return callbackQAction_EventFilter(this, watched, event) != 0; };
	void childEvent(QChildEvent * event) { callbackQAction_ChildEvent(this, event); };
	void connectNotify(const QMetaMethod & sign) { callbackQAction_ConnectNotify(this, const_cast<QMetaMethod*>(&sign)); };
	void customEvent(QEvent * event) { callbackQAction_CustomEvent(this, event); };
	void deleteLater() { callbackQAction_DeleteLater(this); };
	void Signal_Destroyed(QObject * obj) { callbackQAction_Destroyed(this, obj); };
	void disconnectNotify(const QMetaMethod & sign) { callbackQAction_DisconnectNotify(this, const_cast<QMetaMethod*>(&sign)); };
	void Signal_ObjectNameChanged(const QString & objectName) { QByteArray taa2c4f = objectName.toUtf8(); QtWidgets_PackedString objectNamePacked = { const_cast<char*>(taa2c4f.prepend("WHITESPACE").constData()+10), taa2c4f.size()-10 };callbackQAction_ObjectNameChanged(this, objectNamePacked); };
	void timerEvent(QTimerEvent * event) { callbackQAction_TimerEvent(this, event); };
};

Q_DECLARE_METATYPE(QAction*)
Q_DECLARE_METATYPE(MyQAction*)

int QAction_QAction_QRegisterMetaType(){qRegisterMetaType<QAction*>(); return qRegisterMetaType<MyQAction*>();}

void* QAction_NewQAction(void* parent)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(parent))) {
		return new MyQAction(static_cast<QGraphicsObject*>(parent));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(parent))) {
		return new MyQAction(static_cast<QGraphicsWidget*>(parent));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(parent))) {
		return new MyQAction(static_cast<QLayout*>(parent));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(parent))) {
		return new MyQAction(static_cast<QWidget*>(parent));
	} else if (dynamic_cast<QWindow*>(static_cast<QObject*>(parent))) {
		return new MyQAction(static_cast<QWindow*>(parent));
	} else {
		return new MyQAction(static_cast<QObject*>(parent));
	}
}

void* QAction_NewQAction3(void* icon, struct QtWidgets_PackedString text, void* parent)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(parent))) {
		return new MyQAction(*static_cast<QIcon*>(icon), QString::fromUtf8(text.data, text.len), static_cast<QGraphicsObject*>(parent));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(parent))) {
		return new MyQAction(*static_cast<QIcon*>(icon), QString::fromUtf8(text.data, text.len), static_cast<QGraphicsWidget*>(parent));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(parent))) {
		return new MyQAction(*static_cast<QIcon*>(icon), QString::fromUtf8(text.data, text.len), static_cast<QLayout*>(parent));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(parent))) {
		return new MyQAction(*static_cast<QIcon*>(icon), QString::fromUtf8(text.data, text.len), static_cast<QWidget*>(parent));
	} else if (dynamic_cast<QWindow*>(static_cast<QObject*>(parent))) {
		return new MyQAction(*static_cast<QIcon*>(icon), QString::fromUtf8(text.data, text.len), static_cast<QWindow*>(parent));
	} else {
		return new MyQAction(*static_cast<QIcon*>(icon), QString::fromUtf8(text.data, text.len), static_cast<QObject*>(parent));
	}
}

void* QAction_NewQAction2(struct QtWidgets_PackedString text, void* parent)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(parent))) {
		return new MyQAction(QString::fromUtf8(text.data, text.len), static_cast<QGraphicsObject*>(parent));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(parent))) {
		return new MyQAction(QString::fromUtf8(text.data, text.len), static_cast<QGraphicsWidget*>(parent));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(parent))) {
		return new MyQAction(QString::fromUtf8(text.data, text.len), static_cast<QLayout*>(parent));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(parent))) {
		return new MyQAction(QString::fromUtf8(text.data, text.len), static_cast<QWidget*>(parent));
	} else if (dynamic_cast<QWindow*>(static_cast<QObject*>(parent))) {
		return new MyQAction(QString::fromUtf8(text.data, text.len), static_cast<QWindow*>(parent));
	} else {
		return new MyQAction(QString::fromUtf8(text.data, text.len), static_cast<QObject*>(parent));
	}
}

struct QtWidgets_PackedString QAction_QAction_Tr(char* s, char* c, int n)
{
	return ({ QByteArray t69ee3c = QAction::tr(const_cast<const char*>(s), const_cast<const char*>(c), n).toUtf8(); QtWidgets_PackedString { const_cast<char*>(t69ee3c.prepend("WHITESPACE").constData()+10), t69ee3c.size()-10 }; });
}

char QAction_EventDefault(void* ptr, void* e)
{
		return static_cast<QAction*>(ptr)->QAction::event(static_cast<QEvent*>(e));
}

char QAction_ShowStatusText(void* ptr, void* widget)
{
		return static_cast<QAction*>(ptr)->showStatusText(static_cast<QWidget*>(widget));
}

void QAction_Activate(void* ptr, long long event)
{
	static_cast<QAction*>(ptr)->activate(static_cast<QAction::ActionEvent>(event));
}

void QAction_ConnectChanged(void* ptr, long long t)
{
	QObject::connect(static_cast<QAction*>(ptr), static_cast<void (QAction::*)()>(&QAction::changed), static_cast<MyQAction*>(ptr), static_cast<void (MyQAction::*)()>(&MyQAction::Signal_Changed), static_cast<Qt::ConnectionType>(t));
}

void QAction_DisconnectChanged(void* ptr)
{
	QObject::disconnect(static_cast<QAction*>(ptr), static_cast<void (QAction::*)()>(&QAction::changed), static_cast<MyQAction*>(ptr), static_cast<void (MyQAction::*)()>(&MyQAction::Signal_Changed));
}

void QAction_Changed(void* ptr)
{
	static_cast<QAction*>(ptr)->changed();
}

void QAction_Hover(void* ptr)
{
	QMetaObject::invokeMethod(static_cast<QAction*>(ptr), "hover");
}

void QAction_HoverDefault(void* ptr)
{
		static_cast<QAction*>(ptr)->QAction::hover();
}

void QAction_ConnectHovered(void* ptr, long long t)
{
	QObject::connect(static_cast<QAction*>(ptr), static_cast<void (QAction::*)()>(&QAction::hovered), static_cast<MyQAction*>(ptr), static_cast<void (MyQAction::*)()>(&MyQAction::Signal_Hovered), static_cast<Qt::ConnectionType>(t));
}

void QAction_DisconnectHovered(void* ptr)
{
	QObject::disconnect(static_cast<QAction*>(ptr), static_cast<void (QAction::*)()>(&QAction::hovered), static_cast<MyQAction*>(ptr), static_cast<void (MyQAction::*)()>(&MyQAction::Signal_Hovered));
}

void QAction_Hovered(void* ptr)
{
	static_cast<QAction*>(ptr)->hovered();
}

void QAction_SetActionGroup(void* ptr, void* group)
{
	static_cast<QAction*>(ptr)->setActionGroup(static_cast<QActionGroup*>(group));
}

void QAction_SetAutoRepeat(void* ptr, char vbo)
{
	static_cast<QAction*>(ptr)->setAutoRepeat(vbo != 0);
}

void QAction_SetCheckable(void* ptr, char vbo)
{
	static_cast<QAction*>(ptr)->setCheckable(vbo != 0);
}

void QAction_SetChecked(void* ptr, char vbo)
{
	QMetaObject::invokeMethod(static_cast<QAction*>(ptr), "setChecked", Q_ARG(bool, vbo != 0));
}

void QAction_SetCheckedDefault(void* ptr, char vbo)
{
		static_cast<QAction*>(ptr)->QAction::setChecked(vbo != 0);
}

void QAction_SetData(void* ptr, void* userData)
{
	static_cast<QAction*>(ptr)->setData(*static_cast<QVariant*>(userData));
}

void QAction_SetDisabled(void* ptr, char b)
{
	QMetaObject::invokeMethod(static_cast<QAction*>(ptr), "setDisabled", Q_ARG(bool, b != 0));
}

void QAction_SetDisabledDefault(void* ptr, char b)
{
		static_cast<QAction*>(ptr)->QAction::setDisabled(b != 0);
}

void QAction_SetEnabled(void* ptr, char vbo)
{
	QMetaObject::invokeMethod(static_cast<QAction*>(ptr), "setEnabled", Q_ARG(bool, vbo != 0));
}

void QAction_SetEnabledDefault(void* ptr, char vbo)
{
		static_cast<QAction*>(ptr)->QAction::setEnabled(vbo != 0);
}

void QAction_SetFont(void* ptr, void* font)
{
	static_cast<QAction*>(ptr)->setFont(*static_cast<QFont*>(font));
}

void QAction_SetIcon(void* ptr, void* icon)
{
	static_cast<QAction*>(ptr)->setIcon(*static_cast<QIcon*>(icon));
}

void QAction_SetIconText(void* ptr, struct QtWidgets_PackedString text)
{
	static_cast<QAction*>(ptr)->setIconText(QString::fromUtf8(text.data, text.len));
}

void QAction_SetIconVisibleInMenu(void* ptr, char visible)
{
	static_cast<QAction*>(ptr)->setIconVisibleInMenu(visible != 0);
}

void QAction_SetMenu(void* ptr, void* menu)
{
	static_cast<QAction*>(ptr)->setMenu(static_cast<QMenu*>(menu));
}

void QAction_SetMenuRole(void* ptr, long long menuRole)
{
	static_cast<QAction*>(ptr)->setMenuRole(static_cast<QAction::MenuRole>(menuRole));
}

void QAction_SetPriority(void* ptr, long long priority)
{
	static_cast<QAction*>(ptr)->setPriority(static_cast<QAction::Priority>(priority));
}

void QAction_SetSeparator(void* ptr, char b)
{
	static_cast<QAction*>(ptr)->setSeparator(b != 0);
}

void QAction_SetShortcut(void* ptr, void* shortcut)
{
	static_cast<QAction*>(ptr)->setShortcut(*static_cast<QKeySequence*>(shortcut));
}

void QAction_SetShortcutContext(void* ptr, long long context)
{
	static_cast<QAction*>(ptr)->setShortcutContext(static_cast<Qt::ShortcutContext>(context));
}

void QAction_SetShortcutVisibleInContextMenu(void* ptr, char show)
{
	static_cast<QAction*>(ptr)->setShortcutVisibleInContextMenu(show != 0);
}

void QAction_SetShortcuts2(void* ptr, long long key)
{
	static_cast<QAction*>(ptr)->setShortcuts(static_cast<QKeySequence::StandardKey>(key));
}

void QAction_SetShortcuts(void* ptr, void* shortcuts)
{
	static_cast<QAction*>(ptr)->setShortcuts(*static_cast<QList<QKeySequence>*>(shortcuts));
}

void QAction_SetStatusTip(void* ptr, struct QtWidgets_PackedString statusTip)
{
	static_cast<QAction*>(ptr)->setStatusTip(QString::fromUtf8(statusTip.data, statusTip.len));
}

void QAction_SetText(void* ptr, struct QtWidgets_PackedString text)
{
	static_cast<QAction*>(ptr)->setText(QString::fromUtf8(text.data, text.len));
}

void QAction_SetToolTip(void* ptr, struct QtWidgets_PackedString tip)
{
	static_cast<QAction*>(ptr)->setToolTip(QString::fromUtf8(tip.data, tip.len));
}

void QAction_SetVisible(void* ptr, char vbo)
{
	QMetaObject::invokeMethod(static_cast<QAction*>(ptr), "setVisible", Q_ARG(bool, vbo != 0));
}

void QAction_SetVisibleDefault(void* ptr, char vbo)
{
		static_cast<QAction*>(ptr)->QAction::setVisible(vbo != 0);
}

void QAction_SetWhatsThis(void* ptr, struct QtWidgets_PackedString what)
{
	static_cast<QAction*>(ptr)->setWhatsThis(QString::fromUtf8(what.data, what.len));
}

void QAction_Toggle(void* ptr)
{
	QMetaObject::invokeMethod(static_cast<QAction*>(ptr), "toggle");
}

void QAction_ToggleDefault(void* ptr)
{
		static_cast<QAction*>(ptr)->QAction::toggle();
}

void QAction_ConnectToggled(void* ptr, long long t)
{
	QObject::connect(static_cast<QAction*>(ptr), static_cast<void (QAction::*)(bool)>(&QAction::toggled), static_cast<MyQAction*>(ptr), static_cast<void (MyQAction::*)(bool)>(&MyQAction::Signal_Toggled), static_cast<Qt::ConnectionType>(t));
}

void QAction_DisconnectToggled(void* ptr)
{
	QObject::disconnect(static_cast<QAction*>(ptr), static_cast<void (QAction::*)(bool)>(&QAction::toggled), static_cast<MyQAction*>(ptr), static_cast<void (MyQAction::*)(bool)>(&MyQAction::Signal_Toggled));
}

void QAction_Toggled(void* ptr, char checked)
{
	static_cast<QAction*>(ptr)->toggled(checked != 0);
}

void QAction_Trigger(void* ptr)
{
	QMetaObject::invokeMethod(static_cast<QAction*>(ptr), "trigger");
}

void QAction_TriggerDefault(void* ptr)
{
		static_cast<QAction*>(ptr)->QAction::trigger();
}

void QAction_ConnectTriggered(void* ptr, long long t)
{
	QObject::connect(static_cast<QAction*>(ptr), static_cast<void (QAction::*)(bool)>(&QAction::triggered), static_cast<MyQAction*>(ptr), static_cast<void (MyQAction::*)(bool)>(&MyQAction::Signal_Triggered), static_cast<Qt::ConnectionType>(t));
}

void QAction_DisconnectTriggered(void* ptr)
{
	QObject::disconnect(static_cast<QAction*>(ptr), static_cast<void (QAction::*)(bool)>(&QAction::triggered), static_cast<MyQAction*>(ptr), static_cast<void (MyQAction::*)(bool)>(&MyQAction::Signal_Triggered));
}

void QAction_Triggered(void* ptr, char checked)
{
	static_cast<QAction*>(ptr)->triggered(checked != 0);
}

void QAction_DestroyQAction(void* ptr)
{
	static_cast<QAction*>(ptr)->~QAction();
}

void QAction_DestroyQActionDefault(void* ptr)
{
	Q_UNUSED(ptr);

}

long long QAction_MenuRole(void* ptr)
{
	return static_cast<QAction*>(ptr)->menuRole();
}

long long QAction_Priority(void* ptr)
{
	return static_cast<QAction*>(ptr)->priority();
}

void* QAction_ActionGroup(void* ptr)
{
	return static_cast<QAction*>(ptr)->actionGroup();
}

void* QAction_Font(void* ptr)
{
	return new QFont(static_cast<QAction*>(ptr)->font());
}

void* QAction_Icon(void* ptr)
{
	return new QIcon(static_cast<QAction*>(ptr)->icon());
}

void* QAction_Shortcut(void* ptr)
{
	return new QKeySequence(static_cast<QAction*>(ptr)->shortcut());
}

struct QtWidgets_PackedList QAction_AssociatedGraphicsWidgets(void* ptr)
{
	return ({ QList<QGraphicsWidget *>* tmpValue7c7d2b = new QList<QGraphicsWidget *>(static_cast<QAction*>(ptr)->associatedGraphicsWidgets()); QtWidgets_PackedList { tmpValue7c7d2b, tmpValue7c7d2b->size() }; });
}

struct QtWidgets_PackedList QAction_Shortcuts(void* ptr)
{
	return ({ QList<QKeySequence>* tmpValue30197e = new QList<QKeySequence>(static_cast<QAction*>(ptr)->shortcuts()); QtWidgets_PackedList { tmpValue30197e, tmpValue30197e->size() }; });
}

struct QtWidgets_PackedList QAction_AssociatedWidgets(void* ptr)
{
	return ({ QList<QWidget *>* tmpValue85cee4 = new QList<QWidget *>(static_cast<QAction*>(ptr)->associatedWidgets()); QtWidgets_PackedList { tmpValue85cee4, tmpValue85cee4->size() }; });
}

void* QAction_Menu(void* ptr)
{
	return static_cast<QAction*>(ptr)->menu();
}

struct QtWidgets_PackedString QAction_IconText(void* ptr)
{
	return ({ QByteArray t6729e1 = static_cast<QAction*>(ptr)->iconText().toUtf8(); QtWidgets_PackedString { const_cast<char*>(t6729e1.prepend("WHITESPACE").constData()+10), t6729e1.size()-10 }; });
}

struct QtWidgets_PackedString QAction_StatusTip(void* ptr)
{
	return ({ QByteArray t5e64a4 = static_cast<QAction*>(ptr)->statusTip().toUtf8(); QtWidgets_PackedString { const_cast<char*>(t5e64a4.prepend("WHITESPACE").constData()+10), t5e64a4.size()-10 }; });
}

struct QtWidgets_PackedString QAction_Text(void* ptr)
{
	return ({ QByteArray t0f57fa = static_cast<QAction*>(ptr)->text().toUtf8(); QtWidgets_PackedString { const_cast<char*>(t0f57fa.prepend("WHITESPACE").constData()+10), t0f57fa.size()-10 }; });
}

struct QtWidgets_PackedString QAction_ToolTip(void* ptr)
{
	return ({ QByteArray td308d4 = static_cast<QAction*>(ptr)->toolTip().toUtf8(); QtWidgets_PackedString { const_cast<char*>(td308d4.prepend("WHITESPACE").constData()+10), td308d4.size()-10 }; });
}

struct QtWidgets_PackedString QAction_WhatsThis(void* ptr)
{
	return ({ QByteArray tba6af8 = static_cast<QAction*>(ptr)->whatsThis().toUtf8(); QtWidgets_PackedString { const_cast<char*>(tba6af8.prepend("WHITESPACE").constData()+10), tba6af8.size()-10 }; });
}

void* QAction_Data(void* ptr)
{
	return new QVariant(static_cast<QAction*>(ptr)->data());
}

void* QAction_ParentWidget(void* ptr)
{
	return static_cast<QAction*>(ptr)->parentWidget();
}

long long QAction_ShortcutContext(void* ptr)
{
	return static_cast<QAction*>(ptr)->shortcutContext();
}

char QAction_AutoRepeat(void* ptr)
{
	return static_cast<QAction*>(ptr)->autoRepeat();
}

char QAction_IsCheckable(void* ptr)
{
	return static_cast<QAction*>(ptr)->isCheckable();
}

char QAction_IsChecked(void* ptr)
{
	return static_cast<QAction*>(ptr)->isChecked();
}

char QAction_IsEnabled(void* ptr)
{
	return static_cast<QAction*>(ptr)->isEnabled();
}

char QAction_IsIconVisibleInMenu(void* ptr)
{
	return static_cast<QAction*>(ptr)->isIconVisibleInMenu();
}

char QAction_IsSeparator(void* ptr)
{
	return static_cast<QAction*>(ptr)->isSeparator();
}

char QAction_IsShortcutVisibleInContextMenu(void* ptr)
{
	return static_cast<QAction*>(ptr)->isShortcutVisibleInContextMenu();
}

char QAction_IsVisible(void* ptr)
{
	return static_cast<QAction*>(ptr)->isVisible();
}

void* QAction_MetaObjectDefault(void* ptr)
{
		return const_cast<QMetaObject*>(static_cast<QAction*>(ptr)->QAction::metaObject());
}

void* QAction___setShortcuts_shortcuts_atList(void* ptr, int i)
{
	return new QKeySequence(({QKeySequence tmp = static_cast<QList<QKeySequence>*>(ptr)->at(i); if (i == static_cast<QList<QKeySequence>*>(ptr)->size()-1) { static_cast<QList<QKeySequence>*>(ptr)->~QList(); free(ptr); }; tmp; }));
}

void QAction___setShortcuts_shortcuts_setList(void* ptr, void* i)
{
	static_cast<QList<QKeySequence>*>(ptr)->append(*static_cast<QKeySequence*>(i));
}

void* QAction___setShortcuts_shortcuts_newList(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QKeySequence>();
}

void* QAction___associatedGraphicsWidgets_atList(void* ptr, int i)
{
	return ({QGraphicsWidget * tmp = static_cast<QList<QGraphicsWidget *>*>(ptr)->at(i); if (i == static_cast<QList<QGraphicsWidget *>*>(ptr)->size()-1) { static_cast<QList<QGraphicsWidget *>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QAction___associatedGraphicsWidgets_setList(void* ptr, void* i)
{
		static_cast<QList<QGraphicsWidget *>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
}

void* QAction___associatedGraphicsWidgets_newList(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QGraphicsWidget *>();
}

void* QAction___shortcuts_atList(void* ptr, int i)
{
	return new QKeySequence(({QKeySequence tmp = static_cast<QList<QKeySequence>*>(ptr)->at(i); if (i == static_cast<QList<QKeySequence>*>(ptr)->size()-1) { static_cast<QList<QKeySequence>*>(ptr)->~QList(); free(ptr); }; tmp; }));
}

void QAction___shortcuts_setList(void* ptr, void* i)
{
	static_cast<QList<QKeySequence>*>(ptr)->append(*static_cast<QKeySequence*>(i));
}

void* QAction___shortcuts_newList(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QKeySequence>();
}

void* QAction___associatedWidgets_atList(void* ptr, int i)
{
	return ({QWidget * tmp = static_cast<QList<QWidget *>*>(ptr)->at(i); if (i == static_cast<QList<QWidget *>*>(ptr)->size()-1) { static_cast<QList<QWidget *>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QAction___associatedWidgets_setList(void* ptr, void* i)
{
		static_cast<QList<QWidget *>*>(ptr)->append(static_cast<QWidget*>(i));
}

void* QAction___associatedWidgets_newList(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QWidget *>();
}

void* QAction___dynamicPropertyNames_atList(void* ptr, int i)
{
	return new QByteArray(({QByteArray tmp = static_cast<QList<QByteArray>*>(ptr)->at(i); if (i == static_cast<QList<QByteArray>*>(ptr)->size()-1) { static_cast<QList<QByteArray>*>(ptr)->~QList(); free(ptr); }; tmp; }));
}

void QAction___dynamicPropertyNames_setList(void* ptr, void* i)
{
	static_cast<QList<QByteArray>*>(ptr)->append(*static_cast<QByteArray*>(i));
}

void* QAction___dynamicPropertyNames_newList(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QByteArray>();
}

void* QAction___findChildren_atList2(void* ptr, int i)
{
	return ({QObject* tmp = static_cast<QList<QObject*>*>(ptr)->at(i); if (i == static_cast<QList<QObject*>*>(ptr)->size()-1) { static_cast<QList<QObject*>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QAction___findChildren_setList2(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QLayout*>(i));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QWidget*>(i));
	} else {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QObject*>(i));
	}
}

void* QAction___findChildren_newList2(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QObject*>();
}

void* QAction___findChildren_atList3(void* ptr, int i)
{
	return ({QObject* tmp = static_cast<QList<QObject*>*>(ptr)->at(i); if (i == static_cast<QList<QObject*>*>(ptr)->size()-1) { static_cast<QList<QObject*>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QAction___findChildren_setList3(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QLayout*>(i));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QWidget*>(i));
	} else {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QObject*>(i));
	}
}

void* QAction___findChildren_newList3(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QObject*>();
}

void* QAction___findChildren_atList(void* ptr, int i)
{
	return ({QObject* tmp = static_cast<QList<QObject*>*>(ptr)->at(i); if (i == static_cast<QList<QObject*>*>(ptr)->size()-1) { static_cast<QList<QObject*>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QAction___findChildren_setList(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QLayout*>(i));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QWidget*>(i));
	} else {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QObject*>(i));
	}
}

void* QAction___findChildren_newList(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QObject*>();
}

void* QAction___children_atList(void* ptr, int i)
{
	return ({QObject * tmp = static_cast<QList<QObject *>*>(ptr)->at(i); if (i == static_cast<QList<QObject *>*>(ptr)->size()-1) { static_cast<QList<QObject *>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QAction___children_setList(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject *>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject *>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject *>*>(ptr)->append(static_cast<QLayout*>(i));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject *>*>(ptr)->append(static_cast<QWidget*>(i));
	} else {
		static_cast<QList<QObject *>*>(ptr)->append(static_cast<QObject*>(i));
	}
}

void* QAction___children_newList(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QObject *>();
}

char QAction_EventFilterDefault(void* ptr, void* watched, void* event)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(watched))) {
		return static_cast<QAction*>(ptr)->QAction::eventFilter(static_cast<QGraphicsObject*>(watched), static_cast<QEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(watched))) {
		return static_cast<QAction*>(ptr)->QAction::eventFilter(static_cast<QGraphicsWidget*>(watched), static_cast<QEvent*>(event));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(watched))) {
		return static_cast<QAction*>(ptr)->QAction::eventFilter(static_cast<QLayout*>(watched), static_cast<QEvent*>(event));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(watched))) {
		return static_cast<QAction*>(ptr)->QAction::eventFilter(static_cast<QWidget*>(watched), static_cast<QEvent*>(event));
	} else {
		return static_cast<QAction*>(ptr)->QAction::eventFilter(static_cast<QObject*>(watched), static_cast<QEvent*>(event));
	}
}

void QAction_ChildEventDefault(void* ptr, void* event)
{
		static_cast<QAction*>(ptr)->QAction::childEvent(static_cast<QChildEvent*>(event));
}

void QAction_ConnectNotifyDefault(void* ptr, void* sign)
{
		static_cast<QAction*>(ptr)->QAction::connectNotify(*static_cast<QMetaMethod*>(sign));
}

void QAction_CustomEventDefault(void* ptr, void* event)
{
		static_cast<QAction*>(ptr)->QAction::customEvent(static_cast<QEvent*>(event));
}

void QAction_DeleteLaterDefault(void* ptr)
{
		static_cast<QAction*>(ptr)->QAction::deleteLater();
}

void QAction_DisconnectNotifyDefault(void* ptr, void* sign)
{
		static_cast<QAction*>(ptr)->QAction::disconnectNotify(*static_cast<QMetaMethod*>(sign));
}

void QAction_TimerEventDefault(void* ptr, void* event)
{
		static_cast<QAction*>(ptr)->QAction::timerEvent(static_cast<QTimerEvent*>(event));
}

class MyQActionGroup: public QActionGroup
{
public:
	MyQActionGroup(QObject *parent) : QActionGroup(parent) {QActionGroup_QActionGroup_QRegisterMetaType();};
	void Signal_Hovered(QAction * action) { callbackQActionGroup_Hovered(this, action); };
	void setDisabled(bool b) { callbackQActionGroup_SetDisabled(this, b); };
	void setEnabled(bool vbo) { callbackQActionGroup_SetEnabled(this, vbo); };
	void setExclusive(bool vbo) { callbackQActionGroup_SetExclusive(this, vbo); };
	void setVisible(bool vbo) { callbackQActionGroup_SetVisible(this, vbo); };
	void Signal_Triggered(QAction * action) { callbackQActionGroup_Triggered(this, action); };
	 ~MyQActionGroup() { callbackQActionGroup_DestroyQActionGroup(this); };
	const QMetaObject * metaObject() const { return static_cast<QMetaObject*>(callbackQActionGroup_MetaObject(const_cast<void*>(static_cast<const void*>(this)))); };
	bool event(QEvent * e) { return callbackQActionGroup_Event(this, e) != 0; };
	bool eventFilter(QObject * watched, QEvent * event) { return callbackQActionGroup_EventFilter(this, watched, event) != 0; };
	void childEvent(QChildEvent * event) { callbackQActionGroup_ChildEvent(this, event); };
	void connectNotify(const QMetaMethod & sign) { callbackQActionGroup_ConnectNotify(this, const_cast<QMetaMethod*>(&sign)); };
	void customEvent(QEvent * event) { callbackQActionGroup_CustomEvent(this, event); };
	void deleteLater() { callbackQActionGroup_DeleteLater(this); };
	void Signal_Destroyed(QObject * obj) { callbackQActionGroup_Destroyed(this, obj); };
	void disconnectNotify(const QMetaMethod & sign) { callbackQActionGroup_DisconnectNotify(this, const_cast<QMetaMethod*>(&sign)); };
	void Signal_ObjectNameChanged(const QString & objectName) { QByteArray taa2c4f = objectName.toUtf8(); QtWidgets_PackedString objectNamePacked = { const_cast<char*>(taa2c4f.prepend("WHITESPACE").constData()+10), taa2c4f.size()-10 };callbackQActionGroup_ObjectNameChanged(this, objectNamePacked); };
	void timerEvent(QTimerEvent * event) { callbackQActionGroup_TimerEvent(this, event); };
};

Q_DECLARE_METATYPE(QActionGroup*)
Q_DECLARE_METATYPE(MyQActionGroup*)

int QActionGroup_QActionGroup_QRegisterMetaType(){qRegisterMetaType<QActionGroup*>(); return qRegisterMetaType<MyQActionGroup*>();}

void* QActionGroup_AddAction(void* ptr, void* action)
{
	return static_cast<QActionGroup*>(ptr)->addAction(static_cast<QAction*>(action));
}

void* QActionGroup_AddAction3(void* ptr, void* icon, struct QtWidgets_PackedString text)
{
	return static_cast<QActionGroup*>(ptr)->addAction(*static_cast<QIcon*>(icon), QString::fromUtf8(text.data, text.len));
}

void* QActionGroup_AddAction2(void* ptr, struct QtWidgets_PackedString text)
{
	return static_cast<QActionGroup*>(ptr)->addAction(QString::fromUtf8(text.data, text.len));
}

void* QActionGroup_NewQActionGroup(void* parent)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(parent))) {
		return new MyQActionGroup(static_cast<QGraphicsObject*>(parent));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(parent))) {
		return new MyQActionGroup(static_cast<QGraphicsWidget*>(parent));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(parent))) {
		return new MyQActionGroup(static_cast<QLayout*>(parent));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(parent))) {
		return new MyQActionGroup(static_cast<QWidget*>(parent));
	} else if (dynamic_cast<QWindow*>(static_cast<QObject*>(parent))) {
		return new MyQActionGroup(static_cast<QWindow*>(parent));
	} else {
		return new MyQActionGroup(static_cast<QObject*>(parent));
	}
}

struct QtWidgets_PackedString QActionGroup_QActionGroup_Tr(char* s, char* c, int n)
{
	return ({ QByteArray t012494 = QActionGroup::tr(const_cast<const char*>(s), const_cast<const char*>(c), n).toUtf8(); QtWidgets_PackedString { const_cast<char*>(t012494.prepend("WHITESPACE").constData()+10), t012494.size()-10 }; });
}

void QActionGroup_ConnectHovered(void* ptr, long long t)
{
	QObject::connect(static_cast<QActionGroup*>(ptr), static_cast<void (QActionGroup::*)(QAction *)>(&QActionGroup::hovered), static_cast<MyQActionGroup*>(ptr), static_cast<void (MyQActionGroup::*)(QAction *)>(&MyQActionGroup::Signal_Hovered), static_cast<Qt::ConnectionType>(t));
}

void QActionGroup_DisconnectHovered(void* ptr)
{
	QObject::disconnect(static_cast<QActionGroup*>(ptr), static_cast<void (QActionGroup::*)(QAction *)>(&QActionGroup::hovered), static_cast<MyQActionGroup*>(ptr), static_cast<void (MyQActionGroup::*)(QAction *)>(&MyQActionGroup::Signal_Hovered));
}

void QActionGroup_Hovered(void* ptr, void* action)
{
	static_cast<QActionGroup*>(ptr)->hovered(static_cast<QAction*>(action));
}

void QActionGroup_RemoveAction(void* ptr, void* action)
{
	static_cast<QActionGroup*>(ptr)->removeAction(static_cast<QAction*>(action));
}

void QActionGroup_SetDisabled(void* ptr, char b)
{
	QMetaObject::invokeMethod(static_cast<QActionGroup*>(ptr), "setDisabled", Q_ARG(bool, b != 0));
}

void QActionGroup_SetDisabledDefault(void* ptr, char b)
{
		static_cast<QActionGroup*>(ptr)->QActionGroup::setDisabled(b != 0);
}

void QActionGroup_SetEnabled(void* ptr, char vbo)
{
	QMetaObject::invokeMethod(static_cast<QActionGroup*>(ptr), "setEnabled", Q_ARG(bool, vbo != 0));
}

void QActionGroup_SetEnabledDefault(void* ptr, char vbo)
{
		static_cast<QActionGroup*>(ptr)->QActionGroup::setEnabled(vbo != 0);
}

void QActionGroup_SetExclusive(void* ptr, char vbo)
{
	QMetaObject::invokeMethod(static_cast<QActionGroup*>(ptr), "setExclusive", Q_ARG(bool, vbo != 0));
}

void QActionGroup_SetExclusiveDefault(void* ptr, char vbo)
{
		static_cast<QActionGroup*>(ptr)->QActionGroup::setExclusive(vbo != 0);
}

void QActionGroup_SetVisible(void* ptr, char vbo)
{
	QMetaObject::invokeMethod(static_cast<QActionGroup*>(ptr), "setVisible", Q_ARG(bool, vbo != 0));
}

void QActionGroup_SetVisibleDefault(void* ptr, char vbo)
{
		static_cast<QActionGroup*>(ptr)->QActionGroup::setVisible(vbo != 0);
}

void QActionGroup_ConnectTriggered(void* ptr, long long t)
{
	QObject::connect(static_cast<QActionGroup*>(ptr), static_cast<void (QActionGroup::*)(QAction *)>(&QActionGroup::triggered), static_cast<MyQActionGroup*>(ptr), static_cast<void (MyQActionGroup::*)(QAction *)>(&MyQActionGroup::Signal_Triggered), static_cast<Qt::ConnectionType>(t));
}

void QActionGroup_DisconnectTriggered(void* ptr)
{
	QObject::disconnect(static_cast<QActionGroup*>(ptr), static_cast<void (QActionGroup::*)(QAction *)>(&QActionGroup::triggered), static_cast<MyQActionGroup*>(ptr), static_cast<void (MyQActionGroup::*)(QAction *)>(&MyQActionGroup::Signal_Triggered));
}

void QActionGroup_Triggered(void* ptr, void* action)
{
	static_cast<QActionGroup*>(ptr)->triggered(static_cast<QAction*>(action));
}

void QActionGroup_DestroyQActionGroup(void* ptr)
{
	static_cast<QActionGroup*>(ptr)->~QActionGroup();
}

void QActionGroup_DestroyQActionGroupDefault(void* ptr)
{
	Q_UNUSED(ptr);

}

void* QActionGroup_CheckedAction(void* ptr)
{
	return static_cast<QActionGroup*>(ptr)->checkedAction();
}

struct QtWidgets_PackedList QActionGroup_Actions(void* ptr)
{
	return ({ QList<QAction *>* tmpValue766e2b = new QList<QAction *>(static_cast<QActionGroup*>(ptr)->actions()); QtWidgets_PackedList { tmpValue766e2b, tmpValue766e2b->size() }; });
}

char QActionGroup_IsEnabled(void* ptr)
{
	return static_cast<QActionGroup*>(ptr)->isEnabled();
}

char QActionGroup_IsExclusive(void* ptr)
{
	return static_cast<QActionGroup*>(ptr)->isExclusive();
}

char QActionGroup_IsVisible(void* ptr)
{
	return static_cast<QActionGroup*>(ptr)->isVisible();
}

void* QActionGroup_MetaObjectDefault(void* ptr)
{
		return const_cast<QMetaObject*>(static_cast<QActionGroup*>(ptr)->QActionGroup::metaObject());
}

void* QActionGroup___actions_atList(void* ptr, int i)
{
	return ({QAction * tmp = static_cast<QList<QAction *>*>(ptr)->at(i); if (i == static_cast<QList<QAction *>*>(ptr)->size()-1) { static_cast<QList<QAction *>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QActionGroup___actions_setList(void* ptr, void* i)
{
	static_cast<QList<QAction *>*>(ptr)->append(static_cast<QAction*>(i));
}

void* QActionGroup___actions_newList(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QAction *>();
}

void* QActionGroup___dynamicPropertyNames_atList(void* ptr, int i)
{
	return new QByteArray(({QByteArray tmp = static_cast<QList<QByteArray>*>(ptr)->at(i); if (i == static_cast<QList<QByteArray>*>(ptr)->size()-1) { static_cast<QList<QByteArray>*>(ptr)->~QList(); free(ptr); }; tmp; }));
}

void QActionGroup___dynamicPropertyNames_setList(void* ptr, void* i)
{
	static_cast<QList<QByteArray>*>(ptr)->append(*static_cast<QByteArray*>(i));
}

void* QActionGroup___dynamicPropertyNames_newList(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QByteArray>();
}

void* QActionGroup___findChildren_atList2(void* ptr, int i)
{
	return ({QObject* tmp = static_cast<QList<QObject*>*>(ptr)->at(i); if (i == static_cast<QList<QObject*>*>(ptr)->size()-1) { static_cast<QList<QObject*>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QActionGroup___findChildren_setList2(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QLayout*>(i));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QWidget*>(i));
	} else {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QObject*>(i));
	}
}

void* QActionGroup___findChildren_newList2(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QObject*>();
}

void* QActionGroup___findChildren_atList3(void* ptr, int i)
{
	return ({QObject* tmp = static_cast<QList<QObject*>*>(ptr)->at(i); if (i == static_cast<QList<QObject*>*>(ptr)->size()-1) { static_cast<QList<QObject*>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QActionGroup___findChildren_setList3(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QLayout*>(i));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QWidget*>(i));
	} else {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QObject*>(i));
	}
}

void* QActionGroup___findChildren_newList3(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QObject*>();
}

void* QActionGroup___findChildren_atList(void* ptr, int i)
{
	return ({QObject* tmp = static_cast<QList<QObject*>*>(ptr)->at(i); if (i == static_cast<QList<QObject*>*>(ptr)->size()-1) { static_cast<QList<QObject*>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QActionGroup___findChildren_setList(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QLayout*>(i));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QWidget*>(i));
	} else {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QObject*>(i));
	}
}

void* QActionGroup___findChildren_newList(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QObject*>();
}

void* QActionGroup___children_atList(void* ptr, int i)
{
	return ({QObject * tmp = static_cast<QList<QObject *>*>(ptr)->at(i); if (i == static_cast<QList<QObject *>*>(ptr)->size()-1) { static_cast<QList<QObject *>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QActionGroup___children_setList(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject *>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject *>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject *>*>(ptr)->append(static_cast<QLayout*>(i));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject *>*>(ptr)->append(static_cast<QWidget*>(i));
	} else {
		static_cast<QList<QObject *>*>(ptr)->append(static_cast<QObject*>(i));
	}
}

void* QActionGroup___children_newList(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QObject *>();
}

char QActionGroup_EventDefault(void* ptr, void* e)
{
		return static_cast<QActionGroup*>(ptr)->QActionGroup::event(static_cast<QEvent*>(e));
}

char QActionGroup_EventFilterDefault(void* ptr, void* watched, void* event)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(watched))) {
		return static_cast<QActionGroup*>(ptr)->QActionGroup::eventFilter(static_cast<QGraphicsObject*>(watched), static_cast<QEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(watched))) {
		return static_cast<QActionGroup*>(ptr)->QActionGroup::eventFilter(static_cast<QGraphicsWidget*>(watched), static_cast<QEvent*>(event));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(watched))) {
		return static_cast<QActionGroup*>(ptr)->QActionGroup::eventFilter(static_cast<QLayout*>(watched), static_cast<QEvent*>(event));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(watched))) {
		return static_cast<QActionGroup*>(ptr)->QActionGroup::eventFilter(static_cast<QWidget*>(watched), static_cast<QEvent*>(event));
	} else {
		return static_cast<QActionGroup*>(ptr)->QActionGroup::eventFilter(static_cast<QObject*>(watched), static_cast<QEvent*>(event));
	}
}

void QActionGroup_ChildEventDefault(void* ptr, void* event)
{
		static_cast<QActionGroup*>(ptr)->QActionGroup::childEvent(static_cast<QChildEvent*>(event));
}

void QActionGroup_ConnectNotifyDefault(void* ptr, void* sign)
{
		static_cast<QActionGroup*>(ptr)->QActionGroup::connectNotify(*static_cast<QMetaMethod*>(sign));
}

void QActionGroup_CustomEventDefault(void* ptr, void* event)
{
		static_cast<QActionGroup*>(ptr)->QActionGroup::customEvent(static_cast<QEvent*>(event));
}

void QActionGroup_DeleteLaterDefault(void* ptr)
{
		static_cast<QActionGroup*>(ptr)->QActionGroup::deleteLater();
}

void QActionGroup_DisconnectNotifyDefault(void* ptr, void* sign)
{
		static_cast<QActionGroup*>(ptr)->QActionGroup::disconnectNotify(*static_cast<QMetaMethod*>(sign));
}

void QActionGroup_TimerEventDefault(void* ptr, void* event)
{
		static_cast<QActionGroup*>(ptr)->QActionGroup::timerEvent(static_cast<QTimerEvent*>(event));
}

class MyQApplication: public QApplication
{
public:
	MyQApplication(int &argc, char **argv) : QApplication(argc, argv) {QApplication_QApplication_QRegisterMetaType();};
	bool event(QEvent * e) { return callbackQApplication_Event(this, e) != 0; };
	void aboutQt() { callbackQApplication_AboutQt(this); };
	void closeAllWindows() { callbackQApplication_CloseAllWindows(this); };
	void Signal_FocusChanged(QWidget * old, QWidget * now) { callbackQApplication_FocusChanged(this, old, now); };
	void setAutoSipEnabled(const bool enabled) { callbackQApplication_SetAutoSipEnabled(this, enabled); };
	void setStyleSheet(const QString & sheet) { QByteArray t542ebc = sheet.toUtf8(); QtWidgets_PackedString sheetPacked = { const_cast<char*>(t542ebc.prepend("WHITESPACE").constData()+10), t542ebc.size()-10 };callbackQApplication_SetStyleSheet(this, sheetPacked); };
	 ~MyQApplication() { callbackQApplication_DestroyQApplication(this); };
	bool autoSipEnabled() const { return callbackQApplication_AutoSipEnabled(const_cast<void*>(static_cast<const void*>(this))) != 0; };
	const QMetaObject * metaObject() const { return static_cast<QMetaObject*>(callbackQApplication_MetaObject(const_cast<void*>(static_cast<const void*>(this)))); };
	void Signal_ApplicationDisplayNameChanged() { callbackQApplication_ApplicationDisplayNameChanged(this); };
	void Signal_ApplicationStateChanged(Qt::ApplicationState state) { callbackQApplication_ApplicationStateChanged(this, state); };
	void Signal_CommitDataRequest(QSessionManager & manager) { callbackQApplication_CommitDataRequest(this, static_cast<QSessionManager*>(&manager)); };
	void Signal_FocusObjectChanged(QObject * focusObject) { callbackQApplication_FocusObjectChanged(this, focusObject); };
	void Signal_FocusWindowChanged(QWindow * focusWindow) { callbackQApplication_FocusWindowChanged(this, focusWindow); };
	void Signal_FontChanged(const QFont & font) { callbackQApplication_FontChanged(this, const_cast<QFont*>(&font)); };
	void Signal_FontDatabaseChanged() { callbackQApplication_FontDatabaseChanged(this); };
	void Signal_LastWindowClosed() { callbackQApplication_LastWindowClosed(this); };
	void Signal_LayoutDirectionChanged(Qt::LayoutDirection direction) { callbackQApplication_LayoutDirectionChanged(this, direction); };
	void Signal_PaletteChanged(const QPalette & palette) { callbackQApplication_PaletteChanged(this, const_cast<QPalette*>(&palette)); };
	void Signal_PrimaryScreenChanged(QScreen * screen) { callbackQApplication_PrimaryScreenChanged(this, screen); };
	void Signal_SaveStateRequest(QSessionManager & manager) { callbackQApplication_SaveStateRequest(this, static_cast<QSessionManager*>(&manager)); };
	void Signal_ScreenAdded(QScreen * screen) { callbackQApplication_ScreenAdded(this, screen); };
	void Signal_ScreenRemoved(QScreen * screen) { callbackQApplication_ScreenRemoved(this, screen); };
	void Signal_AboutToQuit() { callbackQApplication_AboutToQuit(this); };
	void quit() { callbackQApplication_Quit(this); };
	bool eventFilter(QObject * watched, QEvent * event) { return callbackQApplication_EventFilter(this, watched, event) != 0; };
	void childEvent(QChildEvent * event) { callbackQApplication_ChildEvent(this, event); };
	void connectNotify(const QMetaMethod & sign) { callbackQApplication_ConnectNotify(this, const_cast<QMetaMethod*>(&sign)); };
	void customEvent(QEvent * event) { callbackQApplication_CustomEvent(this, event); };
	void deleteLater() { callbackQApplication_DeleteLater(this); };
	void Signal_Destroyed(QObject * obj) { callbackQApplication_Destroyed(this, obj); };
	void disconnectNotify(const QMetaMethod & sign) { callbackQApplication_DisconnectNotify(this, const_cast<QMetaMethod*>(&sign)); };
	void Signal_ObjectNameChanged(const QString & objectName) { QByteArray taa2c4f = objectName.toUtf8(); QtWidgets_PackedString objectNamePacked = { const_cast<char*>(taa2c4f.prepend("WHITESPACE").constData()+10), taa2c4f.size()-10 };callbackQApplication_ObjectNameChanged(this, objectNamePacked); };
	void timerEvent(QTimerEvent * event) { callbackQApplication_TimerEvent(this, event); };
};

Q_DECLARE_METATYPE(QApplication*)
Q_DECLARE_METATYPE(MyQApplication*)

int QApplication_QApplication_QRegisterMetaType(){qRegisterMetaType<QApplication*>(); return qRegisterMetaType<MyQApplication*>();}

void* QApplication_NewQApplication(int argc, char* argv)
{
	static int argcs = argc;
	static char** argvs = static_cast<char**>(malloc(argcs * sizeof(char*)));

	QList<QByteArray> aList = QByteArray(argv).split('|');
	for (int i = 0; i < argcs; i++)
		argvs[i] = (new QByteArray(aList.at(i)))->data();

	return new MyQApplication(argcs, argvs);
}

void* QApplication_QApplication_Desktop()
{
	return QApplication::desktop();
}

void* QApplication_QApplication_Font()
{
	return new QFont(QApplication::font());
}

void* QApplication_QApplication_Font2(void* widget)
{
		return new QFont(QApplication::font(static_cast<QWidget*>(widget)));
}

void* QApplication_QApplication_Font3(char* className)
{
	return new QFont(QApplication::font(const_cast<const char*>(className)));
}

void* QApplication_QApplication_FontMetrics()
{
	return new QFontMetrics(QApplication::fontMetrics());
}

void* QApplication_QApplication_WindowIcon()
{
	return new QIcon(QApplication::windowIcon());
}

void* QApplication_QApplication_Palette(void* widget)
{
		return new QPalette(QApplication::palette(static_cast<QWidget*>(widget)));
}

void* QApplication_QApplication_Palette2(char* className)
{
	return new QPalette(QApplication::palette(const_cast<const char*>(className)));
}

void* QApplication_QApplication_GlobalStrut()
{
	return ({ QSize tmpValue = QApplication::globalStrut(); new QSize(tmpValue.width(), tmpValue.height()); });
}

struct QtWidgets_PackedString QApplication_QApplication_Tr(char* s, char* c, int n)
{
	return ({ QByteArray t3a2cac = QApplication::tr(const_cast<const char*>(s), const_cast<const char*>(c), n).toUtf8(); QtWidgets_PackedString { const_cast<char*>(t3a2cac.prepend("WHITESPACE").constData()+10), t3a2cac.size()-10 }; });
}

void* QApplication_QApplication_SetStyle2(struct QtWidgets_PackedString style)
{
	return QApplication::setStyle(QString::fromUtf8(style.data, style.len));
}

void* QApplication_QApplication_Style()
{
	return QApplication::style();
}

void* QApplication_QApplication_ActiveModalWidget()
{
	return QApplication::activeModalWidget();
}

void* QApplication_QApplication_ActivePopupWidget()
{
	return QApplication::activePopupWidget();
}

void* QApplication_QApplication_ActiveWindow()
{
	return QApplication::activeWindow();
}

void* QApplication_QApplication_FocusWidget()
{
	return QApplication::focusWidget();
}

void* QApplication_QApplication_TopLevelAt(void* point)
{
	return QApplication::topLevelAt(*static_cast<QPoint*>(point));
}

void* QApplication_QApplication_TopLevelAt2(int x, int y)
{
	return QApplication::topLevelAt(x, y);
}

void* QApplication_QApplication_WidgetAt(void* point)
{
	return QApplication::widgetAt(*static_cast<QPoint*>(point));
}

void* QApplication_QApplication_WidgetAt2(int x, int y)
{
	return QApplication::widgetAt(x, y);
}

struct QtWidgets_PackedList QApplication_QApplication_AllWidgets()
{
	return ({ QList<QWidget *>* tmpValue15db35 = new QList<QWidget *>(QApplication::allWidgets()); QtWidgets_PackedList { tmpValue15db35, tmpValue15db35->size() }; });
}

struct QtWidgets_PackedList QApplication_QApplication_TopLevelWidgets()
{
	return ({ QList<QWidget *>* tmpValue8ff1e1 = new QList<QWidget *>(QApplication::topLevelWidgets()); QtWidgets_PackedList { tmpValue8ff1e1, tmpValue8ff1e1->size() }; });
}

long long QApplication_QApplication_NavigationMode()
{
#ifdef QT_KEYPAD_NAVIGATION
	return QApplication::navigationMode();
#else
	return 0;
#endif
}

char QApplication_EventDefault(void* ptr, void* e)
{
		return static_cast<QApplication*>(ptr)->QApplication::event(static_cast<QEvent*>(e));
}

char QApplication_QApplication_IsEffectEnabled(long long effect)
{
	return QApplication::isEffectEnabled(static_cast<Qt::UIEffect>(effect));
}

int QApplication_QApplication_CursorFlashTime()
{
	return QApplication::cursorFlashTime();
}

int QApplication_QApplication_DoubleClickInterval()
{
	return QApplication::doubleClickInterval();
}

int QApplication_QApplication_Exec()
{
	return QApplication::exec();
}

int QApplication_QApplication_KeyboardInputInterval()
{
	return QApplication::keyboardInputInterval();
}

int QApplication_QApplication_StartDragDistance()
{
	return QApplication::startDragDistance();
}

int QApplication_QApplication_StartDragTime()
{
	return QApplication::startDragTime();
}

int QApplication_QApplication_WheelScrollLines()
{
	return QApplication::wheelScrollLines();
}

void QApplication_AboutQt(void* ptr)
{
	QMetaObject::invokeMethod(static_cast<QApplication*>(ptr), "aboutQt");
}

void QApplication_AboutQtDefault(void* ptr)
{
		static_cast<QApplication*>(ptr)->QApplication::aboutQt();
}

void QApplication_QApplication_Alert(void* widget, int msec)
{
		QApplication::alert(static_cast<QWidget*>(widget), msec);
}

void QApplication_QApplication_Beep()
{
	QApplication::beep();
}

void QApplication_CloseAllWindows(void* ptr)
{
	QMetaObject::invokeMethod(static_cast<QApplication*>(ptr), "closeAllWindows");
}

void QApplication_CloseAllWindowsDefault(void* ptr)
{
		static_cast<QApplication*>(ptr)->QApplication::closeAllWindows();
}

void QApplication_ConnectFocusChanged(void* ptr, long long t)
{
	QObject::connect(static_cast<QApplication*>(ptr), static_cast<void (QApplication::*)(QWidget *, QWidget *)>(&QApplication::focusChanged), static_cast<MyQApplication*>(ptr), static_cast<void (MyQApplication::*)(QWidget *, QWidget *)>(&MyQApplication::Signal_FocusChanged), static_cast<Qt::ConnectionType>(t));
}

void QApplication_DisconnectFocusChanged(void* ptr)
{
	QObject::disconnect(static_cast<QApplication*>(ptr), static_cast<void (QApplication::*)(QWidget *, QWidget *)>(&QApplication::focusChanged), static_cast<MyQApplication*>(ptr), static_cast<void (MyQApplication::*)(QWidget *, QWidget *)>(&MyQApplication::Signal_FocusChanged));
}

void QApplication_FocusChanged(void* ptr, void* old, void* now)
{
		static_cast<QApplication*>(ptr)->focusChanged(static_cast<QWidget*>(old), static_cast<QWidget*>(now));
}

void QApplication_QApplication_SetActiveWindow(void* active)
{
		QApplication::setActiveWindow(static_cast<QWidget*>(active));
}

void QApplication_SetAutoSipEnabled(void* ptr, char enabled)
{
	QMetaObject::invokeMethod(static_cast<QApplication*>(ptr), "setAutoSipEnabled", Q_ARG(const bool, enabled != 0));
}

void QApplication_SetAutoSipEnabledDefault(void* ptr, char enabled)
{
		static_cast<QApplication*>(ptr)->QApplication::setAutoSipEnabled(enabled != 0);
}

void QApplication_QApplication_SetCursorFlashTime(int vin)
{
	QApplication::setCursorFlashTime(vin);
}

void QApplication_QApplication_SetDoubleClickInterval(int vin)
{
	QApplication::setDoubleClickInterval(vin);
}

void QApplication_QApplication_SetEffectEnabled(long long effect, char enable)
{
	QApplication::setEffectEnabled(static_cast<Qt::UIEffect>(effect), enable != 0);
}

void QApplication_QApplication_SetFont(void* font, char* className)
{
	QApplication::setFont(*static_cast<QFont*>(font), const_cast<const char*>(className));
}

void QApplication_QApplication_SetGlobalStrut(void* vqs)
{
	QApplication::setGlobalStrut(*static_cast<QSize*>(vqs));
}

void QApplication_QApplication_SetKeyboardInputInterval(int vin)
{
	QApplication::setKeyboardInputInterval(vin);
}

void QApplication_QApplication_SetNavigationMode(long long mode)
{
#ifdef QT_KEYPAD_NAVIGATION
	QApplication::setNavigationMode(static_cast<Qt::NavigationMode>(mode));
#endif
}

void QApplication_QApplication_SetPalette(void* palette, char* className)
{
	QApplication::setPalette(*static_cast<QPalette*>(palette), const_cast<const char*>(className));
}

void QApplication_QApplication_SetStartDragDistance(int l)
{
	QApplication::setStartDragDistance(l);
}

void QApplication_QApplication_SetStartDragTime(int ms)
{
	QApplication::setStartDragTime(ms);
}

void QApplication_QApplication_SetStyle(void* style)
{
	QApplication::setStyle(static_cast<QStyle*>(style));
}

void QApplication_SetStyleSheet(void* ptr, struct QtWidgets_PackedString sheet)
{
	QMetaObject::invokeMethod(static_cast<QApplication*>(ptr), "setStyleSheet", Q_ARG(const QString, QString::fromUtf8(sheet.data, sheet.len)));
}

void QApplication_SetStyleSheetDefault(void* ptr, struct QtWidgets_PackedString sheet)
{
		static_cast<QApplication*>(ptr)->QApplication::setStyleSheet(QString::fromUtf8(sheet.data, sheet.len));
}

void QApplication_QApplication_SetWheelScrollLines(int vin)
{
	QApplication::setWheelScrollLines(vin);
}

void QApplication_QApplication_SetWindowIcon(void* icon)
{
	QApplication::setWindowIcon(*static_cast<QIcon*>(icon));
}

void QApplication_DestroyQApplication(void* ptr)
{
	static_cast<QApplication*>(ptr)->~QApplication();
}

void QApplication_DestroyQApplicationDefault(void* ptr)
{
	Q_UNUSED(ptr);

}

struct QtWidgets_PackedString QApplication_StyleSheet(void* ptr)
{
	return ({ QByteArray ta53b66 = static_cast<QApplication*>(ptr)->styleSheet().toUtf8(); QtWidgets_PackedString { const_cast<char*>(ta53b66.prepend("WHITESPACE").constData()+10), ta53b66.size()-10 }; });
}

char QApplication_AutoSipEnabled(void* ptr)
{
	bool returnArg;
	QMetaObject::invokeMethod(static_cast<QApplication*>(ptr), "autoSipEnabled", Q_RETURN_ARG(bool, returnArg));
	return returnArg;
}

char QApplication_AutoSipEnabledDefault(void* ptr)
{
		return static_cast<QApplication*>(ptr)->QApplication::autoSipEnabled();
}

void* QApplication_MetaObjectDefault(void* ptr)
{
		return const_cast<QMetaObject*>(static_cast<QApplication*>(ptr)->QApplication::metaObject());
}

void* QApplication___allWidgets_atList(void* ptr, int i)
{
	return ({QWidget * tmp = static_cast<QList<QWidget *>*>(ptr)->at(i); if (i == static_cast<QList<QWidget *>*>(ptr)->size()-1) { static_cast<QList<QWidget *>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QApplication___allWidgets_setList(void* ptr, void* i)
{
		static_cast<QList<QWidget *>*>(ptr)->append(static_cast<QWidget*>(i));
}

void* QApplication___allWidgets_newList(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QWidget *>();
}

void* QApplication___topLevelWidgets_atList(void* ptr, int i)
{
	return ({QWidget * tmp = static_cast<QList<QWidget *>*>(ptr)->at(i); if (i == static_cast<QList<QWidget *>*>(ptr)->size()-1) { static_cast<QList<QWidget *>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QApplication___topLevelWidgets_setList(void* ptr, void* i)
{
		static_cast<QList<QWidget *>*>(ptr)->append(static_cast<QWidget*>(i));
}

void* QApplication___topLevelWidgets_newList(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QWidget *>();
}

void* QApplication___screens_atList(void* ptr, int i)
{
	return ({QScreen * tmp = static_cast<QList<QScreen *>*>(ptr)->at(i); if (i == static_cast<QList<QScreen *>*>(ptr)->size()-1) { static_cast<QList<QScreen *>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QApplication___screens_setList(void* ptr, void* i)
{
	static_cast<QList<QScreen *>*>(ptr)->append(static_cast<QScreen*>(i));
}

void* QApplication___screens_newList(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QScreen *>();
}

void* QApplication___dynamicPropertyNames_atList(void* ptr, int i)
{
	return new QByteArray(({QByteArray tmp = static_cast<QList<QByteArray>*>(ptr)->at(i); if (i == static_cast<QList<QByteArray>*>(ptr)->size()-1) { static_cast<QList<QByteArray>*>(ptr)->~QList(); free(ptr); }; tmp; }));
}

void QApplication___dynamicPropertyNames_setList(void* ptr, void* i)
{
	static_cast<QList<QByteArray>*>(ptr)->append(*static_cast<QByteArray*>(i));
}

void* QApplication___dynamicPropertyNames_newList(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QByteArray>();
}

void* QApplication___findChildren_atList2(void* ptr, int i)
{
	return ({QObject* tmp = static_cast<QList<QObject*>*>(ptr)->at(i); if (i == static_cast<QList<QObject*>*>(ptr)->size()-1) { static_cast<QList<QObject*>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QApplication___findChildren_setList2(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QLayout*>(i));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QWidget*>(i));
	} else {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QObject*>(i));
	}
}

void* QApplication___findChildren_newList2(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QObject*>();
}

void* QApplication___findChildren_atList3(void* ptr, int i)
{
	return ({QObject* tmp = static_cast<QList<QObject*>*>(ptr)->at(i); if (i == static_cast<QList<QObject*>*>(ptr)->size()-1) { static_cast<QList<QObject*>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QApplication___findChildren_setList3(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QLayout*>(i));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QWidget*>(i));
	} else {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QObject*>(i));
	}
}

void* QApplication___findChildren_newList3(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QObject*>();
}

void* QApplication___findChildren_atList(void* ptr, int i)
{
	return ({QObject* tmp = static_cast<QList<QObject*>*>(ptr)->at(i); if (i == static_cast<QList<QObject*>*>(ptr)->size()-1) { static_cast<QList<QObject*>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QApplication___findChildren_setList(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QLayout*>(i));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QWidget*>(i));
	} else {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QObject*>(i));
	}
}

void* QApplication___findChildren_newList(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QObject*>();
}

void* QApplication___children_atList(void* ptr, int i)
{
	return ({QObject * tmp = static_cast<QList<QObject *>*>(ptr)->at(i); if (i == static_cast<QList<QObject *>*>(ptr)->size()-1) { static_cast<QList<QObject *>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QApplication___children_setList(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject *>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject *>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject *>*>(ptr)->append(static_cast<QLayout*>(i));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject *>*>(ptr)->append(static_cast<QWidget*>(i));
	} else {
		static_cast<QList<QObject *>*>(ptr)->append(static_cast<QObject*>(i));
	}
}

void* QApplication___children_newList(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QObject *>();
}

void QApplication_QuitDefault(void* ptr)
{
		static_cast<QApplication*>(ptr)->QApplication::quit();
}

char QApplication_EventFilterDefault(void* ptr, void* watched, void* event)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(watched))) {
		return static_cast<QApplication*>(ptr)->QApplication::eventFilter(static_cast<QGraphicsObject*>(watched), static_cast<QEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(watched))) {
		return static_cast<QApplication*>(ptr)->QApplication::eventFilter(static_cast<QGraphicsWidget*>(watched), static_cast<QEvent*>(event));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(watched))) {
		return static_cast<QApplication*>(ptr)->QApplication::eventFilter(static_cast<QLayout*>(watched), static_cast<QEvent*>(event));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(watched))) {
		return static_cast<QApplication*>(ptr)->QApplication::eventFilter(static_cast<QWidget*>(watched), static_cast<QEvent*>(event));
	} else {
		return static_cast<QApplication*>(ptr)->QApplication::eventFilter(static_cast<QObject*>(watched), static_cast<QEvent*>(event));
	}
}

void QApplication_ChildEventDefault(void* ptr, void* event)
{
		static_cast<QApplication*>(ptr)->QApplication::childEvent(static_cast<QChildEvent*>(event));
}

void QApplication_ConnectNotifyDefault(void* ptr, void* sign)
{
		static_cast<QApplication*>(ptr)->QApplication::connectNotify(*static_cast<QMetaMethod*>(sign));
}

void QApplication_CustomEventDefault(void* ptr, void* event)
{
		static_cast<QApplication*>(ptr)->QApplication::customEvent(static_cast<QEvent*>(event));
}

void QApplication_DeleteLaterDefault(void* ptr)
{
		static_cast<QApplication*>(ptr)->QApplication::deleteLater();
}

void QApplication_DisconnectNotifyDefault(void* ptr, void* sign)
{
		static_cast<QApplication*>(ptr)->QApplication::disconnectNotify(*static_cast<QMetaMethod*>(sign));
}

void QApplication_TimerEventDefault(void* ptr, void* event)
{
		static_cast<QApplication*>(ptr)->QApplication::timerEvent(static_cast<QTimerEvent*>(event));
}

class MyQDesktopWidget: public QDesktopWidget
{
public:
	MyQDesktopWidget() : QDesktopWidget() {QDesktopWidget_QDesktopWidget_QRegisterMetaType();};
	void Signal_PrimaryScreenChanged() { callbackQDesktopWidget_PrimaryScreenChanged(this); };
	void resizeEvent(QResizeEvent * event) { callbackQWidget_ResizeEvent(this, event); };
	void Signal_Resized(int screen) { callbackQDesktopWidget_Resized(this, screen); };
	void Signal_ScreenCountChanged(int newCount) { callbackQDesktopWidget_ScreenCountChanged(this, newCount); };
	void Signal_WorkAreaResized(int screen) { callbackQDesktopWidget_WorkAreaResized(this, screen); };
	 ~MyQDesktopWidget() { callbackQDesktopWidget_DestroyQDesktopWidget(this); };
	const QMetaObject * metaObject() const { return static_cast<QMetaObject*>(callbackQWidget_MetaObject(const_cast<void*>(static_cast<const void*>(this)))); };
	bool close() { return callbackQWidget_Close(this) != 0; };
	bool event(QEvent * event) { return callbackQWidget_Event(this, event) != 0; };
	bool focusNextPrevChild(bool next) { return callbackQWidget_FocusNextPrevChild(this, next) != 0; };
	bool nativeEvent(const QByteArray & eventType, void * message, long * result) { return callbackQWidget_NativeEvent(this, const_cast<QByteArray*>(&eventType), message, result) != 0; };
	void actionEvent(QActionEvent * event) { callbackQWidget_ActionEvent(this, event); };
	void changeEvent(QEvent * event) { callbackQWidget_ChangeEvent(this, event); };
	void closeEvent(QCloseEvent * event) { callbackQWidget_CloseEvent(this, event); };
	void contextMenuEvent(QContextMenuEvent * event) { callbackQWidget_ContextMenuEvent(this, event); };
	void Signal_CustomContextMenuRequested(const QPoint & pos) { callbackQWidget_CustomContextMenuRequested(this, const_cast<QPoint*>(&pos)); };
	void dragEnterEvent(QDragEnterEvent * event) { callbackQWidget_DragEnterEvent(this, event); };
	void dragLeaveEvent(QDragLeaveEvent * event) { callbackQWidget_DragLeaveEvent(this, event); };
	void dragMoveEvent(QDragMoveEvent * event) { callbackQWidget_DragMoveEvent(this, event); };
	void dropEvent(QDropEvent * event) { callbackQWidget_DropEvent(this, event); };
	void enterEvent(QEvent * event) { callbackQWidget_EnterEvent(this, event); };
	void focusInEvent(QFocusEvent * event) { callbackQWidget_FocusInEvent(this, event); };
	void focusOutEvent(QFocusEvent * event) { callbackQWidget_FocusOutEvent(this, event); };
	void hide() { callbackQWidget_Hide(this); };
	void hideEvent(QHideEvent * event) { callbackQWidget_HideEvent(this, event); };
	void inputMethodEvent(QInputMethodEvent * event) { callbackQWidget_InputMethodEvent(this, event); };
	void keyPressEvent(QKeyEvent * event) { callbackQWidget_KeyPressEvent(this, event); };
	void keyReleaseEvent(QKeyEvent * event) { callbackQWidget_KeyReleaseEvent(this, event); };
	void leaveEvent(QEvent * event) { callbackQWidget_LeaveEvent(this, event); };
	void lower() { callbackQWidget_Lower(this); };
	void mouseDoubleClickEvent(QMouseEvent * event) { callbackQWidget_MouseDoubleClickEvent(this, event); };
	void mouseMoveEvent(QMouseEvent * event) { callbackQWidget_MouseMoveEvent(this, event); };
	void mousePressEvent(QMouseEvent * event) { callbackQWidget_MousePressEvent(this, event); };
	void mouseReleaseEvent(QMouseEvent * event) { callbackQWidget_MouseReleaseEvent(this, event); };
	void moveEvent(QMoveEvent * event) { callbackQWidget_MoveEvent(this, event); };
	void paintEvent(QPaintEvent * event) { callbackQWidget_PaintEvent(this, event); };
	void raise() { callbackQWidget_Raise(this); };
	void repaint() { callbackQWidget_Repaint(this); };
	void setDisabled(bool disable) { callbackQWidget_SetDisabled(this, disable); };
	void setEnabled(bool vbo) { callbackQWidget_SetEnabled(this, vbo); };
	void setFocus() { callbackQWidget_SetFocus2(this); };
	void setHidden(bool hidden) { callbackQWidget_SetHidden(this, hidden); };
	void setStyleSheet(const QString & styleSheet) { QByteArray t728ae7 = styleSheet.toUtf8(); QtWidgets_PackedString styleSheetPacked = { const_cast<char*>(t728ae7.prepend("WHITESPACE").constData()+10), t728ae7.size()-10 };callbackQWidget_SetStyleSheet(this, styleSheetPacked); };
	void setVisible(bool visible) { callbackQWidget_SetVisible(this, visible); };
	void setWindowModified(bool vbo) { callbackQWidget_SetWindowModified(this, vbo); };
	void setWindowTitle(const QString & vqs) { QByteArray tda39a3 = vqs.toUtf8(); QtWidgets_PackedString vqsPacked = { const_cast<char*>(tda39a3.prepend("WHITESPACE").constData()+10), tda39a3.size()-10 };callbackQWidget_SetWindowTitle(this, vqsPacked); };
	void show() { callbackQWidget_Show(this); };
	void showEvent(QShowEvent * event) { callbackQWidget_ShowEvent(this, event); };
	void showFullScreen() { callbackQWidget_ShowFullScreen(this); };
	void showMaximized() { callbackQWidget_ShowMaximized(this); };
	void showMinimized() { callbackQWidget_ShowMinimized(this); };
	void showNormal() { callbackQWidget_ShowNormal(this); };
	void tabletEvent(QTabletEvent * event) { callbackQWidget_TabletEvent(this, event); };
	void update() { callbackQWidget_Update(this); };
	void updateMicroFocus() { callbackQWidget_UpdateMicroFocus(this); };
	void wheelEvent(QWheelEvent * event) { callbackQWidget_WheelEvent(this, event); };
	void Signal_WindowIconChanged(const QIcon & icon) { callbackQWidget_WindowIconChanged(this, const_cast<QIcon*>(&icon)); };
	void Signal_WindowTitleChanged(const QString & title) { QByteArray t3c6de1 = title.toUtf8(); QtWidgets_PackedString titlePacked = { const_cast<char*>(t3c6de1.prepend("WHITESPACE").constData()+10), t3c6de1.size()-10 };callbackQWidget_WindowTitleChanged(this, titlePacked); };
	QPaintEngine * paintEngine() const { return static_cast<QPaintEngine*>(callbackQWidget_PaintEngine(const_cast<void*>(static_cast<const void*>(this)))); };
	QSize minimumSizeHint() const { return *static_cast<QSize*>(callbackQWidget_MinimumSizeHint(const_cast<void*>(static_cast<const void*>(this)))); };
	QSize sizeHint() const { return *static_cast<QSize*>(callbackQWidget_SizeHint(const_cast<void*>(static_cast<const void*>(this)))); };
	QVariant inputMethodQuery(Qt::InputMethodQuery query) const { return *static_cast<QVariant*>(callbackQWidget_InputMethodQuery(const_cast<void*>(static_cast<const void*>(this)), query)); };
	bool hasHeightForWidth() const { return callbackQWidget_HasHeightForWidth(const_cast<void*>(static_cast<const void*>(this))) != 0; };
	int heightForWidth(int w) const { return callbackQWidget_HeightForWidth(const_cast<void*>(static_cast<const void*>(this)), w); };
	int metric(QPaintDevice::PaintDeviceMetric m) const { return callbackQWidget_Metric(const_cast<void*>(static_cast<const void*>(this)), m); };
	void initPainter(QPainter * painter) const { callbackQWidget_InitPainter(const_cast<void*>(static_cast<const void*>(this)), painter); };
	bool eventFilter(QObject * watched, QEvent * event) { return callbackQWidget_EventFilter(this, watched, event) != 0; };
	void childEvent(QChildEvent * event) { callbackQWidget_ChildEvent(this, event); };
	void connectNotify(const QMetaMethod & sign) { callbackQWidget_ConnectNotify(this, const_cast<QMetaMethod*>(&sign)); };
	void customEvent(QEvent * event) { callbackQWidget_CustomEvent(this, event); };
	void deleteLater() { callbackQWidget_DeleteLater(this); };
	void Signal_Destroyed(QObject * obj) { callbackQWidget_Destroyed(this, obj); };
	void disconnectNotify(const QMetaMethod & sign) { callbackQWidget_DisconnectNotify(this, const_cast<QMetaMethod*>(&sign)); };
	void Signal_ObjectNameChanged(const QString & objectName) { QByteArray taa2c4f = objectName.toUtf8(); QtWidgets_PackedString objectNamePacked = { const_cast<char*>(taa2c4f.prepend("WHITESPACE").constData()+10), taa2c4f.size()-10 };callbackQWidget_ObjectNameChanged(this, objectNamePacked); };
	void timerEvent(QTimerEvent * event) { callbackQWidget_TimerEvent(this, event); };
};

Q_DECLARE_METATYPE(QDesktopWidget*)
Q_DECLARE_METATYPE(MyQDesktopWidget*)

int QDesktopWidget_QDesktopWidget_QRegisterMetaType(){qRegisterMetaType<QDesktopWidget*>(); return qRegisterMetaType<MyQDesktopWidget*>();}

void* QDesktopWidget_NewQDesktopWidget()
{
	return new MyQDesktopWidget();
}

void* QDesktopWidget_Screen(void* ptr, int screen)
{
	return static_cast<QDesktopWidget*>(ptr)->screen(screen);
}

void QDesktopWidget_ConnectPrimaryScreenChanged(void* ptr, long long t)
{
	QObject::connect(static_cast<QDesktopWidget*>(ptr), static_cast<void (QDesktopWidget::*)()>(&QDesktopWidget::primaryScreenChanged), static_cast<MyQDesktopWidget*>(ptr), static_cast<void (MyQDesktopWidget::*)()>(&MyQDesktopWidget::Signal_PrimaryScreenChanged), static_cast<Qt::ConnectionType>(t));
}

void QDesktopWidget_DisconnectPrimaryScreenChanged(void* ptr)
{
	QObject::disconnect(static_cast<QDesktopWidget*>(ptr), static_cast<void (QDesktopWidget::*)()>(&QDesktopWidget::primaryScreenChanged), static_cast<MyQDesktopWidget*>(ptr), static_cast<void (MyQDesktopWidget::*)()>(&MyQDesktopWidget::Signal_PrimaryScreenChanged));
}

void QDesktopWidget_PrimaryScreenChanged(void* ptr)
{
	static_cast<QDesktopWidget*>(ptr)->primaryScreenChanged();
}

void QDesktopWidget_ConnectResized(void* ptr, long long t)
{
	QObject::connect(static_cast<QDesktopWidget*>(ptr), static_cast<void (QDesktopWidget::*)(int)>(&QDesktopWidget::resized), static_cast<MyQDesktopWidget*>(ptr), static_cast<void (MyQDesktopWidget::*)(int)>(&MyQDesktopWidget::Signal_Resized), static_cast<Qt::ConnectionType>(t));
}

void QDesktopWidget_DisconnectResized(void* ptr)
{
	QObject::disconnect(static_cast<QDesktopWidget*>(ptr), static_cast<void (QDesktopWidget::*)(int)>(&QDesktopWidget::resized), static_cast<MyQDesktopWidget*>(ptr), static_cast<void (MyQDesktopWidget::*)(int)>(&MyQDesktopWidget::Signal_Resized));
}

void QDesktopWidget_Resized(void* ptr, int screen)
{
	static_cast<QDesktopWidget*>(ptr)->resized(screen);
}

void QDesktopWidget_ConnectScreenCountChanged(void* ptr, long long t)
{
	QObject::connect(static_cast<QDesktopWidget*>(ptr), static_cast<void (QDesktopWidget::*)(int)>(&QDesktopWidget::screenCountChanged), static_cast<MyQDesktopWidget*>(ptr), static_cast<void (MyQDesktopWidget::*)(int)>(&MyQDesktopWidget::Signal_ScreenCountChanged), static_cast<Qt::ConnectionType>(t));
}

void QDesktopWidget_DisconnectScreenCountChanged(void* ptr)
{
	QObject::disconnect(static_cast<QDesktopWidget*>(ptr), static_cast<void (QDesktopWidget::*)(int)>(&QDesktopWidget::screenCountChanged), static_cast<MyQDesktopWidget*>(ptr), static_cast<void (MyQDesktopWidget::*)(int)>(&MyQDesktopWidget::Signal_ScreenCountChanged));
}

void QDesktopWidget_ScreenCountChanged(void* ptr, int newCount)
{
	static_cast<QDesktopWidget*>(ptr)->screenCountChanged(newCount);
}

void QDesktopWidget_ConnectWorkAreaResized(void* ptr, long long t)
{
	QObject::connect(static_cast<QDesktopWidget*>(ptr), static_cast<void (QDesktopWidget::*)(int)>(&QDesktopWidget::workAreaResized), static_cast<MyQDesktopWidget*>(ptr), static_cast<void (MyQDesktopWidget::*)(int)>(&MyQDesktopWidget::Signal_WorkAreaResized), static_cast<Qt::ConnectionType>(t));
}

void QDesktopWidget_DisconnectWorkAreaResized(void* ptr)
{
	QObject::disconnect(static_cast<QDesktopWidget*>(ptr), static_cast<void (QDesktopWidget::*)(int)>(&QDesktopWidget::workAreaResized), static_cast<MyQDesktopWidget*>(ptr), static_cast<void (MyQDesktopWidget::*)(int)>(&MyQDesktopWidget::Signal_WorkAreaResized));
}

void QDesktopWidget_WorkAreaResized(void* ptr, int screen)
{
	static_cast<QDesktopWidget*>(ptr)->workAreaResized(screen);
}

void QDesktopWidget_DestroyQDesktopWidget(void* ptr)
{
	static_cast<QDesktopWidget*>(ptr)->~QDesktopWidget();
}

void QDesktopWidget_DestroyQDesktopWidgetDefault(void* ptr)
{
	Q_UNUSED(ptr);

}

char QDesktopWidget_IsVirtualDesktop(void* ptr)
{
	return static_cast<QDesktopWidget*>(ptr)->isVirtualDesktop();
}

void* QDesktopWidget_AvailableGeometry2(void* ptr, void* p)
{
	return ({ QRect tmpValue = static_cast<QDesktopWidget*>(ptr)->availableGeometry(*static_cast<QPoint*>(p)); new QRect(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QDesktopWidget_AvailableGeometry(void* ptr, void* widget)
{
		return ({ QRect tmpValue = static_cast<QDesktopWidget*>(ptr)->availableGeometry(static_cast<QWidget*>(widget)); new QRect(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QDesktopWidget_ScreenGeometry2(void* ptr, void* p)
{
	return ({ QRect tmpValue = static_cast<QDesktopWidget*>(ptr)->screenGeometry(*static_cast<QPoint*>(p)); new QRect(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QDesktopWidget_ScreenGeometry(void* ptr, void* widget)
{
		return ({ QRect tmpValue = static_cast<QDesktopWidget*>(ptr)->screenGeometry(static_cast<QWidget*>(widget)); new QRect(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

int QDesktopWidget_NumScreens(void* ptr)
{
	return static_cast<QDesktopWidget*>(ptr)->numScreens();
}

int QDesktopWidget_PrimaryScreen(void* ptr)
{
	return static_cast<QDesktopWidget*>(ptr)->primaryScreen();
}

int QDesktopWidget_ScreenCount(void* ptr)
{
	return static_cast<QDesktopWidget*>(ptr)->screenCount();
}

int QDesktopWidget_ScreenNumber2(void* ptr, void* point)
{
	return static_cast<QDesktopWidget*>(ptr)->screenNumber(*static_cast<QPoint*>(point));
}

int QDesktopWidget_ScreenNumber(void* ptr, void* widget)
{
		return static_cast<QDesktopWidget*>(ptr)->screenNumber(static_cast<QWidget*>(widget));
}

int QDialogButtonBox_AndroidLayout_Type()
{
	return QDialogButtonBox::AndroidLayout;
}

int QDirModel_FilePathRole_Type()
{
	return QDirModel::FilePathRole;
}

int QFileSystemModel_FilePathRole_Type()
{
	return QFileSystemModel::FilePathRole;
}

int QFileSystemModel_FileNameRole_Type()
{
	return QFileSystemModel::FileNameRole;
}

int QFileSystemModel_FilePermissions_Type()
{
	return QFileSystemModel::FilePermissions;
}

class MyQFrame: public QFrame
{
public:
	MyQFrame(QWidget *parent = Q_NULLPTR, Qt::WindowFlags ff = Qt::WindowFlags()) : QFrame(parent, ff) {QFrame_QFrame_QRegisterMetaType();};
	bool event(QEvent * e) { return callbackQWidget_Event(this, e) != 0; };
	void changeEvent(QEvent * ev) { callbackQWidget_ChangeEvent(this, ev); };
	void paintEvent(QPaintEvent * vqp) { callbackQWidget_PaintEvent(this, vqp); };
	 ~MyQFrame() { callbackQFrame_DestroyQFrame(this); };
	QSize sizeHint() const { return *static_cast<QSize*>(callbackQWidget_SizeHint(const_cast<void*>(static_cast<const void*>(this)))); };
	const QMetaObject * metaObject() const { return static_cast<QMetaObject*>(callbackQWidget_MetaObject(const_cast<void*>(static_cast<const void*>(this)))); };
	bool close() { return callbackQWidget_Close(this) != 0; };
	bool focusNextPrevChild(bool next) { return callbackQWidget_FocusNextPrevChild(this, next) != 0; };
	bool nativeEvent(const QByteArray & eventType, void * message, long * result) { return callbackQWidget_NativeEvent(this, const_cast<QByteArray*>(&eventType), message, result) != 0; };
	void actionEvent(QActionEvent * event) { callbackQWidget_ActionEvent(this, event); };
	void closeEvent(QCloseEvent * event) { callbackQWidget_CloseEvent(this, event); };
	void contextMenuEvent(QContextMenuEvent * event) { callbackQWidget_ContextMenuEvent(this, event); };
	void Signal_CustomContextMenuRequested(const QPoint & pos) { callbackQWidget_CustomContextMenuRequested(this, const_cast<QPoint*>(&pos)); };
	void dragEnterEvent(QDragEnterEvent * event) { callbackQWidget_DragEnterEvent(this, event); };
	void dragLeaveEvent(QDragLeaveEvent * event) { callbackQWidget_DragLeaveEvent(this, event); };
	void dragMoveEvent(QDragMoveEvent * event) { callbackQWidget_DragMoveEvent(this, event); };
	void dropEvent(QDropEvent * event) { callbackQWidget_DropEvent(this, event); };
	void enterEvent(QEvent * event) { callbackQWidget_EnterEvent(this, event); };
	void focusInEvent(QFocusEvent * event) { callbackQWidget_FocusInEvent(this, event); };
	void focusOutEvent(QFocusEvent * event) { callbackQWidget_FocusOutEvent(this, event); };
	void hide() { callbackQWidget_Hide(this); };
	void hideEvent(QHideEvent * event) { callbackQWidget_HideEvent(this, event); };
	void inputMethodEvent(QInputMethodEvent * event) { callbackQWidget_InputMethodEvent(this, event); };
	void keyPressEvent(QKeyEvent * event) { callbackQWidget_KeyPressEvent(this, event); };
	void keyReleaseEvent(QKeyEvent * event) { callbackQWidget_KeyReleaseEvent(this, event); };
	void leaveEvent(QEvent * event) { callbackQWidget_LeaveEvent(this, event); };
	void lower() { callbackQWidget_Lower(this); };
	void mouseDoubleClickEvent(QMouseEvent * event) { callbackQWidget_MouseDoubleClickEvent(this, event); };
	void mouseMoveEvent(QMouseEvent * event) { callbackQWidget_MouseMoveEvent(this, event); };
	void mousePressEvent(QMouseEvent * event) { callbackQWidget_MousePressEvent(this, event); };
	void mouseReleaseEvent(QMouseEvent * event) { callbackQWidget_MouseReleaseEvent(this, event); };
	void moveEvent(QMoveEvent * event) { callbackQWidget_MoveEvent(this, event); };
	void raise() { callbackQWidget_Raise(this); };
	void repaint() { callbackQWidget_Repaint(this); };
	void resizeEvent(QResizeEvent * event) { callbackQWidget_ResizeEvent(this, event); };
	void setDisabled(bool disable) { callbackQWidget_SetDisabled(this, disable); };
	void setEnabled(bool vbo) { callbackQWidget_SetEnabled(this, vbo); };
	void setFocus() { callbackQWidget_SetFocus2(this); };
	void setHidden(bool hidden) { callbackQWidget_SetHidden(this, hidden); };
	void setStyleSheet(const QString & styleSheet) { QByteArray t728ae7 = styleSheet.toUtf8(); QtWidgets_PackedString styleSheetPacked = { const_cast<char*>(t728ae7.prepend("WHITESPACE").constData()+10), t728ae7.size()-10 };callbackQWidget_SetStyleSheet(this, styleSheetPacked); };
	void setVisible(bool visible) { callbackQWidget_SetVisible(this, visible); };
	void setWindowModified(bool vbo) { callbackQWidget_SetWindowModified(this, vbo); };
	void setWindowTitle(const QString & vqs) { QByteArray tda39a3 = vqs.toUtf8(); QtWidgets_PackedString vqsPacked = { const_cast<char*>(tda39a3.prepend("WHITESPACE").constData()+10), tda39a3.size()-10 };callbackQWidget_SetWindowTitle(this, vqsPacked); };
	void show() { callbackQWidget_Show(this); };
	void showEvent(QShowEvent * event) { callbackQWidget_ShowEvent(this, event); };
	void showFullScreen() { callbackQWidget_ShowFullScreen(this); };
	void showMaximized() { callbackQWidget_ShowMaximized(this); };
	void showMinimized() { callbackQWidget_ShowMinimized(this); };
	void showNormal() { callbackQWidget_ShowNormal(this); };
	void tabletEvent(QTabletEvent * event) { callbackQWidget_TabletEvent(this, event); };
	void update() { callbackQWidget_Update(this); };
	void updateMicroFocus() { callbackQWidget_UpdateMicroFocus(this); };
	void wheelEvent(QWheelEvent * event) { callbackQWidget_WheelEvent(this, event); };
	void Signal_WindowIconChanged(const QIcon & icon) { callbackQWidget_WindowIconChanged(this, const_cast<QIcon*>(&icon)); };
	void Signal_WindowTitleChanged(const QString & title) { QByteArray t3c6de1 = title.toUtf8(); QtWidgets_PackedString titlePacked = { const_cast<char*>(t3c6de1.prepend("WHITESPACE").constData()+10), t3c6de1.size()-10 };callbackQWidget_WindowTitleChanged(this, titlePacked); };
	QPaintEngine * paintEngine() const { return static_cast<QPaintEngine*>(callbackQWidget_PaintEngine(const_cast<void*>(static_cast<const void*>(this)))); };
	QSize minimumSizeHint() const { return *static_cast<QSize*>(callbackQWidget_MinimumSizeHint(const_cast<void*>(static_cast<const void*>(this)))); };
	QVariant inputMethodQuery(Qt::InputMethodQuery query) const { return *static_cast<QVariant*>(callbackQWidget_InputMethodQuery(const_cast<void*>(static_cast<const void*>(this)), query)); };
	bool hasHeightForWidth() const { return callbackQWidget_HasHeightForWidth(const_cast<void*>(static_cast<const void*>(this))) != 0; };
	int heightForWidth(int w) const { return callbackQWidget_HeightForWidth(const_cast<void*>(static_cast<const void*>(this)), w); };
	int metric(QPaintDevice::PaintDeviceMetric m) const { return callbackQWidget_Metric(const_cast<void*>(static_cast<const void*>(this)), m); };
	void initPainter(QPainter * painter) const { callbackQWidget_InitPainter(const_cast<void*>(static_cast<const void*>(this)), painter); };
	bool eventFilter(QObject * watched, QEvent * event) { return callbackQWidget_EventFilter(this, watched, event) != 0; };
	void childEvent(QChildEvent * event) { callbackQWidget_ChildEvent(this, event); };
	void connectNotify(const QMetaMethod & sign) { callbackQWidget_ConnectNotify(this, const_cast<QMetaMethod*>(&sign)); };
	void customEvent(QEvent * event) { callbackQWidget_CustomEvent(this, event); };
	void deleteLater() { callbackQWidget_DeleteLater(this); };
	void Signal_Destroyed(QObject * obj) { callbackQWidget_Destroyed(this, obj); };
	void disconnectNotify(const QMetaMethod & sign) { callbackQWidget_DisconnectNotify(this, const_cast<QMetaMethod*>(&sign)); };
	void Signal_ObjectNameChanged(const QString & objectName) { QByteArray taa2c4f = objectName.toUtf8(); QtWidgets_PackedString objectNamePacked = { const_cast<char*>(taa2c4f.prepend("WHITESPACE").constData()+10), taa2c4f.size()-10 };callbackQWidget_ObjectNameChanged(this, objectNamePacked); };
	void timerEvent(QTimerEvent * event) { callbackQWidget_TimerEvent(this, event); };
};

Q_DECLARE_METATYPE(QFrame*)
Q_DECLARE_METATYPE(MyQFrame*)

int QFrame_QFrame_QRegisterMetaType(){qRegisterMetaType<QFrame*>(); return qRegisterMetaType<MyQFrame*>();}

void* QFrame_NewQFrame(void* parent, long long ff)
{
		return new MyQFrame(static_cast<QWidget*>(parent), static_cast<Qt::WindowType>(ff));
}

void QFrame_SetFrameRect(void* ptr, void* vqr)
{
	static_cast<QFrame*>(ptr)->setFrameRect(*static_cast<QRect*>(vqr));
}

void QFrame_SetFrameShadow(void* ptr, long long vqf)
{
	static_cast<QFrame*>(ptr)->setFrameShadow(static_cast<QFrame::Shadow>(vqf));
}

void QFrame_SetFrameShape(void* ptr, long long vqf)
{
	static_cast<QFrame*>(ptr)->setFrameShape(static_cast<QFrame::Shape>(vqf));
}

void QFrame_SetFrameStyle(void* ptr, int style)
{
	static_cast<QFrame*>(ptr)->setFrameStyle(style);
}

void QFrame_SetLineWidth(void* ptr, int vin)
{
	static_cast<QFrame*>(ptr)->setLineWidth(vin);
}

void QFrame_SetMidLineWidth(void* ptr, int vin)
{
	static_cast<QFrame*>(ptr)->setMidLineWidth(vin);
}

void QFrame_DestroyQFrame(void* ptr)
{
	static_cast<QFrame*>(ptr)->~QFrame();
}

void QFrame_DestroyQFrameDefault(void* ptr)
{
	Q_UNUSED(ptr);

}

long long QFrame_FrameShadow(void* ptr)
{
	return static_cast<QFrame*>(ptr)->frameShadow();
}

long long QFrame_FrameShape(void* ptr)
{
	return static_cast<QFrame*>(ptr)->frameShape();
}

void* QFrame_FrameRect(void* ptr)
{
	return ({ QRect tmpValue = static_cast<QFrame*>(ptr)->frameRect(); new QRect(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

int QFrame_FrameStyle(void* ptr)
{
	return static_cast<QFrame*>(ptr)->frameStyle();
}

int QFrame_FrameWidth(void* ptr)
{
	return static_cast<QFrame*>(ptr)->frameWidth();
}

int QFrame_LineWidth(void* ptr)
{
	return static_cast<QFrame*>(ptr)->lineWidth();
}

int QFrame_MidLineWidth(void* ptr)
{
	return static_cast<QFrame*>(ptr)->midLineWidth();
}

void QFrame_InitStyleOption(void* ptr, void* option)
{
	static_cast<QFrame*>(ptr)->initStyleOption(static_cast<QStyleOptionFrame*>(option));
}

class MyQGraphicsEffect: public QGraphicsEffect
{
public:
	MyQGraphicsEffect(QObject *parent = Q_NULLPTR) : QGraphicsEffect(parent) {QGraphicsEffect_QGraphicsEffect_QRegisterMetaType();};
	void draw(QPainter * painter) { callbackQGraphicsEffect_Draw(this, painter); };
	void Signal_EnabledChanged(bool enabled) { callbackQGraphicsEffect_EnabledChanged(this, enabled); };
	void setEnabled(bool enable) { callbackQGraphicsEffect_SetEnabled(this, enable); };
	void sourceChanged(QGraphicsEffect::ChangeFlags flags) { callbackQGraphicsEffect_SourceChanged(this, flags); };
	void update() { callbackQGraphicsEffect_Update(this); };
	 ~MyQGraphicsEffect() { callbackQGraphicsEffect_DestroyQGraphicsEffect(this); };
	QRectF boundingRectFor(const QRectF & rect) const { return *static_cast<QRectF*>(callbackQGraphicsEffect_BoundingRectFor(const_cast<void*>(static_cast<const void*>(this)), const_cast<QRectF*>(&rect))); };
	const QMetaObject * metaObject() const { return static_cast<QMetaObject*>(callbackQGraphicsEffect_MetaObject(const_cast<void*>(static_cast<const void*>(this)))); };
	bool event(QEvent * e) { return callbackQGraphicsEffect_Event(this, e) != 0; };
	bool eventFilter(QObject * watched, QEvent * event) { return callbackQGraphicsEffect_EventFilter(this, watched, event) != 0; };
	void childEvent(QChildEvent * event) { callbackQGraphicsEffect_ChildEvent(this, event); };
	void connectNotify(const QMetaMethod & sign) { callbackQGraphicsEffect_ConnectNotify(this, const_cast<QMetaMethod*>(&sign)); };
	void customEvent(QEvent * event) { callbackQGraphicsEffect_CustomEvent(this, event); };
	void deleteLater() { callbackQGraphicsEffect_DeleteLater(this); };
	void Signal_Destroyed(QObject * obj) { callbackQGraphicsEffect_Destroyed(this, obj); };
	void disconnectNotify(const QMetaMethod & sign) { callbackQGraphicsEffect_DisconnectNotify(this, const_cast<QMetaMethod*>(&sign)); };
	void Signal_ObjectNameChanged(const QString & objectName) { QByteArray taa2c4f = objectName.toUtf8(); QtWidgets_PackedString objectNamePacked = { const_cast<char*>(taa2c4f.prepend("WHITESPACE").constData()+10), taa2c4f.size()-10 };callbackQGraphicsEffect_ObjectNameChanged(this, objectNamePacked); };
	void timerEvent(QTimerEvent * event) { callbackQGraphicsEffect_TimerEvent(this, event); };
};

Q_DECLARE_METATYPE(QGraphicsEffect*)
Q_DECLARE_METATYPE(MyQGraphicsEffect*)

int QGraphicsEffect_QGraphicsEffect_QRegisterMetaType(){qRegisterMetaType<QGraphicsEffect*>(); return qRegisterMetaType<MyQGraphicsEffect*>();}

void* QGraphicsEffect_NewQGraphicsEffect(void* parent)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsEffect(static_cast<QGraphicsObject*>(parent));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsEffect(static_cast<QGraphicsWidget*>(parent));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsEffect(static_cast<QLayout*>(parent));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsEffect(static_cast<QWidget*>(parent));
	} else if (dynamic_cast<QWindow*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsEffect(static_cast<QWindow*>(parent));
	} else {
		return new MyQGraphicsEffect(static_cast<QObject*>(parent));
	}
}

struct QtWidgets_PackedString QGraphicsEffect_QGraphicsEffect_Tr(char* s, char* c, int n)
{
	return ({ QByteArray t9442a6 = QGraphicsEffect::tr(const_cast<const char*>(s), const_cast<const char*>(c), n).toUtf8(); QtWidgets_PackedString { const_cast<char*>(t9442a6.prepend("WHITESPACE").constData()+10), t9442a6.size()-10 }; });
}

void QGraphicsEffect_Draw(void* ptr, void* painter)
{
	static_cast<QGraphicsEffect*>(ptr)->draw(static_cast<QPainter*>(painter));
}

void QGraphicsEffect_DrawSource(void* ptr, void* painter)
{
	static_cast<QGraphicsEffect*>(ptr)->drawSource(static_cast<QPainter*>(painter));
}

void QGraphicsEffect_ConnectEnabledChanged(void* ptr, long long t)
{
	QObject::connect(static_cast<QGraphicsEffect*>(ptr), static_cast<void (QGraphicsEffect::*)(bool)>(&QGraphicsEffect::enabledChanged), static_cast<MyQGraphicsEffect*>(ptr), static_cast<void (MyQGraphicsEffect::*)(bool)>(&MyQGraphicsEffect::Signal_EnabledChanged), static_cast<Qt::ConnectionType>(t));
}

void QGraphicsEffect_DisconnectEnabledChanged(void* ptr)
{
	QObject::disconnect(static_cast<QGraphicsEffect*>(ptr), static_cast<void (QGraphicsEffect::*)(bool)>(&QGraphicsEffect::enabledChanged), static_cast<MyQGraphicsEffect*>(ptr), static_cast<void (MyQGraphicsEffect::*)(bool)>(&MyQGraphicsEffect::Signal_EnabledChanged));
}

void QGraphicsEffect_EnabledChanged(void* ptr, char enabled)
{
	static_cast<QGraphicsEffect*>(ptr)->enabledChanged(enabled != 0);
}

void QGraphicsEffect_SetEnabled(void* ptr, char enable)
{
	QMetaObject::invokeMethod(static_cast<QGraphicsEffect*>(ptr), "setEnabled", Q_ARG(bool, enable != 0));
}

void QGraphicsEffect_SetEnabledDefault(void* ptr, char enable)
{
		static_cast<QGraphicsEffect*>(ptr)->QGraphicsEffect::setEnabled(enable != 0);
}

void QGraphicsEffect_SourceChanged(void* ptr, long long flags)
{
	static_cast<QGraphicsEffect*>(ptr)->sourceChanged(static_cast<QGraphicsEffect::ChangeFlag>(flags));
}

void QGraphicsEffect_SourceChangedDefault(void* ptr, long long flags)
{
		static_cast<QGraphicsEffect*>(ptr)->QGraphicsEffect::sourceChanged(static_cast<QGraphicsEffect::ChangeFlag>(flags));
}

void QGraphicsEffect_Update(void* ptr)
{
	QMetaObject::invokeMethod(static_cast<QGraphicsEffect*>(ptr), "update");
}

void QGraphicsEffect_UpdateDefault(void* ptr)
{
		static_cast<QGraphicsEffect*>(ptr)->QGraphicsEffect::update();
}

void QGraphicsEffect_UpdateBoundingRect(void* ptr)
{
	static_cast<QGraphicsEffect*>(ptr)->updateBoundingRect();
}

void QGraphicsEffect_DestroyQGraphicsEffect(void* ptr)
{
	static_cast<QGraphicsEffect*>(ptr)->~QGraphicsEffect();
}

void QGraphicsEffect_DestroyQGraphicsEffectDefault(void* ptr)
{
	Q_UNUSED(ptr);

}

void* QGraphicsEffect_SourcePixmap(void* ptr, long long system, void* offset, long long mode)
{
	return new QPixmap(static_cast<QGraphicsEffect*>(ptr)->sourcePixmap(static_cast<Qt::CoordinateSystem>(system), static_cast<QPoint*>(offset), static_cast<QGraphicsEffect::PixmapPadMode>(mode)));
}

void* QGraphicsEffect_BoundingRect(void* ptr)
{
	return ({ QRectF tmpValue = static_cast<QGraphicsEffect*>(ptr)->boundingRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QGraphicsEffect_BoundingRectFor(void* ptr, void* rect)
{
	return ({ QRectF tmpValue = static_cast<QGraphicsEffect*>(ptr)->boundingRectFor(*static_cast<QRectF*>(rect)); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QGraphicsEffect_BoundingRectForDefault(void* ptr, void* rect)
{
		return ({ QRectF tmpValue = static_cast<QGraphicsEffect*>(ptr)->QGraphicsEffect::boundingRectFor(*static_cast<QRectF*>(rect)); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QGraphicsEffect_SourceBoundingRect(void* ptr, long long system)
{
	return ({ QRectF tmpValue = static_cast<QGraphicsEffect*>(ptr)->sourceBoundingRect(static_cast<Qt::CoordinateSystem>(system)); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

char QGraphicsEffect_IsEnabled(void* ptr)
{
	return static_cast<QGraphicsEffect*>(ptr)->isEnabled();
}

char QGraphicsEffect_SourceIsPixmap(void* ptr)
{
	return static_cast<QGraphicsEffect*>(ptr)->sourceIsPixmap();
}

void* QGraphicsEffect_MetaObjectDefault(void* ptr)
{
		return const_cast<QMetaObject*>(static_cast<QGraphicsEffect*>(ptr)->QGraphicsEffect::metaObject());
}

void* QGraphicsEffect___dynamicPropertyNames_atList(void* ptr, int i)
{
	return new QByteArray(({QByteArray tmp = static_cast<QList<QByteArray>*>(ptr)->at(i); if (i == static_cast<QList<QByteArray>*>(ptr)->size()-1) { static_cast<QList<QByteArray>*>(ptr)->~QList(); free(ptr); }; tmp; }));
}

void QGraphicsEffect___dynamicPropertyNames_setList(void* ptr, void* i)
{
	static_cast<QList<QByteArray>*>(ptr)->append(*static_cast<QByteArray*>(i));
}

void* QGraphicsEffect___dynamicPropertyNames_newList(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QByteArray>();
}

void* QGraphicsEffect___findChildren_atList2(void* ptr, int i)
{
	return ({QObject* tmp = static_cast<QList<QObject*>*>(ptr)->at(i); if (i == static_cast<QList<QObject*>*>(ptr)->size()-1) { static_cast<QList<QObject*>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QGraphicsEffect___findChildren_setList2(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QLayout*>(i));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QWidget*>(i));
	} else {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QObject*>(i));
	}
}

void* QGraphicsEffect___findChildren_newList2(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QObject*>();
}

void* QGraphicsEffect___findChildren_atList3(void* ptr, int i)
{
	return ({QObject* tmp = static_cast<QList<QObject*>*>(ptr)->at(i); if (i == static_cast<QList<QObject*>*>(ptr)->size()-1) { static_cast<QList<QObject*>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QGraphicsEffect___findChildren_setList3(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QLayout*>(i));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QWidget*>(i));
	} else {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QObject*>(i));
	}
}

void* QGraphicsEffect___findChildren_newList3(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QObject*>();
}

void* QGraphicsEffect___findChildren_atList(void* ptr, int i)
{
	return ({QObject* tmp = static_cast<QList<QObject*>*>(ptr)->at(i); if (i == static_cast<QList<QObject*>*>(ptr)->size()-1) { static_cast<QList<QObject*>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QGraphicsEffect___findChildren_setList(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QLayout*>(i));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QWidget*>(i));
	} else {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QObject*>(i));
	}
}

void* QGraphicsEffect___findChildren_newList(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QObject*>();
}

void* QGraphicsEffect___children_atList(void* ptr, int i)
{
	return ({QObject * tmp = static_cast<QList<QObject *>*>(ptr)->at(i); if (i == static_cast<QList<QObject *>*>(ptr)->size()-1) { static_cast<QList<QObject *>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QGraphicsEffect___children_setList(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject *>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject *>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject *>*>(ptr)->append(static_cast<QLayout*>(i));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject *>*>(ptr)->append(static_cast<QWidget*>(i));
	} else {
		static_cast<QList<QObject *>*>(ptr)->append(static_cast<QObject*>(i));
	}
}

void* QGraphicsEffect___children_newList(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QObject *>();
}

char QGraphicsEffect_EventDefault(void* ptr, void* e)
{
		return static_cast<QGraphicsEffect*>(ptr)->QGraphicsEffect::event(static_cast<QEvent*>(e));
}

char QGraphicsEffect_EventFilterDefault(void* ptr, void* watched, void* event)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(watched))) {
		return static_cast<QGraphicsEffect*>(ptr)->QGraphicsEffect::eventFilter(static_cast<QGraphicsObject*>(watched), static_cast<QEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(watched))) {
		return static_cast<QGraphicsEffect*>(ptr)->QGraphicsEffect::eventFilter(static_cast<QGraphicsWidget*>(watched), static_cast<QEvent*>(event));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(watched))) {
		return static_cast<QGraphicsEffect*>(ptr)->QGraphicsEffect::eventFilter(static_cast<QLayout*>(watched), static_cast<QEvent*>(event));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(watched))) {
		return static_cast<QGraphicsEffect*>(ptr)->QGraphicsEffect::eventFilter(static_cast<QWidget*>(watched), static_cast<QEvent*>(event));
	} else {
		return static_cast<QGraphicsEffect*>(ptr)->QGraphicsEffect::eventFilter(static_cast<QObject*>(watched), static_cast<QEvent*>(event));
	}
}

void QGraphicsEffect_ChildEventDefault(void* ptr, void* event)
{
		static_cast<QGraphicsEffect*>(ptr)->QGraphicsEffect::childEvent(static_cast<QChildEvent*>(event));
}

void QGraphicsEffect_ConnectNotifyDefault(void* ptr, void* sign)
{
		static_cast<QGraphicsEffect*>(ptr)->QGraphicsEffect::connectNotify(*static_cast<QMetaMethod*>(sign));
}

void QGraphicsEffect_CustomEventDefault(void* ptr, void* event)
{
		static_cast<QGraphicsEffect*>(ptr)->QGraphicsEffect::customEvent(static_cast<QEvent*>(event));
}

void QGraphicsEffect_DeleteLaterDefault(void* ptr)
{
		static_cast<QGraphicsEffect*>(ptr)->QGraphicsEffect::deleteLater();
}

void QGraphicsEffect_DisconnectNotifyDefault(void* ptr, void* sign)
{
		static_cast<QGraphicsEffect*>(ptr)->QGraphicsEffect::disconnectNotify(*static_cast<QMetaMethod*>(sign));
}

void QGraphicsEffect_TimerEventDefault(void* ptr, void* event)
{
		static_cast<QGraphicsEffect*>(ptr)->QGraphicsEffect::timerEvent(static_cast<QTimerEvent*>(event));
}

class MyQGraphicsEllipseItem: public QGraphicsEllipseItem
{
public:
	MyQGraphicsEllipseItem(QGraphicsItem *parent = Q_NULLPTR) : QGraphicsEllipseItem(parent) {QGraphicsEllipseItem_QGraphicsEllipseItem_QRegisterMetaType();};
	MyQGraphicsEllipseItem(const QRectF &rect, QGraphicsItem *parent = Q_NULLPTR) : QGraphicsEllipseItem(rect, parent) {QGraphicsEllipseItem_QGraphicsEllipseItem_QRegisterMetaType();};
	MyQGraphicsEllipseItem(qreal x, qreal y, qreal width, qreal height, QGraphicsItem *parent = Q_NULLPTR) : QGraphicsEllipseItem(x, y, width, height, parent) {QGraphicsEllipseItem_QGraphicsEllipseItem_QRegisterMetaType();};
	void paint(QPainter * painter, const QStyleOptionGraphicsItem * option, QWidget * widget) { callbackQGraphicsEllipseItem_Paint(this, painter, const_cast<QStyleOptionGraphicsItem*>(option), widget); };
	 ~MyQGraphicsEllipseItem() { callbackQGraphicsEllipseItem_DestroyQGraphicsEllipseItem(this); };
	QPainterPath opaqueArea() const { return *static_cast<QPainterPath*>(callbackQGraphicsItem_OpaqueArea(const_cast<void*>(static_cast<const void*>(this)))); };
	QPainterPath shape() const { return *static_cast<QPainterPath*>(callbackQGraphicsItem_Shape(const_cast<void*>(static_cast<const void*>(this)))); };
	QRectF boundingRect() const { return *static_cast<QRectF*>(callbackQGraphicsEllipseItem_BoundingRect(const_cast<void*>(static_cast<const void*>(this)))); };
	bool contains(const QPointF & point) const { return callbackQGraphicsItem_Contains(const_cast<void*>(static_cast<const void*>(this)), const_cast<QPointF*>(&point)) != 0; };
	bool isObscuredBy(const QGraphicsItem * item) const { return callbackQGraphicsItem_IsObscuredBy(const_cast<void*>(static_cast<const void*>(this)), const_cast<QGraphicsItem*>(item)) != 0; };
	int type() const { return callbackQGraphicsItem_Type(const_cast<void*>(static_cast<const void*>(this))); };
	QVariant itemChange(QGraphicsItem::GraphicsItemChange change, const QVariant & value) { return *static_cast<QVariant*>(callbackQGraphicsItem_ItemChange(this, change, const_cast<QVariant*>(&value))); };
	bool sceneEvent(QEvent * event) { return callbackQGraphicsItem_SceneEvent(this, event) != 0; };
	bool sceneEventFilter(QGraphicsItem * watched, QEvent * event) { return callbackQGraphicsItem_SceneEventFilter(this, watched, event) != 0; };
	void advance(int phase) { callbackQGraphicsItem_Advance(this, phase); };
	void contextMenuEvent(QGraphicsSceneContextMenuEvent * event) { callbackQGraphicsItem_ContextMenuEvent(this, event); };
	void dragEnterEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DragEnterEvent(this, event); };
	void dragLeaveEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DragLeaveEvent(this, event); };
	void dragMoveEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DragMoveEvent(this, event); };
	void dropEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DropEvent(this, event); };
	void focusInEvent(QFocusEvent * event) { callbackQGraphicsItem_FocusInEvent(this, event); };
	void focusOutEvent(QFocusEvent * event) { callbackQGraphicsItem_FocusOutEvent(this, event); };
	void hoverEnterEvent(QGraphicsSceneHoverEvent * event) { callbackQGraphicsItem_HoverEnterEvent(this, event); };
	void hoverLeaveEvent(QGraphicsSceneHoverEvent * event) { callbackQGraphicsItem_HoverLeaveEvent(this, event); };
	void hoverMoveEvent(QGraphicsSceneHoverEvent * event) { callbackQGraphicsItem_HoverMoveEvent(this, event); };
	void inputMethodEvent(QInputMethodEvent * event) { callbackQGraphicsItem_InputMethodEvent(this, event); };
	void keyPressEvent(QKeyEvent * event) { callbackQGraphicsItem_KeyPressEvent(this, event); };
	void keyReleaseEvent(QKeyEvent * event) { callbackQGraphicsItem_KeyReleaseEvent(this, event); };
	void mouseDoubleClickEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MouseDoubleClickEvent(this, event); };
	void mouseMoveEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MouseMoveEvent(this, event); };
	void mousePressEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MousePressEvent(this, event); };
	void mouseReleaseEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MouseReleaseEvent(this, event); };
	void wheelEvent(QGraphicsSceneWheelEvent * event) { callbackQGraphicsItem_WheelEvent(this, event); };
	QVariant inputMethodQuery(Qt::InputMethodQuery query) const { return *static_cast<QVariant*>(callbackQGraphicsItem_InputMethodQuery(const_cast<void*>(static_cast<const void*>(this)), query)); };
	bool collidesWithItem(const QGraphicsItem * other, Qt::ItemSelectionMode mode) const { return callbackQGraphicsItem_CollidesWithItem(const_cast<void*>(static_cast<const void*>(this)), const_cast<QGraphicsItem*>(other), mode) != 0; };
	bool collidesWithPath(const QPainterPath & path, Qt::ItemSelectionMode mode) const { return callbackQGraphicsItem_CollidesWithPath(const_cast<void*>(static_cast<const void*>(this)), const_cast<QPainterPath*>(&path), mode) != 0; };
};

Q_DECLARE_METATYPE(QGraphicsEllipseItem*)
Q_DECLARE_METATYPE(MyQGraphicsEllipseItem*)

int QGraphicsEllipseItem_QGraphicsEllipseItem_QRegisterMetaType(){qRegisterMetaType<QGraphicsEllipseItem*>(); return qRegisterMetaType<MyQGraphicsEllipseItem*>();}

void* QGraphicsEllipseItem_NewQGraphicsEllipseItem(void* parent)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsEllipseItem(static_cast<QGraphicsObject*>(parent));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsEllipseItem(static_cast<QGraphicsWidget*>(parent));
	} else {
		return new MyQGraphicsEllipseItem(static_cast<QGraphicsItem*>(parent));
	}
}

void* QGraphicsEllipseItem_NewQGraphicsEllipseItem2(void* rect, void* parent)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsEllipseItem(*static_cast<QRectF*>(rect), static_cast<QGraphicsObject*>(parent));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsEllipseItem(*static_cast<QRectF*>(rect), static_cast<QGraphicsWidget*>(parent));
	} else {
		return new MyQGraphicsEllipseItem(*static_cast<QRectF*>(rect), static_cast<QGraphicsItem*>(parent));
	}
}

void* QGraphicsEllipseItem_NewQGraphicsEllipseItem3(double x, double y, double width, double height, void* parent)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsEllipseItem(x, y, width, height, static_cast<QGraphicsObject*>(parent));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsEllipseItem(x, y, width, height, static_cast<QGraphicsWidget*>(parent));
	} else {
		return new MyQGraphicsEllipseItem(x, y, width, height, static_cast<QGraphicsItem*>(parent));
	}
}

void QGraphicsEllipseItem_Paint(void* ptr, void* painter, void* option, void* widget)
{
		static_cast<QGraphicsEllipseItem*>(ptr)->paint(static_cast<QPainter*>(painter), static_cast<QStyleOptionGraphicsItem*>(option), static_cast<QWidget*>(widget));
}

void QGraphicsEllipseItem_PaintDefault(void* ptr, void* painter, void* option, void* widget)
{
		static_cast<QGraphicsEllipseItem*>(ptr)->QGraphicsEllipseItem::paint(static_cast<QPainter*>(painter), static_cast<QStyleOptionGraphicsItem*>(option), static_cast<QWidget*>(widget));
}

void QGraphicsEllipseItem_SetRect(void* ptr, void* rect)
{
	static_cast<QGraphicsEllipseItem*>(ptr)->setRect(*static_cast<QRectF*>(rect));
}

void QGraphicsEllipseItem_SetRect2(void* ptr, double x, double y, double width, double height)
{
	static_cast<QGraphicsEllipseItem*>(ptr)->setRect(x, y, width, height);
}

void QGraphicsEllipseItem_SetSpanAngle(void* ptr, int angle)
{
	static_cast<QGraphicsEllipseItem*>(ptr)->setSpanAngle(angle);
}

void QGraphicsEllipseItem_SetStartAngle(void* ptr, int angle)
{
	static_cast<QGraphicsEllipseItem*>(ptr)->setStartAngle(angle);
}

void QGraphicsEllipseItem_DestroyQGraphicsEllipseItem(void* ptr)
{
	static_cast<QGraphicsEllipseItem*>(ptr)->~QGraphicsEllipseItem();
}

void QGraphicsEllipseItem_DestroyQGraphicsEllipseItemDefault(void* ptr)
{
	Q_UNUSED(ptr);

}

void* QGraphicsEllipseItem_BoundingRect(void* ptr)
{
	return ({ QRectF tmpValue = static_cast<QGraphicsEllipseItem*>(ptr)->boundingRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QGraphicsEllipseItem_BoundingRectDefault(void* ptr)
{
		return ({ QRectF tmpValue = static_cast<QGraphicsEllipseItem*>(ptr)->QGraphicsEllipseItem::boundingRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QGraphicsEllipseItem_Rect(void* ptr)
{
	return ({ QRectF tmpValue = static_cast<QGraphicsEllipseItem*>(ptr)->rect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

int QGraphicsEllipseItem_SpanAngle(void* ptr)
{
	return static_cast<QGraphicsEllipseItem*>(ptr)->spanAngle();
}

int QGraphicsEllipseItem_StartAngle(void* ptr)
{
	return static_cast<QGraphicsEllipseItem*>(ptr)->startAngle();
}

class MyQGraphicsItem: public QGraphicsItem
{
public:
	MyQGraphicsItem(QGraphicsItem *parent = Q_NULLPTR) : QGraphicsItem(parent) {QGraphicsItem_QGraphicsItem_QRegisterMetaType();};
	QVariant itemChange(QGraphicsItem::GraphicsItemChange change, const QVariant & value) { return *static_cast<QVariant*>(callbackQGraphicsItem_ItemChange(this, change, const_cast<QVariant*>(&value))); };
	bool sceneEvent(QEvent * event) { return callbackQGraphicsItem_SceneEvent(this, event) != 0; };
	bool sceneEventFilter(QGraphicsItem * watched, QEvent * event) { return callbackQGraphicsItem_SceneEventFilter(this, watched, event) != 0; };
	void advance(int phase) { callbackQGraphicsItem_Advance(this, phase); };
	void contextMenuEvent(QGraphicsSceneContextMenuEvent * event) { callbackQGraphicsItem_ContextMenuEvent(this, event); };
	void dragEnterEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DragEnterEvent(this, event); };
	void dragLeaveEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DragLeaveEvent(this, event); };
	void dragMoveEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DragMoveEvent(this, event); };
	void dropEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DropEvent(this, event); };
	void focusInEvent(QFocusEvent * event) { callbackQGraphicsItem_FocusInEvent(this, event); };
	void focusOutEvent(QFocusEvent * event) { callbackQGraphicsItem_FocusOutEvent(this, event); };
	void hoverEnterEvent(QGraphicsSceneHoverEvent * event) { callbackQGraphicsItem_HoverEnterEvent(this, event); };
	void hoverLeaveEvent(QGraphicsSceneHoverEvent * event) { callbackQGraphicsItem_HoverLeaveEvent(this, event); };
	void hoverMoveEvent(QGraphicsSceneHoverEvent * event) { callbackQGraphicsItem_HoverMoveEvent(this, event); };
	void inputMethodEvent(QInputMethodEvent * event) { callbackQGraphicsItem_InputMethodEvent(this, event); };
	void keyPressEvent(QKeyEvent * event) { callbackQGraphicsItem_KeyPressEvent(this, event); };
	void keyReleaseEvent(QKeyEvent * event) { callbackQGraphicsItem_KeyReleaseEvent(this, event); };
	void mouseDoubleClickEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MouseDoubleClickEvent(this, event); };
	void mouseMoveEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MouseMoveEvent(this, event); };
	void mousePressEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MousePressEvent(this, event); };
	void mouseReleaseEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MouseReleaseEvent(this, event); };
	void paint(QPainter * painter, const QStyleOptionGraphicsItem * option, QWidget * widget) { callbackQGraphicsItem_Paint(this, painter, const_cast<QStyleOptionGraphicsItem*>(option), widget); };
	void wheelEvent(QGraphicsSceneWheelEvent * event) { callbackQGraphicsItem_WheelEvent(this, event); };
	 ~MyQGraphicsItem() { callbackQGraphicsItem_DestroyQGraphicsItem(this); };
	QPainterPath opaqueArea() const { return *static_cast<QPainterPath*>(callbackQGraphicsItem_OpaqueArea(const_cast<void*>(static_cast<const void*>(this)))); };
	QPainterPath shape() const { return *static_cast<QPainterPath*>(callbackQGraphicsItem_Shape(const_cast<void*>(static_cast<const void*>(this)))); };
	QRectF boundingRect() const { return *static_cast<QRectF*>(callbackQGraphicsItem_BoundingRect(const_cast<void*>(static_cast<const void*>(this)))); };
	QVariant inputMethodQuery(Qt::InputMethodQuery query) const { return *static_cast<QVariant*>(callbackQGraphicsItem_InputMethodQuery(const_cast<void*>(static_cast<const void*>(this)), query)); };
	bool collidesWithItem(const QGraphicsItem * other, Qt::ItemSelectionMode mode) const { return callbackQGraphicsItem_CollidesWithItem(const_cast<void*>(static_cast<const void*>(this)), const_cast<QGraphicsItem*>(other), mode) != 0; };
	bool collidesWithPath(const QPainterPath & path, Qt::ItemSelectionMode mode) const { return callbackQGraphicsItem_CollidesWithPath(const_cast<void*>(static_cast<const void*>(this)), const_cast<QPainterPath*>(&path), mode) != 0; };
	bool contains(const QPointF & point) const { return callbackQGraphicsItem_Contains(const_cast<void*>(static_cast<const void*>(this)), const_cast<QPointF*>(&point)) != 0; };
	bool isObscuredBy(const QGraphicsItem * item) const { return callbackQGraphicsItem_IsObscuredBy(const_cast<void*>(static_cast<const void*>(this)), const_cast<QGraphicsItem*>(item)) != 0; };
	int type() const { return callbackQGraphicsItem_Type(const_cast<void*>(static_cast<const void*>(this))); };
};

Q_DECLARE_METATYPE(MyQGraphicsItem*)

int QGraphicsItem_QGraphicsItem_QRegisterMetaType(){qRegisterMetaType<QGraphicsItem*>(); return qRegisterMetaType<MyQGraphicsItem*>();}

void* QGraphicsItem_NewQGraphicsItem(void* parent)
{
	return new MyQGraphicsItem(static_cast<QGraphicsItem*>(parent));
}

void* QGraphicsItem_ToGraphicsObject(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->toGraphicsObject();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->toGraphicsObject();
	} else {
		return static_cast<QGraphicsItem*>(ptr)->toGraphicsObject();
	}
}

void* QGraphicsItem_ItemChange(void* ptr, long long change, void* value)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return new QVariant(static_cast<QGraphicsObject*>(ptr)->itemChange(static_cast<QGraphicsItem::GraphicsItemChange>(change), *static_cast<QVariant*>(value)));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return new QVariant(static_cast<QGraphicsWidget*>(ptr)->itemChange(static_cast<QGraphicsItem::GraphicsItemChange>(change), *static_cast<QVariant*>(value)));
	} else {
		return new QVariant(static_cast<QGraphicsItem*>(ptr)->itemChange(static_cast<QGraphicsItem::GraphicsItemChange>(change), *static_cast<QVariant*>(value)));
	}
}

void* QGraphicsItem_ItemChangeDefault(void* ptr, long long change, void* value)
{
	if (dynamic_cast<QGraphicsPixmapItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return new QVariant(static_cast<QGraphicsPixmapItem*>(ptr)->QGraphicsPixmapItem::itemChange(static_cast<QGraphicsItem::GraphicsItemChange>(change), *static_cast<QVariant*>(value)));
	} else if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		return new QVariant(static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::itemChange(static_cast<QGraphicsItem::GraphicsItemChange>(change), *static_cast<QVariant*>(value)));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return new QVariant(static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::itemChange(static_cast<QGraphicsItem::GraphicsItemChange>(change), *static_cast<QVariant*>(value)));
	} else if (dynamic_cast<QGraphicsTextItem*>(static_cast<QObject*>(ptr))) {
		return new QVariant(static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::itemChange(static_cast<QGraphicsItem::GraphicsItemChange>(change), *static_cast<QVariant*>(value)));
	} else if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return new QVariant(static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::itemChange(static_cast<QGraphicsItem::GraphicsItemChange>(change), *static_cast<QVariant*>(value)));
	} else if (dynamic_cast<QGraphicsLineItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return new QVariant(static_cast<QGraphicsLineItem*>(ptr)->QGraphicsLineItem::itemChange(static_cast<QGraphicsItem::GraphicsItemChange>(change), *static_cast<QVariant*>(value)));
	} else if (dynamic_cast<QGraphicsItemGroup*>(static_cast<QGraphicsItem*>(ptr))) {
		return new QVariant(static_cast<QGraphicsItemGroup*>(ptr)->QGraphicsItemGroup::itemChange(static_cast<QGraphicsItem::GraphicsItemChange>(change), *static_cast<QVariant*>(value)));
	} else if (dynamic_cast<QGraphicsSimpleTextItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return new QVariant(static_cast<QGraphicsSimpleTextItem*>(ptr)->QGraphicsSimpleTextItem::itemChange(static_cast<QGraphicsItem::GraphicsItemChange>(change), *static_cast<QVariant*>(value)));
	} else if (dynamic_cast<QGraphicsRectItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return new QVariant(static_cast<QGraphicsRectItem*>(ptr)->QGraphicsRectItem::itemChange(static_cast<QGraphicsItem::GraphicsItemChange>(change), *static_cast<QVariant*>(value)));
	} else if (dynamic_cast<QGraphicsPolygonItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return new QVariant(static_cast<QGraphicsPolygonItem*>(ptr)->QGraphicsPolygonItem::itemChange(static_cast<QGraphicsItem::GraphicsItemChange>(change), *static_cast<QVariant*>(value)));
	} else if (dynamic_cast<QGraphicsPathItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return new QVariant(static_cast<QGraphicsPathItem*>(ptr)->QGraphicsPathItem::itemChange(static_cast<QGraphicsItem::GraphicsItemChange>(change), *static_cast<QVariant*>(value)));
	} else if (dynamic_cast<QGraphicsEllipseItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return new QVariant(static_cast<QGraphicsEllipseItem*>(ptr)->QGraphicsEllipseItem::itemChange(static_cast<QGraphicsItem::GraphicsItemChange>(change), *static_cast<QVariant*>(value)));
	} else if (dynamic_cast<QAbstractGraphicsShapeItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return new QVariant(static_cast<QAbstractGraphicsShapeItem*>(ptr)->QAbstractGraphicsShapeItem::itemChange(static_cast<QGraphicsItem::GraphicsItemChange>(change), *static_cast<QVariant*>(value)));
	} else {
		return new QVariant(static_cast<QGraphicsItem*>(ptr)->QGraphicsItem::itemChange(static_cast<QGraphicsItem::GraphicsItemChange>(change), *static_cast<QVariant*>(value)));
	}
}

char QGraphicsItem_SceneEvent(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->sceneEvent(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->sceneEvent(static_cast<QEvent*>(event));
	} else {
		return static_cast<QGraphicsItem*>(ptr)->sceneEvent(static_cast<QEvent*>(event));
	}
}

char QGraphicsItem_SceneEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsPixmapItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return static_cast<QGraphicsPixmapItem*>(ptr)->QGraphicsPixmapItem::sceneEvent(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::sceneEvent(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::sceneEvent(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QGraphicsTextItem*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::sceneEvent(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::sceneEvent(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QGraphicsLineItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return static_cast<QGraphicsLineItem*>(ptr)->QGraphicsLineItem::sceneEvent(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QGraphicsItemGroup*>(static_cast<QGraphicsItem*>(ptr))) {
		return static_cast<QGraphicsItemGroup*>(ptr)->QGraphicsItemGroup::sceneEvent(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QGraphicsSimpleTextItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return static_cast<QGraphicsSimpleTextItem*>(ptr)->QGraphicsSimpleTextItem::sceneEvent(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QGraphicsRectItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return static_cast<QGraphicsRectItem*>(ptr)->QGraphicsRectItem::sceneEvent(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QGraphicsPolygonItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return static_cast<QGraphicsPolygonItem*>(ptr)->QGraphicsPolygonItem::sceneEvent(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QGraphicsPathItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return static_cast<QGraphicsPathItem*>(ptr)->QGraphicsPathItem::sceneEvent(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QGraphicsEllipseItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return static_cast<QGraphicsEllipseItem*>(ptr)->QGraphicsEllipseItem::sceneEvent(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QAbstractGraphicsShapeItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return static_cast<QAbstractGraphicsShapeItem*>(ptr)->QAbstractGraphicsShapeItem::sceneEvent(static_cast<QEvent*>(event));
	} else {
		return static_cast<QGraphicsItem*>(ptr)->QGraphicsItem::sceneEvent(static_cast<QEvent*>(event));
	}
}

char QGraphicsItem_SceneEventFilter(void* ptr, void* watched, void* event)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsObject*>(ptr)->sceneEventFilter(static_cast<QGraphicsObject*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsObject*>(ptr)->sceneEventFilter(static_cast<QGraphicsWidget*>(watched), static_cast<QEvent*>(event));
		} else {
			return static_cast<QGraphicsObject*>(ptr)->sceneEventFilter(static_cast<QGraphicsItem*>(watched), static_cast<QEvent*>(event));
		}
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsWidget*>(ptr)->sceneEventFilter(static_cast<QGraphicsObject*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsWidget*>(ptr)->sceneEventFilter(static_cast<QGraphicsWidget*>(watched), static_cast<QEvent*>(event));
		} else {
			return static_cast<QGraphicsWidget*>(ptr)->sceneEventFilter(static_cast<QGraphicsItem*>(watched), static_cast<QEvent*>(event));
		}
	} else {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsItem*>(ptr)->sceneEventFilter(static_cast<QGraphicsObject*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsItem*>(ptr)->sceneEventFilter(static_cast<QGraphicsWidget*>(watched), static_cast<QEvent*>(event));
		} else {
			return static_cast<QGraphicsItem*>(ptr)->sceneEventFilter(static_cast<QGraphicsItem*>(watched), static_cast<QEvent*>(event));
		}
	}
}

char QGraphicsItem_SceneEventFilterDefault(void* ptr, void* watched, void* event)
{
	if (dynamic_cast<QGraphicsPixmapItem*>(static_cast<QGraphicsItem*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsPixmapItem*>(ptr)->QGraphicsPixmapItem::sceneEventFilter(static_cast<QGraphicsObject*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsPixmapItem*>(ptr)->QGraphicsPixmapItem::sceneEventFilter(static_cast<QGraphicsWidget*>(watched), static_cast<QEvent*>(event));
		} else {
			return static_cast<QGraphicsPixmapItem*>(ptr)->QGraphicsPixmapItem::sceneEventFilter(static_cast<QGraphicsItem*>(watched), static_cast<QEvent*>(event));
		}
	} else if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::sceneEventFilter(static_cast<QGraphicsObject*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::sceneEventFilter(static_cast<QGraphicsWidget*>(watched), static_cast<QEvent*>(event));
		} else {
			return static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::sceneEventFilter(static_cast<QGraphicsItem*>(watched), static_cast<QEvent*>(event));
		}
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::sceneEventFilter(static_cast<QGraphicsObject*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::sceneEventFilter(static_cast<QGraphicsWidget*>(watched), static_cast<QEvent*>(event));
		} else {
			return static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::sceneEventFilter(static_cast<QGraphicsItem*>(watched), static_cast<QEvent*>(event));
		}
	} else if (dynamic_cast<QGraphicsTextItem*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::sceneEventFilter(static_cast<QGraphicsObject*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::sceneEventFilter(static_cast<QGraphicsWidget*>(watched), static_cast<QEvent*>(event));
		} else {
			return static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::sceneEventFilter(static_cast<QGraphicsItem*>(watched), static_cast<QEvent*>(event));
		}
	} else if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::sceneEventFilter(static_cast<QGraphicsObject*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::sceneEventFilter(static_cast<QGraphicsWidget*>(watched), static_cast<QEvent*>(event));
		} else {
			return static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::sceneEventFilter(static_cast<QGraphicsItem*>(watched), static_cast<QEvent*>(event));
		}
	} else if (dynamic_cast<QGraphicsLineItem*>(static_cast<QGraphicsItem*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsLineItem*>(ptr)->QGraphicsLineItem::sceneEventFilter(static_cast<QGraphicsObject*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsLineItem*>(ptr)->QGraphicsLineItem::sceneEventFilter(static_cast<QGraphicsWidget*>(watched), static_cast<QEvent*>(event));
		} else {
			return static_cast<QGraphicsLineItem*>(ptr)->QGraphicsLineItem::sceneEventFilter(static_cast<QGraphicsItem*>(watched), static_cast<QEvent*>(event));
		}
	} else if (dynamic_cast<QGraphicsItemGroup*>(static_cast<QGraphicsItem*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsItemGroup*>(ptr)->QGraphicsItemGroup::sceneEventFilter(static_cast<QGraphicsObject*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsItemGroup*>(ptr)->QGraphicsItemGroup::sceneEventFilter(static_cast<QGraphicsWidget*>(watched), static_cast<QEvent*>(event));
		} else {
			return static_cast<QGraphicsItemGroup*>(ptr)->QGraphicsItemGroup::sceneEventFilter(static_cast<QGraphicsItem*>(watched), static_cast<QEvent*>(event));
		}
	} else if (dynamic_cast<QGraphicsSimpleTextItem*>(static_cast<QGraphicsItem*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsSimpleTextItem*>(ptr)->QGraphicsSimpleTextItem::sceneEventFilter(static_cast<QGraphicsObject*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsSimpleTextItem*>(ptr)->QGraphicsSimpleTextItem::sceneEventFilter(static_cast<QGraphicsWidget*>(watched), static_cast<QEvent*>(event));
		} else {
			return static_cast<QGraphicsSimpleTextItem*>(ptr)->QGraphicsSimpleTextItem::sceneEventFilter(static_cast<QGraphicsItem*>(watched), static_cast<QEvent*>(event));
		}
	} else if (dynamic_cast<QGraphicsRectItem*>(static_cast<QGraphicsItem*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsRectItem*>(ptr)->QGraphicsRectItem::sceneEventFilter(static_cast<QGraphicsObject*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsRectItem*>(ptr)->QGraphicsRectItem::sceneEventFilter(static_cast<QGraphicsWidget*>(watched), static_cast<QEvent*>(event));
		} else {
			return static_cast<QGraphicsRectItem*>(ptr)->QGraphicsRectItem::sceneEventFilter(static_cast<QGraphicsItem*>(watched), static_cast<QEvent*>(event));
		}
	} else if (dynamic_cast<QGraphicsPolygonItem*>(static_cast<QGraphicsItem*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsPolygonItem*>(ptr)->QGraphicsPolygonItem::sceneEventFilter(static_cast<QGraphicsObject*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsPolygonItem*>(ptr)->QGraphicsPolygonItem::sceneEventFilter(static_cast<QGraphicsWidget*>(watched), static_cast<QEvent*>(event));
		} else {
			return static_cast<QGraphicsPolygonItem*>(ptr)->QGraphicsPolygonItem::sceneEventFilter(static_cast<QGraphicsItem*>(watched), static_cast<QEvent*>(event));
		}
	} else if (dynamic_cast<QGraphicsPathItem*>(static_cast<QGraphicsItem*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsPathItem*>(ptr)->QGraphicsPathItem::sceneEventFilter(static_cast<QGraphicsObject*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsPathItem*>(ptr)->QGraphicsPathItem::sceneEventFilter(static_cast<QGraphicsWidget*>(watched), static_cast<QEvent*>(event));
		} else {
			return static_cast<QGraphicsPathItem*>(ptr)->QGraphicsPathItem::sceneEventFilter(static_cast<QGraphicsItem*>(watched), static_cast<QEvent*>(event));
		}
	} else if (dynamic_cast<QGraphicsEllipseItem*>(static_cast<QGraphicsItem*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsEllipseItem*>(ptr)->QGraphicsEllipseItem::sceneEventFilter(static_cast<QGraphicsObject*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsEllipseItem*>(ptr)->QGraphicsEllipseItem::sceneEventFilter(static_cast<QGraphicsWidget*>(watched), static_cast<QEvent*>(event));
		} else {
			return static_cast<QGraphicsEllipseItem*>(ptr)->QGraphicsEllipseItem::sceneEventFilter(static_cast<QGraphicsItem*>(watched), static_cast<QEvent*>(event));
		}
	} else if (dynamic_cast<QAbstractGraphicsShapeItem*>(static_cast<QGraphicsItem*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(watched))) {
			return static_cast<QAbstractGraphicsShapeItem*>(ptr)->QAbstractGraphicsShapeItem::sceneEventFilter(static_cast<QGraphicsObject*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QAbstractGraphicsShapeItem*>(ptr)->QAbstractGraphicsShapeItem::sceneEventFilter(static_cast<QGraphicsWidget*>(watched), static_cast<QEvent*>(event));
		} else {
			return static_cast<QAbstractGraphicsShapeItem*>(ptr)->QAbstractGraphicsShapeItem::sceneEventFilter(static_cast<QGraphicsItem*>(watched), static_cast<QEvent*>(event));
		}
	} else {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsItem*>(ptr)->QGraphicsItem::sceneEventFilter(static_cast<QGraphicsObject*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsItem*>(ptr)->QGraphicsItem::sceneEventFilter(static_cast<QGraphicsWidget*>(watched), static_cast<QEvent*>(event));
		} else {
			return static_cast<QGraphicsItem*>(ptr)->QGraphicsItem::sceneEventFilter(static_cast<QGraphicsItem*>(watched), static_cast<QEvent*>(event));
		}
	}
}

void QGraphicsItem_Advance(void* ptr, int phase)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->advance(phase);
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->advance(phase);
	} else {
		static_cast<QGraphicsItem*>(ptr)->advance(phase);
	}
}

void QGraphicsItem_AdvanceDefault(void* ptr, int phase)
{
	if (dynamic_cast<QGraphicsPixmapItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPixmapItem*>(ptr)->QGraphicsPixmapItem::advance(phase);
	} else if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::advance(phase);
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::advance(phase);
	} else if (dynamic_cast<QGraphicsTextItem*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::advance(phase);
	} else if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::advance(phase);
	} else if (dynamic_cast<QGraphicsLineItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsLineItem*>(ptr)->QGraphicsLineItem::advance(phase);
	} else if (dynamic_cast<QGraphicsItemGroup*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsItemGroup*>(ptr)->QGraphicsItemGroup::advance(phase);
	} else if (dynamic_cast<QGraphicsSimpleTextItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsSimpleTextItem*>(ptr)->QGraphicsSimpleTextItem::advance(phase);
	} else if (dynamic_cast<QGraphicsRectItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsRectItem*>(ptr)->QGraphicsRectItem::advance(phase);
	} else if (dynamic_cast<QGraphicsPolygonItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPolygonItem*>(ptr)->QGraphicsPolygonItem::advance(phase);
	} else if (dynamic_cast<QGraphicsPathItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPathItem*>(ptr)->QGraphicsPathItem::advance(phase);
	} else if (dynamic_cast<QGraphicsEllipseItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsEllipseItem*>(ptr)->QGraphicsEllipseItem::advance(phase);
	} else if (dynamic_cast<QAbstractGraphicsShapeItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QAbstractGraphicsShapeItem*>(ptr)->QAbstractGraphicsShapeItem::advance(phase);
	} else {
		static_cast<QGraphicsItem*>(ptr)->QGraphicsItem::advance(phase);
	}
}

void QGraphicsItem_ClearFocus(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->clearFocus();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->clearFocus();
	} else {
		static_cast<QGraphicsItem*>(ptr)->clearFocus();
	}
}

void QGraphicsItem_ContextMenuEvent(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->contextMenuEvent(static_cast<QGraphicsSceneContextMenuEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->contextMenuEvent(static_cast<QGraphicsSceneContextMenuEvent*>(event));
	} else {
		static_cast<QGraphicsItem*>(ptr)->contextMenuEvent(static_cast<QGraphicsSceneContextMenuEvent*>(event));
	}
}

void QGraphicsItem_ContextMenuEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsPixmapItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPixmapItem*>(ptr)->QGraphicsPixmapItem::contextMenuEvent(static_cast<QGraphicsSceneContextMenuEvent*>(event));
	} else if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::contextMenuEvent(static_cast<QGraphicsSceneContextMenuEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::contextMenuEvent(static_cast<QGraphicsSceneContextMenuEvent*>(event));
	} else if (dynamic_cast<QGraphicsTextItem*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::contextMenuEvent(static_cast<QGraphicsSceneContextMenuEvent*>(event));
	} else if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::contextMenuEvent(static_cast<QGraphicsSceneContextMenuEvent*>(event));
	} else if (dynamic_cast<QGraphicsLineItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsLineItem*>(ptr)->QGraphicsLineItem::contextMenuEvent(static_cast<QGraphicsSceneContextMenuEvent*>(event));
	} else if (dynamic_cast<QGraphicsItemGroup*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsItemGroup*>(ptr)->QGraphicsItemGroup::contextMenuEvent(static_cast<QGraphicsSceneContextMenuEvent*>(event));
	} else if (dynamic_cast<QGraphicsSimpleTextItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsSimpleTextItem*>(ptr)->QGraphicsSimpleTextItem::contextMenuEvent(static_cast<QGraphicsSceneContextMenuEvent*>(event));
	} else if (dynamic_cast<QGraphicsRectItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsRectItem*>(ptr)->QGraphicsRectItem::contextMenuEvent(static_cast<QGraphicsSceneContextMenuEvent*>(event));
	} else if (dynamic_cast<QGraphicsPolygonItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPolygonItem*>(ptr)->QGraphicsPolygonItem::contextMenuEvent(static_cast<QGraphicsSceneContextMenuEvent*>(event));
	} else if (dynamic_cast<QGraphicsPathItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPathItem*>(ptr)->QGraphicsPathItem::contextMenuEvent(static_cast<QGraphicsSceneContextMenuEvent*>(event));
	} else if (dynamic_cast<QGraphicsEllipseItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsEllipseItem*>(ptr)->QGraphicsEllipseItem::contextMenuEvent(static_cast<QGraphicsSceneContextMenuEvent*>(event));
	} else if (dynamic_cast<QAbstractGraphicsShapeItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QAbstractGraphicsShapeItem*>(ptr)->QAbstractGraphicsShapeItem::contextMenuEvent(static_cast<QGraphicsSceneContextMenuEvent*>(event));
	} else {
		static_cast<QGraphicsItem*>(ptr)->QGraphicsItem::contextMenuEvent(static_cast<QGraphicsSceneContextMenuEvent*>(event));
	}
}

void QGraphicsItem_DragEnterEvent(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->dragEnterEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->dragEnterEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else {
		static_cast<QGraphicsItem*>(ptr)->dragEnterEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	}
}

void QGraphicsItem_DragEnterEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsPixmapItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPixmapItem*>(ptr)->QGraphicsPixmapItem::dragEnterEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::dragEnterEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::dragEnterEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsTextItem*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::dragEnterEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::dragEnterEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsLineItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsLineItem*>(ptr)->QGraphicsLineItem::dragEnterEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsItemGroup*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsItemGroup*>(ptr)->QGraphicsItemGroup::dragEnterEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsSimpleTextItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsSimpleTextItem*>(ptr)->QGraphicsSimpleTextItem::dragEnterEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsRectItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsRectItem*>(ptr)->QGraphicsRectItem::dragEnterEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsPolygonItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPolygonItem*>(ptr)->QGraphicsPolygonItem::dragEnterEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsPathItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPathItem*>(ptr)->QGraphicsPathItem::dragEnterEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsEllipseItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsEllipseItem*>(ptr)->QGraphicsEllipseItem::dragEnterEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QAbstractGraphicsShapeItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QAbstractGraphicsShapeItem*>(ptr)->QAbstractGraphicsShapeItem::dragEnterEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else {
		static_cast<QGraphicsItem*>(ptr)->QGraphicsItem::dragEnterEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	}
}

void QGraphicsItem_DragLeaveEvent(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->dragLeaveEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->dragLeaveEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else {
		static_cast<QGraphicsItem*>(ptr)->dragLeaveEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	}
}

void QGraphicsItem_DragLeaveEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsPixmapItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPixmapItem*>(ptr)->QGraphicsPixmapItem::dragLeaveEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::dragLeaveEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::dragLeaveEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsTextItem*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::dragLeaveEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::dragLeaveEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsLineItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsLineItem*>(ptr)->QGraphicsLineItem::dragLeaveEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsItemGroup*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsItemGroup*>(ptr)->QGraphicsItemGroup::dragLeaveEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsSimpleTextItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsSimpleTextItem*>(ptr)->QGraphicsSimpleTextItem::dragLeaveEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsRectItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsRectItem*>(ptr)->QGraphicsRectItem::dragLeaveEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsPolygonItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPolygonItem*>(ptr)->QGraphicsPolygonItem::dragLeaveEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsPathItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPathItem*>(ptr)->QGraphicsPathItem::dragLeaveEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsEllipseItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsEllipseItem*>(ptr)->QGraphicsEllipseItem::dragLeaveEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QAbstractGraphicsShapeItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QAbstractGraphicsShapeItem*>(ptr)->QAbstractGraphicsShapeItem::dragLeaveEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else {
		static_cast<QGraphicsItem*>(ptr)->QGraphicsItem::dragLeaveEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	}
}

void QGraphicsItem_DragMoveEvent(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->dragMoveEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->dragMoveEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else {
		static_cast<QGraphicsItem*>(ptr)->dragMoveEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	}
}

void QGraphicsItem_DragMoveEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsPixmapItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPixmapItem*>(ptr)->QGraphicsPixmapItem::dragMoveEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::dragMoveEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::dragMoveEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsTextItem*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::dragMoveEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::dragMoveEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsLineItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsLineItem*>(ptr)->QGraphicsLineItem::dragMoveEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsItemGroup*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsItemGroup*>(ptr)->QGraphicsItemGroup::dragMoveEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsSimpleTextItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsSimpleTextItem*>(ptr)->QGraphicsSimpleTextItem::dragMoveEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsRectItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsRectItem*>(ptr)->QGraphicsRectItem::dragMoveEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsPolygonItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPolygonItem*>(ptr)->QGraphicsPolygonItem::dragMoveEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsPathItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPathItem*>(ptr)->QGraphicsPathItem::dragMoveEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsEllipseItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsEllipseItem*>(ptr)->QGraphicsEllipseItem::dragMoveEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QAbstractGraphicsShapeItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QAbstractGraphicsShapeItem*>(ptr)->QAbstractGraphicsShapeItem::dragMoveEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else {
		static_cast<QGraphicsItem*>(ptr)->QGraphicsItem::dragMoveEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	}
}

void QGraphicsItem_DropEvent(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->dropEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->dropEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else {
		static_cast<QGraphicsItem*>(ptr)->dropEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	}
}

void QGraphicsItem_DropEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsPixmapItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPixmapItem*>(ptr)->QGraphicsPixmapItem::dropEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::dropEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::dropEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsTextItem*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::dropEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::dropEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsLineItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsLineItem*>(ptr)->QGraphicsLineItem::dropEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsItemGroup*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsItemGroup*>(ptr)->QGraphicsItemGroup::dropEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsSimpleTextItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsSimpleTextItem*>(ptr)->QGraphicsSimpleTextItem::dropEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsRectItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsRectItem*>(ptr)->QGraphicsRectItem::dropEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsPolygonItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPolygonItem*>(ptr)->QGraphicsPolygonItem::dropEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsPathItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPathItem*>(ptr)->QGraphicsPathItem::dropEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsEllipseItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsEllipseItem*>(ptr)->QGraphicsEllipseItem::dropEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else if (dynamic_cast<QAbstractGraphicsShapeItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QAbstractGraphicsShapeItem*>(ptr)->QAbstractGraphicsShapeItem::dropEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	} else {
		static_cast<QGraphicsItem*>(ptr)->QGraphicsItem::dropEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
	}
}

void QGraphicsItem_EnsureVisible(void* ptr, void* rect, int xmargin, int ymargin)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->ensureVisible(*static_cast<QRectF*>(rect), xmargin, ymargin);
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->ensureVisible(*static_cast<QRectF*>(rect), xmargin, ymargin);
	} else {
		static_cast<QGraphicsItem*>(ptr)->ensureVisible(*static_cast<QRectF*>(rect), xmargin, ymargin);
	}
}

void QGraphicsItem_EnsureVisible2(void* ptr, double x, double y, double w, double h, int xmargin, int ymargin)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->ensureVisible(x, y, w, h, xmargin, ymargin);
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->ensureVisible(x, y, w, h, xmargin, ymargin);
	} else {
		static_cast<QGraphicsItem*>(ptr)->ensureVisible(x, y, w, h, xmargin, ymargin);
	}
}

void QGraphicsItem_FocusInEvent(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->focusInEvent(static_cast<QFocusEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->focusInEvent(static_cast<QFocusEvent*>(event));
	} else {
		static_cast<QGraphicsItem*>(ptr)->focusInEvent(static_cast<QFocusEvent*>(event));
	}
}

void QGraphicsItem_FocusInEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsPixmapItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPixmapItem*>(ptr)->QGraphicsPixmapItem::focusInEvent(static_cast<QFocusEvent*>(event));
	} else if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::focusInEvent(static_cast<QFocusEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::focusInEvent(static_cast<QFocusEvent*>(event));
	} else if (dynamic_cast<QGraphicsTextItem*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::focusInEvent(static_cast<QFocusEvent*>(event));
	} else if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::focusInEvent(static_cast<QFocusEvent*>(event));
	} else if (dynamic_cast<QGraphicsLineItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsLineItem*>(ptr)->QGraphicsLineItem::focusInEvent(static_cast<QFocusEvent*>(event));
	} else if (dynamic_cast<QGraphicsItemGroup*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsItemGroup*>(ptr)->QGraphicsItemGroup::focusInEvent(static_cast<QFocusEvent*>(event));
	} else if (dynamic_cast<QGraphicsSimpleTextItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsSimpleTextItem*>(ptr)->QGraphicsSimpleTextItem::focusInEvent(static_cast<QFocusEvent*>(event));
	} else if (dynamic_cast<QGraphicsRectItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsRectItem*>(ptr)->QGraphicsRectItem::focusInEvent(static_cast<QFocusEvent*>(event));
	} else if (dynamic_cast<QGraphicsPolygonItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPolygonItem*>(ptr)->QGraphicsPolygonItem::focusInEvent(static_cast<QFocusEvent*>(event));
	} else if (dynamic_cast<QGraphicsPathItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPathItem*>(ptr)->QGraphicsPathItem::focusInEvent(static_cast<QFocusEvent*>(event));
	} else if (dynamic_cast<QGraphicsEllipseItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsEllipseItem*>(ptr)->QGraphicsEllipseItem::focusInEvent(static_cast<QFocusEvent*>(event));
	} else if (dynamic_cast<QAbstractGraphicsShapeItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QAbstractGraphicsShapeItem*>(ptr)->QAbstractGraphicsShapeItem::focusInEvent(static_cast<QFocusEvent*>(event));
	} else {
		static_cast<QGraphicsItem*>(ptr)->QGraphicsItem::focusInEvent(static_cast<QFocusEvent*>(event));
	}
}

void QGraphicsItem_FocusOutEvent(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->focusOutEvent(static_cast<QFocusEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->focusOutEvent(static_cast<QFocusEvent*>(event));
	} else {
		static_cast<QGraphicsItem*>(ptr)->focusOutEvent(static_cast<QFocusEvent*>(event));
	}
}

void QGraphicsItem_FocusOutEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsPixmapItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPixmapItem*>(ptr)->QGraphicsPixmapItem::focusOutEvent(static_cast<QFocusEvent*>(event));
	} else if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::focusOutEvent(static_cast<QFocusEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::focusOutEvent(static_cast<QFocusEvent*>(event));
	} else if (dynamic_cast<QGraphicsTextItem*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::focusOutEvent(static_cast<QFocusEvent*>(event));
	} else if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::focusOutEvent(static_cast<QFocusEvent*>(event));
	} else if (dynamic_cast<QGraphicsLineItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsLineItem*>(ptr)->QGraphicsLineItem::focusOutEvent(static_cast<QFocusEvent*>(event));
	} else if (dynamic_cast<QGraphicsItemGroup*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsItemGroup*>(ptr)->QGraphicsItemGroup::focusOutEvent(static_cast<QFocusEvent*>(event));
	} else if (dynamic_cast<QGraphicsSimpleTextItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsSimpleTextItem*>(ptr)->QGraphicsSimpleTextItem::focusOutEvent(static_cast<QFocusEvent*>(event));
	} else if (dynamic_cast<QGraphicsRectItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsRectItem*>(ptr)->QGraphicsRectItem::focusOutEvent(static_cast<QFocusEvent*>(event));
	} else if (dynamic_cast<QGraphicsPolygonItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPolygonItem*>(ptr)->QGraphicsPolygonItem::focusOutEvent(static_cast<QFocusEvent*>(event));
	} else if (dynamic_cast<QGraphicsPathItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPathItem*>(ptr)->QGraphicsPathItem::focusOutEvent(static_cast<QFocusEvent*>(event));
	} else if (dynamic_cast<QGraphicsEllipseItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsEllipseItem*>(ptr)->QGraphicsEllipseItem::focusOutEvent(static_cast<QFocusEvent*>(event));
	} else if (dynamic_cast<QAbstractGraphicsShapeItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QAbstractGraphicsShapeItem*>(ptr)->QAbstractGraphicsShapeItem::focusOutEvent(static_cast<QFocusEvent*>(event));
	} else {
		static_cast<QGraphicsItem*>(ptr)->QGraphicsItem::focusOutEvent(static_cast<QFocusEvent*>(event));
	}
}

void QGraphicsItem_GrabKeyboard(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->grabKeyboard();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->grabKeyboard();
	} else {
		static_cast<QGraphicsItem*>(ptr)->grabKeyboard();
	}
}

void QGraphicsItem_GrabMouse(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->grabMouse();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->grabMouse();
	} else {
		static_cast<QGraphicsItem*>(ptr)->grabMouse();
	}
}

void QGraphicsItem_Hide(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->hide();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->hide();
	} else {
		static_cast<QGraphicsItem*>(ptr)->hide();
	}
}

void QGraphicsItem_HoverEnterEvent(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->hoverEnterEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->hoverEnterEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	} else {
		static_cast<QGraphicsItem*>(ptr)->hoverEnterEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	}
}

void QGraphicsItem_HoverEnterEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsPixmapItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPixmapItem*>(ptr)->QGraphicsPixmapItem::hoverEnterEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	} else if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::hoverEnterEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::hoverEnterEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	} else if (dynamic_cast<QGraphicsTextItem*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::hoverEnterEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	} else if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::hoverEnterEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	} else if (dynamic_cast<QGraphicsLineItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsLineItem*>(ptr)->QGraphicsLineItem::hoverEnterEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	} else if (dynamic_cast<QGraphicsItemGroup*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsItemGroup*>(ptr)->QGraphicsItemGroup::hoverEnterEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	} else if (dynamic_cast<QGraphicsSimpleTextItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsSimpleTextItem*>(ptr)->QGraphicsSimpleTextItem::hoverEnterEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	} else if (dynamic_cast<QGraphicsRectItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsRectItem*>(ptr)->QGraphicsRectItem::hoverEnterEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	} else if (dynamic_cast<QGraphicsPolygonItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPolygonItem*>(ptr)->QGraphicsPolygonItem::hoverEnterEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	} else if (dynamic_cast<QGraphicsPathItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPathItem*>(ptr)->QGraphicsPathItem::hoverEnterEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	} else if (dynamic_cast<QGraphicsEllipseItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsEllipseItem*>(ptr)->QGraphicsEllipseItem::hoverEnterEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	} else if (dynamic_cast<QAbstractGraphicsShapeItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QAbstractGraphicsShapeItem*>(ptr)->QAbstractGraphicsShapeItem::hoverEnterEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	} else {
		static_cast<QGraphicsItem*>(ptr)->QGraphicsItem::hoverEnterEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	}
}

void QGraphicsItem_HoverLeaveEvent(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->hoverLeaveEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->hoverLeaveEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	} else {
		static_cast<QGraphicsItem*>(ptr)->hoverLeaveEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	}
}

void QGraphicsItem_HoverLeaveEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsPixmapItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPixmapItem*>(ptr)->QGraphicsPixmapItem::hoverLeaveEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	} else if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::hoverLeaveEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::hoverLeaveEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	} else if (dynamic_cast<QGraphicsTextItem*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::hoverLeaveEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	} else if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::hoverLeaveEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	} else if (dynamic_cast<QGraphicsLineItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsLineItem*>(ptr)->QGraphicsLineItem::hoverLeaveEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	} else if (dynamic_cast<QGraphicsItemGroup*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsItemGroup*>(ptr)->QGraphicsItemGroup::hoverLeaveEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	} else if (dynamic_cast<QGraphicsSimpleTextItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsSimpleTextItem*>(ptr)->QGraphicsSimpleTextItem::hoverLeaveEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	} else if (dynamic_cast<QGraphicsRectItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsRectItem*>(ptr)->QGraphicsRectItem::hoverLeaveEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	} else if (dynamic_cast<QGraphicsPolygonItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPolygonItem*>(ptr)->QGraphicsPolygonItem::hoverLeaveEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	} else if (dynamic_cast<QGraphicsPathItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPathItem*>(ptr)->QGraphicsPathItem::hoverLeaveEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	} else if (dynamic_cast<QGraphicsEllipseItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsEllipseItem*>(ptr)->QGraphicsEllipseItem::hoverLeaveEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	} else if (dynamic_cast<QAbstractGraphicsShapeItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QAbstractGraphicsShapeItem*>(ptr)->QAbstractGraphicsShapeItem::hoverLeaveEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	} else {
		static_cast<QGraphicsItem*>(ptr)->QGraphicsItem::hoverLeaveEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	}
}

void QGraphicsItem_HoverMoveEvent(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->hoverMoveEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->hoverMoveEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	} else {
		static_cast<QGraphicsItem*>(ptr)->hoverMoveEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	}
}

void QGraphicsItem_HoverMoveEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsPixmapItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPixmapItem*>(ptr)->QGraphicsPixmapItem::hoverMoveEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	} else if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::hoverMoveEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::hoverMoveEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	} else if (dynamic_cast<QGraphicsTextItem*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::hoverMoveEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	} else if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::hoverMoveEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	} else if (dynamic_cast<QGraphicsLineItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsLineItem*>(ptr)->QGraphicsLineItem::hoverMoveEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	} else if (dynamic_cast<QGraphicsItemGroup*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsItemGroup*>(ptr)->QGraphicsItemGroup::hoverMoveEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	} else if (dynamic_cast<QGraphicsSimpleTextItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsSimpleTextItem*>(ptr)->QGraphicsSimpleTextItem::hoverMoveEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	} else if (dynamic_cast<QGraphicsRectItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsRectItem*>(ptr)->QGraphicsRectItem::hoverMoveEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	} else if (dynamic_cast<QGraphicsPolygonItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPolygonItem*>(ptr)->QGraphicsPolygonItem::hoverMoveEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	} else if (dynamic_cast<QGraphicsPathItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPathItem*>(ptr)->QGraphicsPathItem::hoverMoveEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	} else if (dynamic_cast<QGraphicsEllipseItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsEllipseItem*>(ptr)->QGraphicsEllipseItem::hoverMoveEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	} else if (dynamic_cast<QAbstractGraphicsShapeItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QAbstractGraphicsShapeItem*>(ptr)->QAbstractGraphicsShapeItem::hoverMoveEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	} else {
		static_cast<QGraphicsItem*>(ptr)->QGraphicsItem::hoverMoveEvent(static_cast<QGraphicsSceneHoverEvent*>(event));
	}
}

void QGraphicsItem_InputMethodEvent(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->inputMethodEvent(static_cast<QInputMethodEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->inputMethodEvent(static_cast<QInputMethodEvent*>(event));
	} else {
		static_cast<QGraphicsItem*>(ptr)->inputMethodEvent(static_cast<QInputMethodEvent*>(event));
	}
}

void QGraphicsItem_InputMethodEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsPixmapItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPixmapItem*>(ptr)->QGraphicsPixmapItem::inputMethodEvent(static_cast<QInputMethodEvent*>(event));
	} else if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::inputMethodEvent(static_cast<QInputMethodEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::inputMethodEvent(static_cast<QInputMethodEvent*>(event));
	} else if (dynamic_cast<QGraphicsTextItem*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::inputMethodEvent(static_cast<QInputMethodEvent*>(event));
	} else if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::inputMethodEvent(static_cast<QInputMethodEvent*>(event));
	} else if (dynamic_cast<QGraphicsLineItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsLineItem*>(ptr)->QGraphicsLineItem::inputMethodEvent(static_cast<QInputMethodEvent*>(event));
	} else if (dynamic_cast<QGraphicsItemGroup*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsItemGroup*>(ptr)->QGraphicsItemGroup::inputMethodEvent(static_cast<QInputMethodEvent*>(event));
	} else if (dynamic_cast<QGraphicsSimpleTextItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsSimpleTextItem*>(ptr)->QGraphicsSimpleTextItem::inputMethodEvent(static_cast<QInputMethodEvent*>(event));
	} else if (dynamic_cast<QGraphicsRectItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsRectItem*>(ptr)->QGraphicsRectItem::inputMethodEvent(static_cast<QInputMethodEvent*>(event));
	} else if (dynamic_cast<QGraphicsPolygonItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPolygonItem*>(ptr)->QGraphicsPolygonItem::inputMethodEvent(static_cast<QInputMethodEvent*>(event));
	} else if (dynamic_cast<QGraphicsPathItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPathItem*>(ptr)->QGraphicsPathItem::inputMethodEvent(static_cast<QInputMethodEvent*>(event));
	} else if (dynamic_cast<QGraphicsEllipseItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsEllipseItem*>(ptr)->QGraphicsEllipseItem::inputMethodEvent(static_cast<QInputMethodEvent*>(event));
	} else if (dynamic_cast<QAbstractGraphicsShapeItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QAbstractGraphicsShapeItem*>(ptr)->QAbstractGraphicsShapeItem::inputMethodEvent(static_cast<QInputMethodEvent*>(event));
	} else {
		static_cast<QGraphicsItem*>(ptr)->QGraphicsItem::inputMethodEvent(static_cast<QInputMethodEvent*>(event));
	}
}

void QGraphicsItem_InstallSceneEventFilter(void* ptr, void* filterItem)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(filterItem))) {
			static_cast<QGraphicsObject*>(ptr)->installSceneEventFilter(static_cast<QGraphicsObject*>(filterItem));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(filterItem))) {
			static_cast<QGraphicsObject*>(ptr)->installSceneEventFilter(static_cast<QGraphicsWidget*>(filterItem));
		} else {
			static_cast<QGraphicsObject*>(ptr)->installSceneEventFilter(static_cast<QGraphicsItem*>(filterItem));
		}
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(filterItem))) {
			static_cast<QGraphicsWidget*>(ptr)->installSceneEventFilter(static_cast<QGraphicsObject*>(filterItem));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(filterItem))) {
			static_cast<QGraphicsWidget*>(ptr)->installSceneEventFilter(static_cast<QGraphicsWidget*>(filterItem));
		} else {
			static_cast<QGraphicsWidget*>(ptr)->installSceneEventFilter(static_cast<QGraphicsItem*>(filterItem));
		}
	} else {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(filterItem))) {
			static_cast<QGraphicsItem*>(ptr)->installSceneEventFilter(static_cast<QGraphicsObject*>(filterItem));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(filterItem))) {
			static_cast<QGraphicsItem*>(ptr)->installSceneEventFilter(static_cast<QGraphicsWidget*>(filterItem));
		} else {
			static_cast<QGraphicsItem*>(ptr)->installSceneEventFilter(static_cast<QGraphicsItem*>(filterItem));
		}
	}
}

void QGraphicsItem_KeyPressEvent(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->keyPressEvent(static_cast<QKeyEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->keyPressEvent(static_cast<QKeyEvent*>(event));
	} else {
		static_cast<QGraphicsItem*>(ptr)->keyPressEvent(static_cast<QKeyEvent*>(event));
	}
}

void QGraphicsItem_KeyPressEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsPixmapItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPixmapItem*>(ptr)->QGraphicsPixmapItem::keyPressEvent(static_cast<QKeyEvent*>(event));
	} else if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::keyPressEvent(static_cast<QKeyEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::keyPressEvent(static_cast<QKeyEvent*>(event));
	} else if (dynamic_cast<QGraphicsTextItem*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::keyPressEvent(static_cast<QKeyEvent*>(event));
	} else if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::keyPressEvent(static_cast<QKeyEvent*>(event));
	} else if (dynamic_cast<QGraphicsLineItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsLineItem*>(ptr)->QGraphicsLineItem::keyPressEvent(static_cast<QKeyEvent*>(event));
	} else if (dynamic_cast<QGraphicsItemGroup*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsItemGroup*>(ptr)->QGraphicsItemGroup::keyPressEvent(static_cast<QKeyEvent*>(event));
	} else if (dynamic_cast<QGraphicsSimpleTextItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsSimpleTextItem*>(ptr)->QGraphicsSimpleTextItem::keyPressEvent(static_cast<QKeyEvent*>(event));
	} else if (dynamic_cast<QGraphicsRectItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsRectItem*>(ptr)->QGraphicsRectItem::keyPressEvent(static_cast<QKeyEvent*>(event));
	} else if (dynamic_cast<QGraphicsPolygonItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPolygonItem*>(ptr)->QGraphicsPolygonItem::keyPressEvent(static_cast<QKeyEvent*>(event));
	} else if (dynamic_cast<QGraphicsPathItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPathItem*>(ptr)->QGraphicsPathItem::keyPressEvent(static_cast<QKeyEvent*>(event));
	} else if (dynamic_cast<QGraphicsEllipseItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsEllipseItem*>(ptr)->QGraphicsEllipseItem::keyPressEvent(static_cast<QKeyEvent*>(event));
	} else if (dynamic_cast<QAbstractGraphicsShapeItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QAbstractGraphicsShapeItem*>(ptr)->QAbstractGraphicsShapeItem::keyPressEvent(static_cast<QKeyEvent*>(event));
	} else {
		static_cast<QGraphicsItem*>(ptr)->QGraphicsItem::keyPressEvent(static_cast<QKeyEvent*>(event));
	}
}

void QGraphicsItem_KeyReleaseEvent(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->keyReleaseEvent(static_cast<QKeyEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->keyReleaseEvent(static_cast<QKeyEvent*>(event));
	} else {
		static_cast<QGraphicsItem*>(ptr)->keyReleaseEvent(static_cast<QKeyEvent*>(event));
	}
}

void QGraphicsItem_KeyReleaseEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsPixmapItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPixmapItem*>(ptr)->QGraphicsPixmapItem::keyReleaseEvent(static_cast<QKeyEvent*>(event));
	} else if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::keyReleaseEvent(static_cast<QKeyEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::keyReleaseEvent(static_cast<QKeyEvent*>(event));
	} else if (dynamic_cast<QGraphicsTextItem*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::keyReleaseEvent(static_cast<QKeyEvent*>(event));
	} else if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::keyReleaseEvent(static_cast<QKeyEvent*>(event));
	} else if (dynamic_cast<QGraphicsLineItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsLineItem*>(ptr)->QGraphicsLineItem::keyReleaseEvent(static_cast<QKeyEvent*>(event));
	} else if (dynamic_cast<QGraphicsItemGroup*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsItemGroup*>(ptr)->QGraphicsItemGroup::keyReleaseEvent(static_cast<QKeyEvent*>(event));
	} else if (dynamic_cast<QGraphicsSimpleTextItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsSimpleTextItem*>(ptr)->QGraphicsSimpleTextItem::keyReleaseEvent(static_cast<QKeyEvent*>(event));
	} else if (dynamic_cast<QGraphicsRectItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsRectItem*>(ptr)->QGraphicsRectItem::keyReleaseEvent(static_cast<QKeyEvent*>(event));
	} else if (dynamic_cast<QGraphicsPolygonItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPolygonItem*>(ptr)->QGraphicsPolygonItem::keyReleaseEvent(static_cast<QKeyEvent*>(event));
	} else if (dynamic_cast<QGraphicsPathItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPathItem*>(ptr)->QGraphicsPathItem::keyReleaseEvent(static_cast<QKeyEvent*>(event));
	} else if (dynamic_cast<QGraphicsEllipseItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsEllipseItem*>(ptr)->QGraphicsEllipseItem::keyReleaseEvent(static_cast<QKeyEvent*>(event));
	} else if (dynamic_cast<QAbstractGraphicsShapeItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QAbstractGraphicsShapeItem*>(ptr)->QAbstractGraphicsShapeItem::keyReleaseEvent(static_cast<QKeyEvent*>(event));
	} else {
		static_cast<QGraphicsItem*>(ptr)->QGraphicsItem::keyReleaseEvent(static_cast<QKeyEvent*>(event));
	}
}

void QGraphicsItem_MouseDoubleClickEvent(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->mouseDoubleClickEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->mouseDoubleClickEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else {
		static_cast<QGraphicsItem*>(ptr)->mouseDoubleClickEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	}
}

void QGraphicsItem_MouseDoubleClickEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsPixmapItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPixmapItem*>(ptr)->QGraphicsPixmapItem::mouseDoubleClickEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::mouseDoubleClickEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::mouseDoubleClickEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsTextItem*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::mouseDoubleClickEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::mouseDoubleClickEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsLineItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsLineItem*>(ptr)->QGraphicsLineItem::mouseDoubleClickEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsItemGroup*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsItemGroup*>(ptr)->QGraphicsItemGroup::mouseDoubleClickEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsSimpleTextItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsSimpleTextItem*>(ptr)->QGraphicsSimpleTextItem::mouseDoubleClickEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsRectItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsRectItem*>(ptr)->QGraphicsRectItem::mouseDoubleClickEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsPolygonItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPolygonItem*>(ptr)->QGraphicsPolygonItem::mouseDoubleClickEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsPathItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPathItem*>(ptr)->QGraphicsPathItem::mouseDoubleClickEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsEllipseItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsEllipseItem*>(ptr)->QGraphicsEllipseItem::mouseDoubleClickEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QAbstractGraphicsShapeItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QAbstractGraphicsShapeItem*>(ptr)->QAbstractGraphicsShapeItem::mouseDoubleClickEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else {
		static_cast<QGraphicsItem*>(ptr)->QGraphicsItem::mouseDoubleClickEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	}
}

void QGraphicsItem_MouseMoveEvent(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->mouseMoveEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->mouseMoveEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else {
		static_cast<QGraphicsItem*>(ptr)->mouseMoveEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	}
}

void QGraphicsItem_MouseMoveEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsPixmapItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPixmapItem*>(ptr)->QGraphicsPixmapItem::mouseMoveEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::mouseMoveEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::mouseMoveEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsTextItem*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::mouseMoveEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::mouseMoveEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsLineItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsLineItem*>(ptr)->QGraphicsLineItem::mouseMoveEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsItemGroup*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsItemGroup*>(ptr)->QGraphicsItemGroup::mouseMoveEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsSimpleTextItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsSimpleTextItem*>(ptr)->QGraphicsSimpleTextItem::mouseMoveEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsRectItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsRectItem*>(ptr)->QGraphicsRectItem::mouseMoveEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsPolygonItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPolygonItem*>(ptr)->QGraphicsPolygonItem::mouseMoveEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsPathItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPathItem*>(ptr)->QGraphicsPathItem::mouseMoveEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsEllipseItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsEllipseItem*>(ptr)->QGraphicsEllipseItem::mouseMoveEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QAbstractGraphicsShapeItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QAbstractGraphicsShapeItem*>(ptr)->QAbstractGraphicsShapeItem::mouseMoveEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else {
		static_cast<QGraphicsItem*>(ptr)->QGraphicsItem::mouseMoveEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	}
}

void QGraphicsItem_MousePressEvent(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->mousePressEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->mousePressEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else {
		static_cast<QGraphicsItem*>(ptr)->mousePressEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	}
}

void QGraphicsItem_MousePressEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsPixmapItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPixmapItem*>(ptr)->QGraphicsPixmapItem::mousePressEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::mousePressEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::mousePressEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsTextItem*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::mousePressEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::mousePressEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsLineItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsLineItem*>(ptr)->QGraphicsLineItem::mousePressEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsItemGroup*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsItemGroup*>(ptr)->QGraphicsItemGroup::mousePressEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsSimpleTextItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsSimpleTextItem*>(ptr)->QGraphicsSimpleTextItem::mousePressEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsRectItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsRectItem*>(ptr)->QGraphicsRectItem::mousePressEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsPolygonItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPolygonItem*>(ptr)->QGraphicsPolygonItem::mousePressEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsPathItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPathItem*>(ptr)->QGraphicsPathItem::mousePressEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsEllipseItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsEllipseItem*>(ptr)->QGraphicsEllipseItem::mousePressEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QAbstractGraphicsShapeItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QAbstractGraphicsShapeItem*>(ptr)->QAbstractGraphicsShapeItem::mousePressEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else {
		static_cast<QGraphicsItem*>(ptr)->QGraphicsItem::mousePressEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	}
}

void QGraphicsItem_MouseReleaseEvent(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->mouseReleaseEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->mouseReleaseEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else {
		static_cast<QGraphicsItem*>(ptr)->mouseReleaseEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	}
}

void QGraphicsItem_MouseReleaseEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsPixmapItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPixmapItem*>(ptr)->QGraphicsPixmapItem::mouseReleaseEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::mouseReleaseEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::mouseReleaseEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsTextItem*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::mouseReleaseEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::mouseReleaseEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsLineItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsLineItem*>(ptr)->QGraphicsLineItem::mouseReleaseEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsItemGroup*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsItemGroup*>(ptr)->QGraphicsItemGroup::mouseReleaseEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsSimpleTextItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsSimpleTextItem*>(ptr)->QGraphicsSimpleTextItem::mouseReleaseEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsRectItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsRectItem*>(ptr)->QGraphicsRectItem::mouseReleaseEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsPolygonItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPolygonItem*>(ptr)->QGraphicsPolygonItem::mouseReleaseEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsPathItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPathItem*>(ptr)->QGraphicsPathItem::mouseReleaseEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsEllipseItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsEllipseItem*>(ptr)->QGraphicsEllipseItem::mouseReleaseEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else if (dynamic_cast<QAbstractGraphicsShapeItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QAbstractGraphicsShapeItem*>(ptr)->QAbstractGraphicsShapeItem::mouseReleaseEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	} else {
		static_cast<QGraphicsItem*>(ptr)->QGraphicsItem::mouseReleaseEvent(static_cast<QGraphicsSceneMouseEvent*>(event));
	}
}

void QGraphicsItem_MoveBy(void* ptr, double dx, double dy)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->moveBy(dx, dy);
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->moveBy(dx, dy);
	} else {
		static_cast<QGraphicsItem*>(ptr)->moveBy(dx, dy);
	}
}

void QGraphicsItem_Paint(void* ptr, void* painter, void* option, void* widget)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->paint(static_cast<QPainter*>(painter), static_cast<QStyleOptionGraphicsItem*>(option), static_cast<QWidget*>(widget));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->paint(static_cast<QPainter*>(painter), static_cast<QStyleOptionGraphicsItem*>(option), static_cast<QWidget*>(widget));
	} else {
		static_cast<QGraphicsItem*>(ptr)->paint(static_cast<QPainter*>(painter), static_cast<QStyleOptionGraphicsItem*>(option), static_cast<QWidget*>(widget));
	}
}

void QGraphicsItem_PrepareGeometryChange(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->prepareGeometryChange();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->prepareGeometryChange();
	} else {
		static_cast<QGraphicsItem*>(ptr)->prepareGeometryChange();
	}
}

void QGraphicsItem_RemoveSceneEventFilter(void* ptr, void* filterItem)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(filterItem))) {
			static_cast<QGraphicsObject*>(ptr)->removeSceneEventFilter(static_cast<QGraphicsObject*>(filterItem));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(filterItem))) {
			static_cast<QGraphicsObject*>(ptr)->removeSceneEventFilter(static_cast<QGraphicsWidget*>(filterItem));
		} else {
			static_cast<QGraphicsObject*>(ptr)->removeSceneEventFilter(static_cast<QGraphicsItem*>(filterItem));
		}
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(filterItem))) {
			static_cast<QGraphicsWidget*>(ptr)->removeSceneEventFilter(static_cast<QGraphicsObject*>(filterItem));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(filterItem))) {
			static_cast<QGraphicsWidget*>(ptr)->removeSceneEventFilter(static_cast<QGraphicsWidget*>(filterItem));
		} else {
			static_cast<QGraphicsWidget*>(ptr)->removeSceneEventFilter(static_cast<QGraphicsItem*>(filterItem));
		}
	} else {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(filterItem))) {
			static_cast<QGraphicsItem*>(ptr)->removeSceneEventFilter(static_cast<QGraphicsObject*>(filterItem));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(filterItem))) {
			static_cast<QGraphicsItem*>(ptr)->removeSceneEventFilter(static_cast<QGraphicsWidget*>(filterItem));
		} else {
			static_cast<QGraphicsItem*>(ptr)->removeSceneEventFilter(static_cast<QGraphicsItem*>(filterItem));
		}
	}
}

void QGraphicsItem_ResetTransform(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->resetTransform();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->resetTransform();
	} else {
		static_cast<QGraphicsItem*>(ptr)->resetTransform();
	}
}

void QGraphicsItem_Scroll(void* ptr, double dx, double dy, void* rect)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->scroll(dx, dy, *static_cast<QRectF*>(rect));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->scroll(dx, dy, *static_cast<QRectF*>(rect));
	} else {
		static_cast<QGraphicsItem*>(ptr)->scroll(dx, dy, *static_cast<QRectF*>(rect));
	}
}

void QGraphicsItem_SetAcceptDrops(void* ptr, char on)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->setAcceptDrops(on != 0);
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setAcceptDrops(on != 0);
	} else {
		static_cast<QGraphicsItem*>(ptr)->setAcceptDrops(on != 0);
	}
}

void QGraphicsItem_SetAcceptHoverEvents(void* ptr, char enabled)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->setAcceptHoverEvents(enabled != 0);
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setAcceptHoverEvents(enabled != 0);
	} else {
		static_cast<QGraphicsItem*>(ptr)->setAcceptHoverEvents(enabled != 0);
	}
}

void QGraphicsItem_SetAcceptTouchEvents(void* ptr, char enabled)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->setAcceptTouchEvents(enabled != 0);
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setAcceptTouchEvents(enabled != 0);
	} else {
		static_cast<QGraphicsItem*>(ptr)->setAcceptTouchEvents(enabled != 0);
	}
}

void QGraphicsItem_SetAcceptedMouseButtons(void* ptr, long long buttons)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->setAcceptedMouseButtons(static_cast<Qt::MouseButton>(buttons));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setAcceptedMouseButtons(static_cast<Qt::MouseButton>(buttons));
	} else {
		static_cast<QGraphicsItem*>(ptr)->setAcceptedMouseButtons(static_cast<Qt::MouseButton>(buttons));
	}
}

void QGraphicsItem_SetActive(void* ptr, char active)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->setActive(active != 0);
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setActive(active != 0);
	} else {
		static_cast<QGraphicsItem*>(ptr)->setActive(active != 0);
	}
}

void QGraphicsItem_SetBoundingRegionGranularity(void* ptr, double granularity)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->setBoundingRegionGranularity(granularity);
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setBoundingRegionGranularity(granularity);
	} else {
		static_cast<QGraphicsItem*>(ptr)->setBoundingRegionGranularity(granularity);
	}
}

void QGraphicsItem_SetCacheMode(void* ptr, long long mode, void* logicalCacheSize)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->setCacheMode(static_cast<QGraphicsItem::CacheMode>(mode), *static_cast<QSize*>(logicalCacheSize));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setCacheMode(static_cast<QGraphicsItem::CacheMode>(mode), *static_cast<QSize*>(logicalCacheSize));
	} else {
		static_cast<QGraphicsItem*>(ptr)->setCacheMode(static_cast<QGraphicsItem::CacheMode>(mode), *static_cast<QSize*>(logicalCacheSize));
	}
}

void QGraphicsItem_SetCursor(void* ptr, void* cursor)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->setCursor(*static_cast<QCursor*>(cursor));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setCursor(*static_cast<QCursor*>(cursor));
	} else {
		static_cast<QGraphicsItem*>(ptr)->setCursor(*static_cast<QCursor*>(cursor));
	}
}

void QGraphicsItem_SetData(void* ptr, int key, void* value)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->setData(key, *static_cast<QVariant*>(value));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setData(key, *static_cast<QVariant*>(value));
	} else {
		static_cast<QGraphicsItem*>(ptr)->setData(key, *static_cast<QVariant*>(value));
	}
}

void QGraphicsItem_SetEnabled(void* ptr, char enabled)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->setEnabled(enabled != 0);
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setEnabled(enabled != 0);
	} else {
		static_cast<QGraphicsItem*>(ptr)->setEnabled(enabled != 0);
	}
}

void QGraphicsItem_SetFiltersChildEvents(void* ptr, char enabled)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->setFiltersChildEvents(enabled != 0);
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setFiltersChildEvents(enabled != 0);
	} else {
		static_cast<QGraphicsItem*>(ptr)->setFiltersChildEvents(enabled != 0);
	}
}

void QGraphicsItem_SetFlag(void* ptr, long long flag, char enabled)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->setFlag(static_cast<QGraphicsItem::GraphicsItemFlag>(flag), enabled != 0);
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setFlag(static_cast<QGraphicsItem::GraphicsItemFlag>(flag), enabled != 0);
	} else {
		static_cast<QGraphicsItem*>(ptr)->setFlag(static_cast<QGraphicsItem::GraphicsItemFlag>(flag), enabled != 0);
	}
}

void QGraphicsItem_SetFlags(void* ptr, long long flags)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->setFlags(static_cast<QGraphicsItem::GraphicsItemFlag>(flags));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setFlags(static_cast<QGraphicsItem::GraphicsItemFlag>(flags));
	} else {
		static_cast<QGraphicsItem*>(ptr)->setFlags(static_cast<QGraphicsItem::GraphicsItemFlag>(flags));
	}
}

void QGraphicsItem_SetFocus(void* ptr, long long focusReason)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->setFocus(static_cast<Qt::FocusReason>(focusReason));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setFocus(static_cast<Qt::FocusReason>(focusReason));
	} else {
		static_cast<QGraphicsItem*>(ptr)->setFocus(static_cast<Qt::FocusReason>(focusReason));
	}
}

void QGraphicsItem_SetFocusProxy(void* ptr, void* item)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			static_cast<QGraphicsObject*>(ptr)->setFocusProxy(static_cast<QGraphicsObject*>(item));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			static_cast<QGraphicsObject*>(ptr)->setFocusProxy(static_cast<QGraphicsWidget*>(item));
		} else {
			static_cast<QGraphicsObject*>(ptr)->setFocusProxy(static_cast<QGraphicsItem*>(item));
		}
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			static_cast<QGraphicsWidget*>(ptr)->setFocusProxy(static_cast<QGraphicsObject*>(item));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			static_cast<QGraphicsWidget*>(ptr)->setFocusProxy(static_cast<QGraphicsWidget*>(item));
		} else {
			static_cast<QGraphicsWidget*>(ptr)->setFocusProxy(static_cast<QGraphicsItem*>(item));
		}
	} else {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			static_cast<QGraphicsItem*>(ptr)->setFocusProxy(static_cast<QGraphicsObject*>(item));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			static_cast<QGraphicsItem*>(ptr)->setFocusProxy(static_cast<QGraphicsWidget*>(item));
		} else {
			static_cast<QGraphicsItem*>(ptr)->setFocusProxy(static_cast<QGraphicsItem*>(item));
		}
	}
}

void QGraphicsItem_SetGraphicsEffect(void* ptr, void* effect)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->setGraphicsEffect(static_cast<QGraphicsEffect*>(effect));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setGraphicsEffect(static_cast<QGraphicsEffect*>(effect));
	} else {
		static_cast<QGraphicsItem*>(ptr)->setGraphicsEffect(static_cast<QGraphicsEffect*>(effect));
	}
}

void QGraphicsItem_SetGroup(void* ptr, void* group)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->setGroup(static_cast<QGraphicsItemGroup*>(group));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setGroup(static_cast<QGraphicsItemGroup*>(group));
	} else {
		static_cast<QGraphicsItem*>(ptr)->setGroup(static_cast<QGraphicsItemGroup*>(group));
	}
}

void QGraphicsItem_SetInputMethodHints(void* ptr, long long hints)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->setInputMethodHints(static_cast<Qt::InputMethodHint>(hints));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setInputMethodHints(static_cast<Qt::InputMethodHint>(hints));
	} else {
		static_cast<QGraphicsItem*>(ptr)->setInputMethodHints(static_cast<Qt::InputMethodHint>(hints));
	}
}

void QGraphicsItem_SetOpacity(void* ptr, double opacity)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->setOpacity(opacity);
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setOpacity(opacity);
	} else {
		static_cast<QGraphicsItem*>(ptr)->setOpacity(opacity);
	}
}

void QGraphicsItem_SetPanelModality(void* ptr, long long panelModality)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->setPanelModality(static_cast<QGraphicsItem::PanelModality>(panelModality));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setPanelModality(static_cast<QGraphicsItem::PanelModality>(panelModality));
	} else {
		static_cast<QGraphicsItem*>(ptr)->setPanelModality(static_cast<QGraphicsItem::PanelModality>(panelModality));
	}
}

void QGraphicsItem_SetParentItem(void* ptr, void* newParent)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(newParent))) {
			static_cast<QGraphicsObject*>(ptr)->setParentItem(static_cast<QGraphicsObject*>(newParent));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(newParent))) {
			static_cast<QGraphicsObject*>(ptr)->setParentItem(static_cast<QGraphicsWidget*>(newParent));
		} else {
			static_cast<QGraphicsObject*>(ptr)->setParentItem(static_cast<QGraphicsItem*>(newParent));
		}
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(newParent))) {
			static_cast<QGraphicsWidget*>(ptr)->setParentItem(static_cast<QGraphicsObject*>(newParent));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(newParent))) {
			static_cast<QGraphicsWidget*>(ptr)->setParentItem(static_cast<QGraphicsWidget*>(newParent));
		} else {
			static_cast<QGraphicsWidget*>(ptr)->setParentItem(static_cast<QGraphicsItem*>(newParent));
		}
	} else {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(newParent))) {
			static_cast<QGraphicsItem*>(ptr)->setParentItem(static_cast<QGraphicsObject*>(newParent));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(newParent))) {
			static_cast<QGraphicsItem*>(ptr)->setParentItem(static_cast<QGraphicsWidget*>(newParent));
		} else {
			static_cast<QGraphicsItem*>(ptr)->setParentItem(static_cast<QGraphicsItem*>(newParent));
		}
	}
}

void QGraphicsItem_SetPos(void* ptr, void* pos)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->setPos(*static_cast<QPointF*>(pos));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setPos(*static_cast<QPointF*>(pos));
	} else {
		static_cast<QGraphicsItem*>(ptr)->setPos(*static_cast<QPointF*>(pos));
	}
}

void QGraphicsItem_SetPos2(void* ptr, double x, double y)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->setPos(x, y);
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setPos(x, y);
	} else {
		static_cast<QGraphicsItem*>(ptr)->setPos(x, y);
	}
}

void QGraphicsItem_SetRotation(void* ptr, double angle)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->setRotation(angle);
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setRotation(angle);
	} else {
		static_cast<QGraphicsItem*>(ptr)->setRotation(angle);
	}
}

void QGraphicsItem_SetScale(void* ptr, double factor)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->setScale(factor);
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setScale(factor);
	} else {
		static_cast<QGraphicsItem*>(ptr)->setScale(factor);
	}
}

void QGraphicsItem_SetSelected(void* ptr, char selected)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->setSelected(selected != 0);
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setSelected(selected != 0);
	} else {
		static_cast<QGraphicsItem*>(ptr)->setSelected(selected != 0);
	}
}

void QGraphicsItem_SetToolTip(void* ptr, struct QtWidgets_PackedString toolTip)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->setToolTip(QString::fromUtf8(toolTip.data, toolTip.len));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setToolTip(QString::fromUtf8(toolTip.data, toolTip.len));
	} else {
		static_cast<QGraphicsItem*>(ptr)->setToolTip(QString::fromUtf8(toolTip.data, toolTip.len));
	}
}

void QGraphicsItem_SetTransform(void* ptr, void* matrix, char combine)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->setTransform(*static_cast<QTransform*>(matrix), combine != 0);
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setTransform(*static_cast<QTransform*>(matrix), combine != 0);
	} else {
		static_cast<QGraphicsItem*>(ptr)->setTransform(*static_cast<QTransform*>(matrix), combine != 0);
	}
}

void QGraphicsItem_SetTransformOriginPoint(void* ptr, void* origin)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->setTransformOriginPoint(*static_cast<QPointF*>(origin));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setTransformOriginPoint(*static_cast<QPointF*>(origin));
	} else {
		static_cast<QGraphicsItem*>(ptr)->setTransformOriginPoint(*static_cast<QPointF*>(origin));
	}
}

void QGraphicsItem_SetTransformOriginPoint2(void* ptr, double x, double y)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->setTransformOriginPoint(x, y);
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setTransformOriginPoint(x, y);
	} else {
		static_cast<QGraphicsItem*>(ptr)->setTransformOriginPoint(x, y);
	}
}

void QGraphicsItem_SetTransformations(void* ptr, void* transformations)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->setTransformations(*static_cast<QList<QGraphicsTransform *>*>(transformations));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setTransformations(*static_cast<QList<QGraphicsTransform *>*>(transformations));
	} else {
		static_cast<QGraphicsItem*>(ptr)->setTransformations(*static_cast<QList<QGraphicsTransform *>*>(transformations));
	}
}

void QGraphicsItem_SetVisible(void* ptr, char visible)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->setVisible(visible != 0);
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setVisible(visible != 0);
	} else {
		static_cast<QGraphicsItem*>(ptr)->setVisible(visible != 0);
	}
}

void QGraphicsItem_SetX(void* ptr, double x)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->setX(x);
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setX(x);
	} else {
		static_cast<QGraphicsItem*>(ptr)->setX(x);
	}
}

void QGraphicsItem_SetY(void* ptr, double y)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->setY(y);
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setY(y);
	} else {
		static_cast<QGraphicsItem*>(ptr)->setY(y);
	}
}

void QGraphicsItem_SetZValue(void* ptr, double z)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->setZValue(z);
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setZValue(z);
	} else {
		static_cast<QGraphicsItem*>(ptr)->setZValue(z);
	}
}

void QGraphicsItem_Show(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->show();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->show();
	} else {
		static_cast<QGraphicsItem*>(ptr)->show();
	}
}

void QGraphicsItem_StackBefore(void* ptr, void* sibling)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(sibling))) {
			static_cast<QGraphicsObject*>(ptr)->stackBefore(static_cast<QGraphicsObject*>(sibling));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(sibling))) {
			static_cast<QGraphicsObject*>(ptr)->stackBefore(static_cast<QGraphicsWidget*>(sibling));
		} else {
			static_cast<QGraphicsObject*>(ptr)->stackBefore(static_cast<QGraphicsItem*>(sibling));
		}
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(sibling))) {
			static_cast<QGraphicsWidget*>(ptr)->stackBefore(static_cast<QGraphicsObject*>(sibling));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(sibling))) {
			static_cast<QGraphicsWidget*>(ptr)->stackBefore(static_cast<QGraphicsWidget*>(sibling));
		} else {
			static_cast<QGraphicsWidget*>(ptr)->stackBefore(static_cast<QGraphicsItem*>(sibling));
		}
	} else {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(sibling))) {
			static_cast<QGraphicsItem*>(ptr)->stackBefore(static_cast<QGraphicsObject*>(sibling));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(sibling))) {
			static_cast<QGraphicsItem*>(ptr)->stackBefore(static_cast<QGraphicsWidget*>(sibling));
		} else {
			static_cast<QGraphicsItem*>(ptr)->stackBefore(static_cast<QGraphicsItem*>(sibling));
		}
	}
}

void QGraphicsItem_UngrabKeyboard(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->ungrabKeyboard();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->ungrabKeyboard();
	} else {
		static_cast<QGraphicsItem*>(ptr)->ungrabKeyboard();
	}
}

void QGraphicsItem_UngrabMouse(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->ungrabMouse();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->ungrabMouse();
	} else {
		static_cast<QGraphicsItem*>(ptr)->ungrabMouse();
	}
}

void QGraphicsItem_UnsetCursor(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->unsetCursor();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->unsetCursor();
	} else {
		static_cast<QGraphicsItem*>(ptr)->unsetCursor();
	}
}

void QGraphicsItem_Update(void* ptr, void* rect)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->update(*static_cast<QRectF*>(rect));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->update(*static_cast<QRectF*>(rect));
	} else {
		static_cast<QGraphicsItem*>(ptr)->update(*static_cast<QRectF*>(rect));
	}
}

void QGraphicsItem_Update2(void* ptr, double x, double y, double width, double height)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->update(x, y, width, height);
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->update(x, y, width, height);
	} else {
		static_cast<QGraphicsItem*>(ptr)->update(x, y, width, height);
	}
}

void QGraphicsItem_WheelEvent(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->wheelEvent(static_cast<QGraphicsSceneWheelEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->wheelEvent(static_cast<QGraphicsSceneWheelEvent*>(event));
	} else {
		static_cast<QGraphicsItem*>(ptr)->wheelEvent(static_cast<QGraphicsSceneWheelEvent*>(event));
	}
}

void QGraphicsItem_WheelEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsPixmapItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPixmapItem*>(ptr)->QGraphicsPixmapItem::wheelEvent(static_cast<QGraphicsSceneWheelEvent*>(event));
	} else if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::wheelEvent(static_cast<QGraphicsSceneWheelEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::wheelEvent(static_cast<QGraphicsSceneWheelEvent*>(event));
	} else if (dynamic_cast<QGraphicsTextItem*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::wheelEvent(static_cast<QGraphicsSceneWheelEvent*>(event));
	} else if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::wheelEvent(static_cast<QGraphicsSceneWheelEvent*>(event));
	} else if (dynamic_cast<QGraphicsLineItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsLineItem*>(ptr)->QGraphicsLineItem::wheelEvent(static_cast<QGraphicsSceneWheelEvent*>(event));
	} else if (dynamic_cast<QGraphicsItemGroup*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsItemGroup*>(ptr)->QGraphicsItemGroup::wheelEvent(static_cast<QGraphicsSceneWheelEvent*>(event));
	} else if (dynamic_cast<QGraphicsSimpleTextItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsSimpleTextItem*>(ptr)->QGraphicsSimpleTextItem::wheelEvent(static_cast<QGraphicsSceneWheelEvent*>(event));
	} else if (dynamic_cast<QGraphicsRectItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsRectItem*>(ptr)->QGraphicsRectItem::wheelEvent(static_cast<QGraphicsSceneWheelEvent*>(event));
	} else if (dynamic_cast<QGraphicsPolygonItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPolygonItem*>(ptr)->QGraphicsPolygonItem::wheelEvent(static_cast<QGraphicsSceneWheelEvent*>(event));
	} else if (dynamic_cast<QGraphicsPathItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsPathItem*>(ptr)->QGraphicsPathItem::wheelEvent(static_cast<QGraphicsSceneWheelEvent*>(event));
	} else if (dynamic_cast<QGraphicsEllipseItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QGraphicsEllipseItem*>(ptr)->QGraphicsEllipseItem::wheelEvent(static_cast<QGraphicsSceneWheelEvent*>(event));
	} else if (dynamic_cast<QAbstractGraphicsShapeItem*>(static_cast<QGraphicsItem*>(ptr))) {
		static_cast<QAbstractGraphicsShapeItem*>(ptr)->QAbstractGraphicsShapeItem::wheelEvent(static_cast<QGraphicsSceneWheelEvent*>(event));
	} else {
		static_cast<QGraphicsItem*>(ptr)->QGraphicsItem::wheelEvent(static_cast<QGraphicsSceneWheelEvent*>(event));
	}
}

void QGraphicsItem_DestroyQGraphicsItem(void* ptr)
{
	static_cast<QGraphicsItem*>(ptr)->~QGraphicsItem();
}

void QGraphicsItem_DestroyQGraphicsItemDefault(void* ptr)
{
	Q_UNUSED(ptr);

}

void* QGraphicsItem_Cursor(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return new QCursor(static_cast<QGraphicsObject*>(ptr)->cursor());
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return new QCursor(static_cast<QGraphicsWidget*>(ptr)->cursor());
	} else {
		return new QCursor(static_cast<QGraphicsItem*>(ptr)->cursor());
	}
}

void* QGraphicsItem_GraphicsEffect(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->graphicsEffect();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->graphicsEffect();
	} else {
		return static_cast<QGraphicsItem*>(ptr)->graphicsEffect();
	}
}

void* QGraphicsItem_CommonAncestorItem(void* ptr, void* other)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(other))) {
			return static_cast<QGraphicsObject*>(ptr)->commonAncestorItem(static_cast<QGraphicsObject*>(other));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(other))) {
			return static_cast<QGraphicsObject*>(ptr)->commonAncestorItem(static_cast<QGraphicsWidget*>(other));
		} else {
			return static_cast<QGraphicsObject*>(ptr)->commonAncestorItem(static_cast<QGraphicsItem*>(other));
		}
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(other))) {
			return static_cast<QGraphicsWidget*>(ptr)->commonAncestorItem(static_cast<QGraphicsObject*>(other));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(other))) {
			return static_cast<QGraphicsWidget*>(ptr)->commonAncestorItem(static_cast<QGraphicsWidget*>(other));
		} else {
			return static_cast<QGraphicsWidget*>(ptr)->commonAncestorItem(static_cast<QGraphicsItem*>(other));
		}
	} else {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(other))) {
			return static_cast<QGraphicsItem*>(ptr)->commonAncestorItem(static_cast<QGraphicsObject*>(other));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(other))) {
			return static_cast<QGraphicsItem*>(ptr)->commonAncestorItem(static_cast<QGraphicsWidget*>(other));
		} else {
			return static_cast<QGraphicsItem*>(ptr)->commonAncestorItem(static_cast<QGraphicsItem*>(other));
		}
	}
}

void* QGraphicsItem_FocusItem(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->focusItem();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->focusItem();
	} else {
		return static_cast<QGraphicsItem*>(ptr)->focusItem();
	}
}

void* QGraphicsItem_FocusProxy(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->focusProxy();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->focusProxy();
	} else {
		return static_cast<QGraphicsItem*>(ptr)->focusProxy();
	}
}

void* QGraphicsItem_Panel(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->panel();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->panel();
	} else {
		return static_cast<QGraphicsItem*>(ptr)->panel();
	}
}

void* QGraphicsItem_ParentItem(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->parentItem();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->parentItem();
	} else {
		return static_cast<QGraphicsItem*>(ptr)->parentItem();
	}
}

void* QGraphicsItem_TopLevelItem(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->topLevelItem();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->topLevelItem();
	} else {
		return static_cast<QGraphicsItem*>(ptr)->topLevelItem();
	}
}

long long QGraphicsItem_CacheMode(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->cacheMode();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->cacheMode();
	} else {
		return static_cast<QGraphicsItem*>(ptr)->cacheMode();
	}
}

long long QGraphicsItem_Flags(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->flags();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->flags();
	} else {
		return static_cast<QGraphicsItem*>(ptr)->flags();
	}
}

long long QGraphicsItem_PanelModality(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->panelModality();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->panelModality();
	} else {
		return static_cast<QGraphicsItem*>(ptr)->panelModality();
	}
}

void* QGraphicsItem_Group(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->group();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->group();
	} else {
		return static_cast<QGraphicsItem*>(ptr)->group();
	}
}

void* QGraphicsItem_ParentObject(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->parentObject();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->parentObject();
	} else {
		return static_cast<QGraphicsItem*>(ptr)->parentObject();
	}
}

void* QGraphicsItem_Scene(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->scene();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->scene();
	} else {
		return static_cast<QGraphicsItem*>(ptr)->scene();
	}
}

void* QGraphicsItem_ParentWidget(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->parentWidget();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->parentWidget();
	} else {
		return static_cast<QGraphicsItem*>(ptr)->parentWidget();
	}
}

void* QGraphicsItem_TopLevelWidget(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->topLevelWidget();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->topLevelWidget();
	} else {
		return static_cast<QGraphicsItem*>(ptr)->topLevelWidget();
	}
}

void* QGraphicsItem_Window(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->window();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->window();
	} else {
		return static_cast<QGraphicsItem*>(ptr)->window();
	}
}

struct QtWidgets_PackedList QGraphicsItem_ChildItems(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return ({ QList<QGraphicsItem *>* tmpValue479dfb = new QList<QGraphicsItem *>(static_cast<QGraphicsObject*>(ptr)->childItems()); QtWidgets_PackedList { tmpValue479dfb, tmpValue479dfb->size() }; });
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({ QList<QGraphicsItem *>* tmpValue479dfb = new QList<QGraphicsItem *>(static_cast<QGraphicsWidget*>(ptr)->childItems()); QtWidgets_PackedList { tmpValue479dfb, tmpValue479dfb->size() }; });
	} else {
		return ({ QList<QGraphicsItem *>* tmpValue479dfb = new QList<QGraphicsItem *>(static_cast<QGraphicsItem*>(ptr)->childItems()); QtWidgets_PackedList { tmpValue479dfb, tmpValue479dfb->size() }; });
	}
}

struct QtWidgets_PackedList QGraphicsItem_CollidingItems(void* ptr, long long mode)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return ({ QList<QGraphicsItem *>* tmpValue8b585f = new QList<QGraphicsItem *>(static_cast<QGraphicsObject*>(ptr)->collidingItems(static_cast<Qt::ItemSelectionMode>(mode))); QtWidgets_PackedList { tmpValue8b585f, tmpValue8b585f->size() }; });
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({ QList<QGraphicsItem *>* tmpValue8b585f = new QList<QGraphicsItem *>(static_cast<QGraphicsWidget*>(ptr)->collidingItems(static_cast<Qt::ItemSelectionMode>(mode))); QtWidgets_PackedList { tmpValue8b585f, tmpValue8b585f->size() }; });
	} else {
		return ({ QList<QGraphicsItem *>* tmpValue8b585f = new QList<QGraphicsItem *>(static_cast<QGraphicsItem*>(ptr)->collidingItems(static_cast<Qt::ItemSelectionMode>(mode))); QtWidgets_PackedList { tmpValue8b585f, tmpValue8b585f->size() }; });
	}
}

struct QtWidgets_PackedList QGraphicsItem_Transformations(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return ({ QList<QGraphicsTransform *>* tmpValueda467b = new QList<QGraphicsTransform *>(static_cast<QGraphicsObject*>(ptr)->transformations()); QtWidgets_PackedList { tmpValueda467b, tmpValueda467b->size() }; });
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({ QList<QGraphicsTransform *>* tmpValueda467b = new QList<QGraphicsTransform *>(static_cast<QGraphicsWidget*>(ptr)->transformations()); QtWidgets_PackedList { tmpValueda467b, tmpValueda467b->size() }; });
	} else {
		return ({ QList<QGraphicsTransform *>* tmpValueda467b = new QList<QGraphicsTransform *>(static_cast<QGraphicsItem*>(ptr)->transformations()); QtWidgets_PackedList { tmpValueda467b, tmpValueda467b->size() }; });
	}
}

void* QGraphicsItem_ClipPath(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return new QPainterPath(static_cast<QGraphicsObject*>(ptr)->clipPath());
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return new QPainterPath(static_cast<QGraphicsWidget*>(ptr)->clipPath());
	} else {
		return new QPainterPath(static_cast<QGraphicsItem*>(ptr)->clipPath());
	}
}

void* QGraphicsItem_MapFromItem4(void* ptr, void* item, void* path)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return new QPainterPath(static_cast<QGraphicsObject*>(ptr)->mapFromItem(static_cast<QGraphicsObject*>(item), *static_cast<QPainterPath*>(path)));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return new QPainterPath(static_cast<QGraphicsObject*>(ptr)->mapFromItem(static_cast<QGraphicsWidget*>(item), *static_cast<QPainterPath*>(path)));
		} else {
			return new QPainterPath(static_cast<QGraphicsObject*>(ptr)->mapFromItem(static_cast<QGraphicsItem*>(item), *static_cast<QPainterPath*>(path)));
		}
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return new QPainterPath(static_cast<QGraphicsWidget*>(ptr)->mapFromItem(static_cast<QGraphicsObject*>(item), *static_cast<QPainterPath*>(path)));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return new QPainterPath(static_cast<QGraphicsWidget*>(ptr)->mapFromItem(static_cast<QGraphicsWidget*>(item), *static_cast<QPainterPath*>(path)));
		} else {
			return new QPainterPath(static_cast<QGraphicsWidget*>(ptr)->mapFromItem(static_cast<QGraphicsItem*>(item), *static_cast<QPainterPath*>(path)));
		}
	} else {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return new QPainterPath(static_cast<QGraphicsItem*>(ptr)->mapFromItem(static_cast<QGraphicsObject*>(item), *static_cast<QPainterPath*>(path)));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return new QPainterPath(static_cast<QGraphicsItem*>(ptr)->mapFromItem(static_cast<QGraphicsWidget*>(item), *static_cast<QPainterPath*>(path)));
		} else {
			return new QPainterPath(static_cast<QGraphicsItem*>(ptr)->mapFromItem(static_cast<QGraphicsItem*>(item), *static_cast<QPainterPath*>(path)));
		}
	}
}

void* QGraphicsItem_MapFromParent4(void* ptr, void* path)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return new QPainterPath(static_cast<QGraphicsObject*>(ptr)->mapFromParent(*static_cast<QPainterPath*>(path)));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return new QPainterPath(static_cast<QGraphicsWidget*>(ptr)->mapFromParent(*static_cast<QPainterPath*>(path)));
	} else {
		return new QPainterPath(static_cast<QGraphicsItem*>(ptr)->mapFromParent(*static_cast<QPainterPath*>(path)));
	}
}

void* QGraphicsItem_MapFromScene4(void* ptr, void* path)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return new QPainterPath(static_cast<QGraphicsObject*>(ptr)->mapFromScene(*static_cast<QPainterPath*>(path)));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return new QPainterPath(static_cast<QGraphicsWidget*>(ptr)->mapFromScene(*static_cast<QPainterPath*>(path)));
	} else {
		return new QPainterPath(static_cast<QGraphicsItem*>(ptr)->mapFromScene(*static_cast<QPainterPath*>(path)));
	}
}

void* QGraphicsItem_MapToItem4(void* ptr, void* item, void* path)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return new QPainterPath(static_cast<QGraphicsObject*>(ptr)->mapToItem(static_cast<QGraphicsObject*>(item), *static_cast<QPainterPath*>(path)));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return new QPainterPath(static_cast<QGraphicsObject*>(ptr)->mapToItem(static_cast<QGraphicsWidget*>(item), *static_cast<QPainterPath*>(path)));
		} else {
			return new QPainterPath(static_cast<QGraphicsObject*>(ptr)->mapToItem(static_cast<QGraphicsItem*>(item), *static_cast<QPainterPath*>(path)));
		}
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return new QPainterPath(static_cast<QGraphicsWidget*>(ptr)->mapToItem(static_cast<QGraphicsObject*>(item), *static_cast<QPainterPath*>(path)));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return new QPainterPath(static_cast<QGraphicsWidget*>(ptr)->mapToItem(static_cast<QGraphicsWidget*>(item), *static_cast<QPainterPath*>(path)));
		} else {
			return new QPainterPath(static_cast<QGraphicsWidget*>(ptr)->mapToItem(static_cast<QGraphicsItem*>(item), *static_cast<QPainterPath*>(path)));
		}
	} else {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return new QPainterPath(static_cast<QGraphicsItem*>(ptr)->mapToItem(static_cast<QGraphicsObject*>(item), *static_cast<QPainterPath*>(path)));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return new QPainterPath(static_cast<QGraphicsItem*>(ptr)->mapToItem(static_cast<QGraphicsWidget*>(item), *static_cast<QPainterPath*>(path)));
		} else {
			return new QPainterPath(static_cast<QGraphicsItem*>(ptr)->mapToItem(static_cast<QGraphicsItem*>(item), *static_cast<QPainterPath*>(path)));
		}
	}
}

void* QGraphicsItem_MapToParent4(void* ptr, void* path)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return new QPainterPath(static_cast<QGraphicsObject*>(ptr)->mapToParent(*static_cast<QPainterPath*>(path)));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return new QPainterPath(static_cast<QGraphicsWidget*>(ptr)->mapToParent(*static_cast<QPainterPath*>(path)));
	} else {
		return new QPainterPath(static_cast<QGraphicsItem*>(ptr)->mapToParent(*static_cast<QPainterPath*>(path)));
	}
}

void* QGraphicsItem_MapToScene4(void* ptr, void* path)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return new QPainterPath(static_cast<QGraphicsObject*>(ptr)->mapToScene(*static_cast<QPainterPath*>(path)));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return new QPainterPath(static_cast<QGraphicsWidget*>(ptr)->mapToScene(*static_cast<QPainterPath*>(path)));
	} else {
		return new QPainterPath(static_cast<QGraphicsItem*>(ptr)->mapToScene(*static_cast<QPainterPath*>(path)));
	}
}

void* QGraphicsItem_OpaqueArea(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return new QPainterPath(static_cast<QGraphicsObject*>(ptr)->opaqueArea());
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return new QPainterPath(static_cast<QGraphicsWidget*>(ptr)->opaqueArea());
	} else {
		return new QPainterPath(static_cast<QGraphicsItem*>(ptr)->opaqueArea());
	}
}

void* QGraphicsItem_OpaqueAreaDefault(void* ptr)
{
	if (dynamic_cast<QGraphicsPixmapItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return new QPainterPath(static_cast<QGraphicsPixmapItem*>(ptr)->QGraphicsPixmapItem::opaqueArea());
	} else if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		return new QPainterPath(static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::opaqueArea());
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return new QPainterPath(static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::opaqueArea());
	} else if (dynamic_cast<QGraphicsTextItem*>(static_cast<QObject*>(ptr))) {
		return new QPainterPath(static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::opaqueArea());
	} else if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return new QPainterPath(static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::opaqueArea());
	} else if (dynamic_cast<QGraphicsLineItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return new QPainterPath(static_cast<QGraphicsLineItem*>(ptr)->QGraphicsLineItem::opaqueArea());
	} else if (dynamic_cast<QGraphicsItemGroup*>(static_cast<QGraphicsItem*>(ptr))) {
		return new QPainterPath(static_cast<QGraphicsItemGroup*>(ptr)->QGraphicsItemGroup::opaqueArea());
	} else if (dynamic_cast<QGraphicsSimpleTextItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return new QPainterPath(static_cast<QGraphicsSimpleTextItem*>(ptr)->QGraphicsSimpleTextItem::opaqueArea());
	} else if (dynamic_cast<QGraphicsRectItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return new QPainterPath(static_cast<QGraphicsRectItem*>(ptr)->QGraphicsRectItem::opaqueArea());
	} else if (dynamic_cast<QGraphicsPolygonItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return new QPainterPath(static_cast<QGraphicsPolygonItem*>(ptr)->QGraphicsPolygonItem::opaqueArea());
	} else if (dynamic_cast<QGraphicsPathItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return new QPainterPath(static_cast<QGraphicsPathItem*>(ptr)->QGraphicsPathItem::opaqueArea());
	} else if (dynamic_cast<QGraphicsEllipseItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return new QPainterPath(static_cast<QGraphicsEllipseItem*>(ptr)->QGraphicsEllipseItem::opaqueArea());
	} else if (dynamic_cast<QAbstractGraphicsShapeItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return new QPainterPath(static_cast<QAbstractGraphicsShapeItem*>(ptr)->QAbstractGraphicsShapeItem::opaqueArea());
	} else {
		return new QPainterPath(static_cast<QGraphicsItem*>(ptr)->QGraphicsItem::opaqueArea());
	}
}

void* QGraphicsItem_Shape(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return new QPainterPath(static_cast<QGraphicsObject*>(ptr)->shape());
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return new QPainterPath(static_cast<QGraphicsWidget*>(ptr)->shape());
	} else {
		return new QPainterPath(static_cast<QGraphicsItem*>(ptr)->shape());
	}
}

void* QGraphicsItem_ShapeDefault(void* ptr)
{
	if (dynamic_cast<QGraphicsPixmapItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return new QPainterPath(static_cast<QGraphicsPixmapItem*>(ptr)->QGraphicsPixmapItem::shape());
	} else if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		return new QPainterPath(static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::shape());
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return new QPainterPath(static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::shape());
	} else if (dynamic_cast<QGraphicsTextItem*>(static_cast<QObject*>(ptr))) {
		return new QPainterPath(static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::shape());
	} else if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return new QPainterPath(static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::shape());
	} else if (dynamic_cast<QGraphicsLineItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return new QPainterPath(static_cast<QGraphicsLineItem*>(ptr)->QGraphicsLineItem::shape());
	} else if (dynamic_cast<QGraphicsItemGroup*>(static_cast<QGraphicsItem*>(ptr))) {
		return new QPainterPath(static_cast<QGraphicsItemGroup*>(ptr)->QGraphicsItemGroup::shape());
	} else if (dynamic_cast<QGraphicsSimpleTextItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return new QPainterPath(static_cast<QGraphicsSimpleTextItem*>(ptr)->QGraphicsSimpleTextItem::shape());
	} else if (dynamic_cast<QGraphicsRectItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return new QPainterPath(static_cast<QGraphicsRectItem*>(ptr)->QGraphicsRectItem::shape());
	} else if (dynamic_cast<QGraphicsPolygonItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return new QPainterPath(static_cast<QGraphicsPolygonItem*>(ptr)->QGraphicsPolygonItem::shape());
	} else if (dynamic_cast<QGraphicsPathItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return new QPainterPath(static_cast<QGraphicsPathItem*>(ptr)->QGraphicsPathItem::shape());
	} else if (dynamic_cast<QGraphicsEllipseItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return new QPainterPath(static_cast<QGraphicsEllipseItem*>(ptr)->QGraphicsEllipseItem::shape());
	} else if (dynamic_cast<QAbstractGraphicsShapeItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return new QPainterPath(static_cast<QAbstractGraphicsShapeItem*>(ptr)->QAbstractGraphicsShapeItem::shape());
	} else {
		return new QPainterPath(static_cast<QGraphicsItem*>(ptr)->QGraphicsItem::shape());
	}
}

void* QGraphicsItem_MapFromItem(void* ptr, void* item, void* point)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return ({ QPointF tmpValue = static_cast<QGraphicsObject*>(ptr)->mapFromItem(static_cast<QGraphicsObject*>(item), *static_cast<QPointF*>(point)); new QPointF(tmpValue.x(), tmpValue.y()); });
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return ({ QPointF tmpValue = static_cast<QGraphicsObject*>(ptr)->mapFromItem(static_cast<QGraphicsWidget*>(item), *static_cast<QPointF*>(point)); new QPointF(tmpValue.x(), tmpValue.y()); });
		} else {
			return ({ QPointF tmpValue = static_cast<QGraphicsObject*>(ptr)->mapFromItem(static_cast<QGraphicsItem*>(item), *static_cast<QPointF*>(point)); new QPointF(tmpValue.x(), tmpValue.y()); });
		}
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return ({ QPointF tmpValue = static_cast<QGraphicsWidget*>(ptr)->mapFromItem(static_cast<QGraphicsObject*>(item), *static_cast<QPointF*>(point)); new QPointF(tmpValue.x(), tmpValue.y()); });
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return ({ QPointF tmpValue = static_cast<QGraphicsWidget*>(ptr)->mapFromItem(static_cast<QGraphicsWidget*>(item), *static_cast<QPointF*>(point)); new QPointF(tmpValue.x(), tmpValue.y()); });
		} else {
			return ({ QPointF tmpValue = static_cast<QGraphicsWidget*>(ptr)->mapFromItem(static_cast<QGraphicsItem*>(item), *static_cast<QPointF*>(point)); new QPointF(tmpValue.x(), tmpValue.y()); });
		}
	} else {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return ({ QPointF tmpValue = static_cast<QGraphicsItem*>(ptr)->mapFromItem(static_cast<QGraphicsObject*>(item), *static_cast<QPointF*>(point)); new QPointF(tmpValue.x(), tmpValue.y()); });
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return ({ QPointF tmpValue = static_cast<QGraphicsItem*>(ptr)->mapFromItem(static_cast<QGraphicsWidget*>(item), *static_cast<QPointF*>(point)); new QPointF(tmpValue.x(), tmpValue.y()); });
		} else {
			return ({ QPointF tmpValue = static_cast<QGraphicsItem*>(ptr)->mapFromItem(static_cast<QGraphicsItem*>(item), *static_cast<QPointF*>(point)); new QPointF(tmpValue.x(), tmpValue.y()); });
		}
	}
}

void* QGraphicsItem_MapFromItem5(void* ptr, void* item, double x, double y)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return ({ QPointF tmpValue = static_cast<QGraphicsObject*>(ptr)->mapFromItem(static_cast<QGraphicsObject*>(item), x, y); new QPointF(tmpValue.x(), tmpValue.y()); });
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return ({ QPointF tmpValue = static_cast<QGraphicsObject*>(ptr)->mapFromItem(static_cast<QGraphicsWidget*>(item), x, y); new QPointF(tmpValue.x(), tmpValue.y()); });
		} else {
			return ({ QPointF tmpValue = static_cast<QGraphicsObject*>(ptr)->mapFromItem(static_cast<QGraphicsItem*>(item), x, y); new QPointF(tmpValue.x(), tmpValue.y()); });
		}
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return ({ QPointF tmpValue = static_cast<QGraphicsWidget*>(ptr)->mapFromItem(static_cast<QGraphicsObject*>(item), x, y); new QPointF(tmpValue.x(), tmpValue.y()); });
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return ({ QPointF tmpValue = static_cast<QGraphicsWidget*>(ptr)->mapFromItem(static_cast<QGraphicsWidget*>(item), x, y); new QPointF(tmpValue.x(), tmpValue.y()); });
		} else {
			return ({ QPointF tmpValue = static_cast<QGraphicsWidget*>(ptr)->mapFromItem(static_cast<QGraphicsItem*>(item), x, y); new QPointF(tmpValue.x(), tmpValue.y()); });
		}
	} else {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return ({ QPointF tmpValue = static_cast<QGraphicsItem*>(ptr)->mapFromItem(static_cast<QGraphicsObject*>(item), x, y); new QPointF(tmpValue.x(), tmpValue.y()); });
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return ({ QPointF tmpValue = static_cast<QGraphicsItem*>(ptr)->mapFromItem(static_cast<QGraphicsWidget*>(item), x, y); new QPointF(tmpValue.x(), tmpValue.y()); });
		} else {
			return ({ QPointF tmpValue = static_cast<QGraphicsItem*>(ptr)->mapFromItem(static_cast<QGraphicsItem*>(item), x, y); new QPointF(tmpValue.x(), tmpValue.y()); });
		}
	}
}

void* QGraphicsItem_MapFromParent(void* ptr, void* point)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return ({ QPointF tmpValue = static_cast<QGraphicsObject*>(ptr)->mapFromParent(*static_cast<QPointF*>(point)); new QPointF(tmpValue.x(), tmpValue.y()); });
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({ QPointF tmpValue = static_cast<QGraphicsWidget*>(ptr)->mapFromParent(*static_cast<QPointF*>(point)); new QPointF(tmpValue.x(), tmpValue.y()); });
	} else {
		return ({ QPointF tmpValue = static_cast<QGraphicsItem*>(ptr)->mapFromParent(*static_cast<QPointF*>(point)); new QPointF(tmpValue.x(), tmpValue.y()); });
	}
}

void* QGraphicsItem_MapFromParent5(void* ptr, double x, double y)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return ({ QPointF tmpValue = static_cast<QGraphicsObject*>(ptr)->mapFromParent(x, y); new QPointF(tmpValue.x(), tmpValue.y()); });
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({ QPointF tmpValue = static_cast<QGraphicsWidget*>(ptr)->mapFromParent(x, y); new QPointF(tmpValue.x(), tmpValue.y()); });
	} else {
		return ({ QPointF tmpValue = static_cast<QGraphicsItem*>(ptr)->mapFromParent(x, y); new QPointF(tmpValue.x(), tmpValue.y()); });
	}
}

void* QGraphicsItem_MapFromScene(void* ptr, void* point)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return ({ QPointF tmpValue = static_cast<QGraphicsObject*>(ptr)->mapFromScene(*static_cast<QPointF*>(point)); new QPointF(tmpValue.x(), tmpValue.y()); });
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({ QPointF tmpValue = static_cast<QGraphicsWidget*>(ptr)->mapFromScene(*static_cast<QPointF*>(point)); new QPointF(tmpValue.x(), tmpValue.y()); });
	} else {
		return ({ QPointF tmpValue = static_cast<QGraphicsItem*>(ptr)->mapFromScene(*static_cast<QPointF*>(point)); new QPointF(tmpValue.x(), tmpValue.y()); });
	}
}

void* QGraphicsItem_MapFromScene5(void* ptr, double x, double y)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return ({ QPointF tmpValue = static_cast<QGraphicsObject*>(ptr)->mapFromScene(x, y); new QPointF(tmpValue.x(), tmpValue.y()); });
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({ QPointF tmpValue = static_cast<QGraphicsWidget*>(ptr)->mapFromScene(x, y); new QPointF(tmpValue.x(), tmpValue.y()); });
	} else {
		return ({ QPointF tmpValue = static_cast<QGraphicsItem*>(ptr)->mapFromScene(x, y); new QPointF(tmpValue.x(), tmpValue.y()); });
	}
}

void* QGraphicsItem_MapToItem(void* ptr, void* item, void* point)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return ({ QPointF tmpValue = static_cast<QGraphicsObject*>(ptr)->mapToItem(static_cast<QGraphicsObject*>(item), *static_cast<QPointF*>(point)); new QPointF(tmpValue.x(), tmpValue.y()); });
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return ({ QPointF tmpValue = static_cast<QGraphicsObject*>(ptr)->mapToItem(static_cast<QGraphicsWidget*>(item), *static_cast<QPointF*>(point)); new QPointF(tmpValue.x(), tmpValue.y()); });
		} else {
			return ({ QPointF tmpValue = static_cast<QGraphicsObject*>(ptr)->mapToItem(static_cast<QGraphicsItem*>(item), *static_cast<QPointF*>(point)); new QPointF(tmpValue.x(), tmpValue.y()); });
		}
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return ({ QPointF tmpValue = static_cast<QGraphicsWidget*>(ptr)->mapToItem(static_cast<QGraphicsObject*>(item), *static_cast<QPointF*>(point)); new QPointF(tmpValue.x(), tmpValue.y()); });
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return ({ QPointF tmpValue = static_cast<QGraphicsWidget*>(ptr)->mapToItem(static_cast<QGraphicsWidget*>(item), *static_cast<QPointF*>(point)); new QPointF(tmpValue.x(), tmpValue.y()); });
		} else {
			return ({ QPointF tmpValue = static_cast<QGraphicsWidget*>(ptr)->mapToItem(static_cast<QGraphicsItem*>(item), *static_cast<QPointF*>(point)); new QPointF(tmpValue.x(), tmpValue.y()); });
		}
	} else {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return ({ QPointF tmpValue = static_cast<QGraphicsItem*>(ptr)->mapToItem(static_cast<QGraphicsObject*>(item), *static_cast<QPointF*>(point)); new QPointF(tmpValue.x(), tmpValue.y()); });
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return ({ QPointF tmpValue = static_cast<QGraphicsItem*>(ptr)->mapToItem(static_cast<QGraphicsWidget*>(item), *static_cast<QPointF*>(point)); new QPointF(tmpValue.x(), tmpValue.y()); });
		} else {
			return ({ QPointF tmpValue = static_cast<QGraphicsItem*>(ptr)->mapToItem(static_cast<QGraphicsItem*>(item), *static_cast<QPointF*>(point)); new QPointF(tmpValue.x(), tmpValue.y()); });
		}
	}
}

void* QGraphicsItem_MapToItem5(void* ptr, void* item, double x, double y)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return ({ QPointF tmpValue = static_cast<QGraphicsObject*>(ptr)->mapToItem(static_cast<QGraphicsObject*>(item), x, y); new QPointF(tmpValue.x(), tmpValue.y()); });
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return ({ QPointF tmpValue = static_cast<QGraphicsObject*>(ptr)->mapToItem(static_cast<QGraphicsWidget*>(item), x, y); new QPointF(tmpValue.x(), tmpValue.y()); });
		} else {
			return ({ QPointF tmpValue = static_cast<QGraphicsObject*>(ptr)->mapToItem(static_cast<QGraphicsItem*>(item), x, y); new QPointF(tmpValue.x(), tmpValue.y()); });
		}
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return ({ QPointF tmpValue = static_cast<QGraphicsWidget*>(ptr)->mapToItem(static_cast<QGraphicsObject*>(item), x, y); new QPointF(tmpValue.x(), tmpValue.y()); });
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return ({ QPointF tmpValue = static_cast<QGraphicsWidget*>(ptr)->mapToItem(static_cast<QGraphicsWidget*>(item), x, y); new QPointF(tmpValue.x(), tmpValue.y()); });
		} else {
			return ({ QPointF tmpValue = static_cast<QGraphicsWidget*>(ptr)->mapToItem(static_cast<QGraphicsItem*>(item), x, y); new QPointF(tmpValue.x(), tmpValue.y()); });
		}
	} else {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return ({ QPointF tmpValue = static_cast<QGraphicsItem*>(ptr)->mapToItem(static_cast<QGraphicsObject*>(item), x, y); new QPointF(tmpValue.x(), tmpValue.y()); });
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return ({ QPointF tmpValue = static_cast<QGraphicsItem*>(ptr)->mapToItem(static_cast<QGraphicsWidget*>(item), x, y); new QPointF(tmpValue.x(), tmpValue.y()); });
		} else {
			return ({ QPointF tmpValue = static_cast<QGraphicsItem*>(ptr)->mapToItem(static_cast<QGraphicsItem*>(item), x, y); new QPointF(tmpValue.x(), tmpValue.y()); });
		}
	}
}

void* QGraphicsItem_MapToParent(void* ptr, void* point)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return ({ QPointF tmpValue = static_cast<QGraphicsObject*>(ptr)->mapToParent(*static_cast<QPointF*>(point)); new QPointF(tmpValue.x(), tmpValue.y()); });
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({ QPointF tmpValue = static_cast<QGraphicsWidget*>(ptr)->mapToParent(*static_cast<QPointF*>(point)); new QPointF(tmpValue.x(), tmpValue.y()); });
	} else {
		return ({ QPointF tmpValue = static_cast<QGraphicsItem*>(ptr)->mapToParent(*static_cast<QPointF*>(point)); new QPointF(tmpValue.x(), tmpValue.y()); });
	}
}

void* QGraphicsItem_MapToParent5(void* ptr, double x, double y)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return ({ QPointF tmpValue = static_cast<QGraphicsObject*>(ptr)->mapToParent(x, y); new QPointF(tmpValue.x(), tmpValue.y()); });
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({ QPointF tmpValue = static_cast<QGraphicsWidget*>(ptr)->mapToParent(x, y); new QPointF(tmpValue.x(), tmpValue.y()); });
	} else {
		return ({ QPointF tmpValue = static_cast<QGraphicsItem*>(ptr)->mapToParent(x, y); new QPointF(tmpValue.x(), tmpValue.y()); });
	}
}

void* QGraphicsItem_MapToScene(void* ptr, void* point)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return ({ QPointF tmpValue = static_cast<QGraphicsObject*>(ptr)->mapToScene(*static_cast<QPointF*>(point)); new QPointF(tmpValue.x(), tmpValue.y()); });
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({ QPointF tmpValue = static_cast<QGraphicsWidget*>(ptr)->mapToScene(*static_cast<QPointF*>(point)); new QPointF(tmpValue.x(), tmpValue.y()); });
	} else {
		return ({ QPointF tmpValue = static_cast<QGraphicsItem*>(ptr)->mapToScene(*static_cast<QPointF*>(point)); new QPointF(tmpValue.x(), tmpValue.y()); });
	}
}

void* QGraphicsItem_MapToScene5(void* ptr, double x, double y)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return ({ QPointF tmpValue = static_cast<QGraphicsObject*>(ptr)->mapToScene(x, y); new QPointF(tmpValue.x(), tmpValue.y()); });
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({ QPointF tmpValue = static_cast<QGraphicsWidget*>(ptr)->mapToScene(x, y); new QPointF(tmpValue.x(), tmpValue.y()); });
	} else {
		return ({ QPointF tmpValue = static_cast<QGraphicsItem*>(ptr)->mapToScene(x, y); new QPointF(tmpValue.x(), tmpValue.y()); });
	}
}

void* QGraphicsItem_Pos(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return ({ QPointF tmpValue = static_cast<QGraphicsObject*>(ptr)->pos(); new QPointF(tmpValue.x(), tmpValue.y()); });
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({ QPointF tmpValue = static_cast<QGraphicsWidget*>(ptr)->pos(); new QPointF(tmpValue.x(), tmpValue.y()); });
	} else {
		return ({ QPointF tmpValue = static_cast<QGraphicsItem*>(ptr)->pos(); new QPointF(tmpValue.x(), tmpValue.y()); });
	}
}

void* QGraphicsItem_ScenePos(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return ({ QPointF tmpValue = static_cast<QGraphicsObject*>(ptr)->scenePos(); new QPointF(tmpValue.x(), tmpValue.y()); });
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({ QPointF tmpValue = static_cast<QGraphicsWidget*>(ptr)->scenePos(); new QPointF(tmpValue.x(), tmpValue.y()); });
	} else {
		return ({ QPointF tmpValue = static_cast<QGraphicsItem*>(ptr)->scenePos(); new QPointF(tmpValue.x(), tmpValue.y()); });
	}
}

void* QGraphicsItem_TransformOriginPoint(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return ({ QPointF tmpValue = static_cast<QGraphicsObject*>(ptr)->transformOriginPoint(); new QPointF(tmpValue.x(), tmpValue.y()); });
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({ QPointF tmpValue = static_cast<QGraphicsWidget*>(ptr)->transformOriginPoint(); new QPointF(tmpValue.x(), tmpValue.y()); });
	} else {
		return ({ QPointF tmpValue = static_cast<QGraphicsItem*>(ptr)->transformOriginPoint(); new QPointF(tmpValue.x(), tmpValue.y()); });
	}
}

void* QGraphicsItem_MapFromItem3(void* ptr, void* item, void* polygon)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return new QPolygonF(static_cast<QGraphicsObject*>(ptr)->mapFromItem(static_cast<QGraphicsObject*>(item), *static_cast<QPolygonF*>(polygon)));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return new QPolygonF(static_cast<QGraphicsObject*>(ptr)->mapFromItem(static_cast<QGraphicsWidget*>(item), *static_cast<QPolygonF*>(polygon)));
		} else {
			return new QPolygonF(static_cast<QGraphicsObject*>(ptr)->mapFromItem(static_cast<QGraphicsItem*>(item), *static_cast<QPolygonF*>(polygon)));
		}
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return new QPolygonF(static_cast<QGraphicsWidget*>(ptr)->mapFromItem(static_cast<QGraphicsObject*>(item), *static_cast<QPolygonF*>(polygon)));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return new QPolygonF(static_cast<QGraphicsWidget*>(ptr)->mapFromItem(static_cast<QGraphicsWidget*>(item), *static_cast<QPolygonF*>(polygon)));
		} else {
			return new QPolygonF(static_cast<QGraphicsWidget*>(ptr)->mapFromItem(static_cast<QGraphicsItem*>(item), *static_cast<QPolygonF*>(polygon)));
		}
	} else {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return new QPolygonF(static_cast<QGraphicsItem*>(ptr)->mapFromItem(static_cast<QGraphicsObject*>(item), *static_cast<QPolygonF*>(polygon)));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return new QPolygonF(static_cast<QGraphicsItem*>(ptr)->mapFromItem(static_cast<QGraphicsWidget*>(item), *static_cast<QPolygonF*>(polygon)));
		} else {
			return new QPolygonF(static_cast<QGraphicsItem*>(ptr)->mapFromItem(static_cast<QGraphicsItem*>(item), *static_cast<QPolygonF*>(polygon)));
		}
	}
}

void* QGraphicsItem_MapFromItem2(void* ptr, void* item, void* rect)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return new QPolygonF(static_cast<QGraphicsObject*>(ptr)->mapFromItem(static_cast<QGraphicsObject*>(item), *static_cast<QRectF*>(rect)));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return new QPolygonF(static_cast<QGraphicsObject*>(ptr)->mapFromItem(static_cast<QGraphicsWidget*>(item), *static_cast<QRectF*>(rect)));
		} else {
			return new QPolygonF(static_cast<QGraphicsObject*>(ptr)->mapFromItem(static_cast<QGraphicsItem*>(item), *static_cast<QRectF*>(rect)));
		}
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return new QPolygonF(static_cast<QGraphicsWidget*>(ptr)->mapFromItem(static_cast<QGraphicsObject*>(item), *static_cast<QRectF*>(rect)));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return new QPolygonF(static_cast<QGraphicsWidget*>(ptr)->mapFromItem(static_cast<QGraphicsWidget*>(item), *static_cast<QRectF*>(rect)));
		} else {
			return new QPolygonF(static_cast<QGraphicsWidget*>(ptr)->mapFromItem(static_cast<QGraphicsItem*>(item), *static_cast<QRectF*>(rect)));
		}
	} else {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return new QPolygonF(static_cast<QGraphicsItem*>(ptr)->mapFromItem(static_cast<QGraphicsObject*>(item), *static_cast<QRectF*>(rect)));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return new QPolygonF(static_cast<QGraphicsItem*>(ptr)->mapFromItem(static_cast<QGraphicsWidget*>(item), *static_cast<QRectF*>(rect)));
		} else {
			return new QPolygonF(static_cast<QGraphicsItem*>(ptr)->mapFromItem(static_cast<QGraphicsItem*>(item), *static_cast<QRectF*>(rect)));
		}
	}
}

void* QGraphicsItem_MapFromItem6(void* ptr, void* item, double x, double y, double w, double h)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return new QPolygonF(static_cast<QGraphicsObject*>(ptr)->mapFromItem(static_cast<QGraphicsObject*>(item), x, y, w, h));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return new QPolygonF(static_cast<QGraphicsObject*>(ptr)->mapFromItem(static_cast<QGraphicsWidget*>(item), x, y, w, h));
		} else {
			return new QPolygonF(static_cast<QGraphicsObject*>(ptr)->mapFromItem(static_cast<QGraphicsItem*>(item), x, y, w, h));
		}
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return new QPolygonF(static_cast<QGraphicsWidget*>(ptr)->mapFromItem(static_cast<QGraphicsObject*>(item), x, y, w, h));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return new QPolygonF(static_cast<QGraphicsWidget*>(ptr)->mapFromItem(static_cast<QGraphicsWidget*>(item), x, y, w, h));
		} else {
			return new QPolygonF(static_cast<QGraphicsWidget*>(ptr)->mapFromItem(static_cast<QGraphicsItem*>(item), x, y, w, h));
		}
	} else {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return new QPolygonF(static_cast<QGraphicsItem*>(ptr)->mapFromItem(static_cast<QGraphicsObject*>(item), x, y, w, h));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return new QPolygonF(static_cast<QGraphicsItem*>(ptr)->mapFromItem(static_cast<QGraphicsWidget*>(item), x, y, w, h));
		} else {
			return new QPolygonF(static_cast<QGraphicsItem*>(ptr)->mapFromItem(static_cast<QGraphicsItem*>(item), x, y, w, h));
		}
	}
}

void* QGraphicsItem_MapFromParent3(void* ptr, void* polygon)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return new QPolygonF(static_cast<QGraphicsObject*>(ptr)->mapFromParent(*static_cast<QPolygonF*>(polygon)));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return new QPolygonF(static_cast<QGraphicsWidget*>(ptr)->mapFromParent(*static_cast<QPolygonF*>(polygon)));
	} else {
		return new QPolygonF(static_cast<QGraphicsItem*>(ptr)->mapFromParent(*static_cast<QPolygonF*>(polygon)));
	}
}

void* QGraphicsItem_MapFromParent2(void* ptr, void* rect)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return new QPolygonF(static_cast<QGraphicsObject*>(ptr)->mapFromParent(*static_cast<QRectF*>(rect)));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return new QPolygonF(static_cast<QGraphicsWidget*>(ptr)->mapFromParent(*static_cast<QRectF*>(rect)));
	} else {
		return new QPolygonF(static_cast<QGraphicsItem*>(ptr)->mapFromParent(*static_cast<QRectF*>(rect)));
	}
}

void* QGraphicsItem_MapFromParent6(void* ptr, double x, double y, double w, double h)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return new QPolygonF(static_cast<QGraphicsObject*>(ptr)->mapFromParent(x, y, w, h));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return new QPolygonF(static_cast<QGraphicsWidget*>(ptr)->mapFromParent(x, y, w, h));
	} else {
		return new QPolygonF(static_cast<QGraphicsItem*>(ptr)->mapFromParent(x, y, w, h));
	}
}

void* QGraphicsItem_MapFromScene3(void* ptr, void* polygon)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return new QPolygonF(static_cast<QGraphicsObject*>(ptr)->mapFromScene(*static_cast<QPolygonF*>(polygon)));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return new QPolygonF(static_cast<QGraphicsWidget*>(ptr)->mapFromScene(*static_cast<QPolygonF*>(polygon)));
	} else {
		return new QPolygonF(static_cast<QGraphicsItem*>(ptr)->mapFromScene(*static_cast<QPolygonF*>(polygon)));
	}
}

void* QGraphicsItem_MapFromScene2(void* ptr, void* rect)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return new QPolygonF(static_cast<QGraphicsObject*>(ptr)->mapFromScene(*static_cast<QRectF*>(rect)));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return new QPolygonF(static_cast<QGraphicsWidget*>(ptr)->mapFromScene(*static_cast<QRectF*>(rect)));
	} else {
		return new QPolygonF(static_cast<QGraphicsItem*>(ptr)->mapFromScene(*static_cast<QRectF*>(rect)));
	}
}

void* QGraphicsItem_MapFromScene6(void* ptr, double x, double y, double w, double h)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return new QPolygonF(static_cast<QGraphicsObject*>(ptr)->mapFromScene(x, y, w, h));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return new QPolygonF(static_cast<QGraphicsWidget*>(ptr)->mapFromScene(x, y, w, h));
	} else {
		return new QPolygonF(static_cast<QGraphicsItem*>(ptr)->mapFromScene(x, y, w, h));
	}
}

void* QGraphicsItem_MapToItem3(void* ptr, void* item, void* polygon)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return new QPolygonF(static_cast<QGraphicsObject*>(ptr)->mapToItem(static_cast<QGraphicsObject*>(item), *static_cast<QPolygonF*>(polygon)));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return new QPolygonF(static_cast<QGraphicsObject*>(ptr)->mapToItem(static_cast<QGraphicsWidget*>(item), *static_cast<QPolygonF*>(polygon)));
		} else {
			return new QPolygonF(static_cast<QGraphicsObject*>(ptr)->mapToItem(static_cast<QGraphicsItem*>(item), *static_cast<QPolygonF*>(polygon)));
		}
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return new QPolygonF(static_cast<QGraphicsWidget*>(ptr)->mapToItem(static_cast<QGraphicsObject*>(item), *static_cast<QPolygonF*>(polygon)));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return new QPolygonF(static_cast<QGraphicsWidget*>(ptr)->mapToItem(static_cast<QGraphicsWidget*>(item), *static_cast<QPolygonF*>(polygon)));
		} else {
			return new QPolygonF(static_cast<QGraphicsWidget*>(ptr)->mapToItem(static_cast<QGraphicsItem*>(item), *static_cast<QPolygonF*>(polygon)));
		}
	} else {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return new QPolygonF(static_cast<QGraphicsItem*>(ptr)->mapToItem(static_cast<QGraphicsObject*>(item), *static_cast<QPolygonF*>(polygon)));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return new QPolygonF(static_cast<QGraphicsItem*>(ptr)->mapToItem(static_cast<QGraphicsWidget*>(item), *static_cast<QPolygonF*>(polygon)));
		} else {
			return new QPolygonF(static_cast<QGraphicsItem*>(ptr)->mapToItem(static_cast<QGraphicsItem*>(item), *static_cast<QPolygonF*>(polygon)));
		}
	}
}

void* QGraphicsItem_MapToItem2(void* ptr, void* item, void* rect)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return new QPolygonF(static_cast<QGraphicsObject*>(ptr)->mapToItem(static_cast<QGraphicsObject*>(item), *static_cast<QRectF*>(rect)));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return new QPolygonF(static_cast<QGraphicsObject*>(ptr)->mapToItem(static_cast<QGraphicsWidget*>(item), *static_cast<QRectF*>(rect)));
		} else {
			return new QPolygonF(static_cast<QGraphicsObject*>(ptr)->mapToItem(static_cast<QGraphicsItem*>(item), *static_cast<QRectF*>(rect)));
		}
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return new QPolygonF(static_cast<QGraphicsWidget*>(ptr)->mapToItem(static_cast<QGraphicsObject*>(item), *static_cast<QRectF*>(rect)));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return new QPolygonF(static_cast<QGraphicsWidget*>(ptr)->mapToItem(static_cast<QGraphicsWidget*>(item), *static_cast<QRectF*>(rect)));
		} else {
			return new QPolygonF(static_cast<QGraphicsWidget*>(ptr)->mapToItem(static_cast<QGraphicsItem*>(item), *static_cast<QRectF*>(rect)));
		}
	} else {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return new QPolygonF(static_cast<QGraphicsItem*>(ptr)->mapToItem(static_cast<QGraphicsObject*>(item), *static_cast<QRectF*>(rect)));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return new QPolygonF(static_cast<QGraphicsItem*>(ptr)->mapToItem(static_cast<QGraphicsWidget*>(item), *static_cast<QRectF*>(rect)));
		} else {
			return new QPolygonF(static_cast<QGraphicsItem*>(ptr)->mapToItem(static_cast<QGraphicsItem*>(item), *static_cast<QRectF*>(rect)));
		}
	}
}

void* QGraphicsItem_MapToItem6(void* ptr, void* item, double x, double y, double w, double h)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return new QPolygonF(static_cast<QGraphicsObject*>(ptr)->mapToItem(static_cast<QGraphicsObject*>(item), x, y, w, h));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return new QPolygonF(static_cast<QGraphicsObject*>(ptr)->mapToItem(static_cast<QGraphicsWidget*>(item), x, y, w, h));
		} else {
			return new QPolygonF(static_cast<QGraphicsObject*>(ptr)->mapToItem(static_cast<QGraphicsItem*>(item), x, y, w, h));
		}
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return new QPolygonF(static_cast<QGraphicsWidget*>(ptr)->mapToItem(static_cast<QGraphicsObject*>(item), x, y, w, h));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return new QPolygonF(static_cast<QGraphicsWidget*>(ptr)->mapToItem(static_cast<QGraphicsWidget*>(item), x, y, w, h));
		} else {
			return new QPolygonF(static_cast<QGraphicsWidget*>(ptr)->mapToItem(static_cast<QGraphicsItem*>(item), x, y, w, h));
		}
	} else {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return new QPolygonF(static_cast<QGraphicsItem*>(ptr)->mapToItem(static_cast<QGraphicsObject*>(item), x, y, w, h));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return new QPolygonF(static_cast<QGraphicsItem*>(ptr)->mapToItem(static_cast<QGraphicsWidget*>(item), x, y, w, h));
		} else {
			return new QPolygonF(static_cast<QGraphicsItem*>(ptr)->mapToItem(static_cast<QGraphicsItem*>(item), x, y, w, h));
		}
	}
}

void* QGraphicsItem_MapToParent3(void* ptr, void* polygon)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return new QPolygonF(static_cast<QGraphicsObject*>(ptr)->mapToParent(*static_cast<QPolygonF*>(polygon)));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return new QPolygonF(static_cast<QGraphicsWidget*>(ptr)->mapToParent(*static_cast<QPolygonF*>(polygon)));
	} else {
		return new QPolygonF(static_cast<QGraphicsItem*>(ptr)->mapToParent(*static_cast<QPolygonF*>(polygon)));
	}
}

void* QGraphicsItem_MapToParent2(void* ptr, void* rect)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return new QPolygonF(static_cast<QGraphicsObject*>(ptr)->mapToParent(*static_cast<QRectF*>(rect)));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return new QPolygonF(static_cast<QGraphicsWidget*>(ptr)->mapToParent(*static_cast<QRectF*>(rect)));
	} else {
		return new QPolygonF(static_cast<QGraphicsItem*>(ptr)->mapToParent(*static_cast<QRectF*>(rect)));
	}
}

void* QGraphicsItem_MapToParent6(void* ptr, double x, double y, double w, double h)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return new QPolygonF(static_cast<QGraphicsObject*>(ptr)->mapToParent(x, y, w, h));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return new QPolygonF(static_cast<QGraphicsWidget*>(ptr)->mapToParent(x, y, w, h));
	} else {
		return new QPolygonF(static_cast<QGraphicsItem*>(ptr)->mapToParent(x, y, w, h));
	}
}

void* QGraphicsItem_MapToScene3(void* ptr, void* polygon)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return new QPolygonF(static_cast<QGraphicsObject*>(ptr)->mapToScene(*static_cast<QPolygonF*>(polygon)));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return new QPolygonF(static_cast<QGraphicsWidget*>(ptr)->mapToScene(*static_cast<QPolygonF*>(polygon)));
	} else {
		return new QPolygonF(static_cast<QGraphicsItem*>(ptr)->mapToScene(*static_cast<QPolygonF*>(polygon)));
	}
}

void* QGraphicsItem_MapToScene2(void* ptr, void* rect)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return new QPolygonF(static_cast<QGraphicsObject*>(ptr)->mapToScene(*static_cast<QRectF*>(rect)));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return new QPolygonF(static_cast<QGraphicsWidget*>(ptr)->mapToScene(*static_cast<QRectF*>(rect)));
	} else {
		return new QPolygonF(static_cast<QGraphicsItem*>(ptr)->mapToScene(*static_cast<QRectF*>(rect)));
	}
}

void* QGraphicsItem_MapToScene6(void* ptr, double x, double y, double w, double h)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return new QPolygonF(static_cast<QGraphicsObject*>(ptr)->mapToScene(x, y, w, h));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return new QPolygonF(static_cast<QGraphicsWidget*>(ptr)->mapToScene(x, y, w, h));
	} else {
		return new QPolygonF(static_cast<QGraphicsItem*>(ptr)->mapToScene(x, y, w, h));
	}
}

void* QGraphicsItem_BoundingRect(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return ({ QRectF tmpValue = static_cast<QGraphicsObject*>(ptr)->boundingRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({ QRectF tmpValue = static_cast<QGraphicsWidget*>(ptr)->boundingRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	} else {
		return ({ QRectF tmpValue = static_cast<QGraphicsItem*>(ptr)->boundingRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	}
}

void* QGraphicsItem_ChildrenBoundingRect(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return ({ QRectF tmpValue = static_cast<QGraphicsObject*>(ptr)->childrenBoundingRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({ QRectF tmpValue = static_cast<QGraphicsWidget*>(ptr)->childrenBoundingRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	} else {
		return ({ QRectF tmpValue = static_cast<QGraphicsItem*>(ptr)->childrenBoundingRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	}
}

void* QGraphicsItem_MapRectFromItem(void* ptr, void* item, void* rect)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return ({ QRectF tmpValue = static_cast<QGraphicsObject*>(ptr)->mapRectFromItem(static_cast<QGraphicsObject*>(item), *static_cast<QRectF*>(rect)); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return ({ QRectF tmpValue = static_cast<QGraphicsObject*>(ptr)->mapRectFromItem(static_cast<QGraphicsWidget*>(item), *static_cast<QRectF*>(rect)); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
		} else {
			return ({ QRectF tmpValue = static_cast<QGraphicsObject*>(ptr)->mapRectFromItem(static_cast<QGraphicsItem*>(item), *static_cast<QRectF*>(rect)); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
		}
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return ({ QRectF tmpValue = static_cast<QGraphicsWidget*>(ptr)->mapRectFromItem(static_cast<QGraphicsObject*>(item), *static_cast<QRectF*>(rect)); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return ({ QRectF tmpValue = static_cast<QGraphicsWidget*>(ptr)->mapRectFromItem(static_cast<QGraphicsWidget*>(item), *static_cast<QRectF*>(rect)); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
		} else {
			return ({ QRectF tmpValue = static_cast<QGraphicsWidget*>(ptr)->mapRectFromItem(static_cast<QGraphicsItem*>(item), *static_cast<QRectF*>(rect)); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
		}
	} else {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return ({ QRectF tmpValue = static_cast<QGraphicsItem*>(ptr)->mapRectFromItem(static_cast<QGraphicsObject*>(item), *static_cast<QRectF*>(rect)); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return ({ QRectF tmpValue = static_cast<QGraphicsItem*>(ptr)->mapRectFromItem(static_cast<QGraphicsWidget*>(item), *static_cast<QRectF*>(rect)); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
		} else {
			return ({ QRectF tmpValue = static_cast<QGraphicsItem*>(ptr)->mapRectFromItem(static_cast<QGraphicsItem*>(item), *static_cast<QRectF*>(rect)); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
		}
	}
}

void* QGraphicsItem_MapRectFromItem2(void* ptr, void* item, double x, double y, double w, double h)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return ({ QRectF tmpValue = static_cast<QGraphicsObject*>(ptr)->mapRectFromItem(static_cast<QGraphicsObject*>(item), x, y, w, h); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return ({ QRectF tmpValue = static_cast<QGraphicsObject*>(ptr)->mapRectFromItem(static_cast<QGraphicsWidget*>(item), x, y, w, h); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
		} else {
			return ({ QRectF tmpValue = static_cast<QGraphicsObject*>(ptr)->mapRectFromItem(static_cast<QGraphicsItem*>(item), x, y, w, h); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
		}
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return ({ QRectF tmpValue = static_cast<QGraphicsWidget*>(ptr)->mapRectFromItem(static_cast<QGraphicsObject*>(item), x, y, w, h); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return ({ QRectF tmpValue = static_cast<QGraphicsWidget*>(ptr)->mapRectFromItem(static_cast<QGraphicsWidget*>(item), x, y, w, h); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
		} else {
			return ({ QRectF tmpValue = static_cast<QGraphicsWidget*>(ptr)->mapRectFromItem(static_cast<QGraphicsItem*>(item), x, y, w, h); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
		}
	} else {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return ({ QRectF tmpValue = static_cast<QGraphicsItem*>(ptr)->mapRectFromItem(static_cast<QGraphicsObject*>(item), x, y, w, h); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return ({ QRectF tmpValue = static_cast<QGraphicsItem*>(ptr)->mapRectFromItem(static_cast<QGraphicsWidget*>(item), x, y, w, h); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
		} else {
			return ({ QRectF tmpValue = static_cast<QGraphicsItem*>(ptr)->mapRectFromItem(static_cast<QGraphicsItem*>(item), x, y, w, h); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
		}
	}
}

void* QGraphicsItem_MapRectFromParent(void* ptr, void* rect)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return ({ QRectF tmpValue = static_cast<QGraphicsObject*>(ptr)->mapRectFromParent(*static_cast<QRectF*>(rect)); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({ QRectF tmpValue = static_cast<QGraphicsWidget*>(ptr)->mapRectFromParent(*static_cast<QRectF*>(rect)); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	} else {
		return ({ QRectF tmpValue = static_cast<QGraphicsItem*>(ptr)->mapRectFromParent(*static_cast<QRectF*>(rect)); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	}
}

void* QGraphicsItem_MapRectFromParent2(void* ptr, double x, double y, double w, double h)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return ({ QRectF tmpValue = static_cast<QGraphicsObject*>(ptr)->mapRectFromParent(x, y, w, h); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({ QRectF tmpValue = static_cast<QGraphicsWidget*>(ptr)->mapRectFromParent(x, y, w, h); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	} else {
		return ({ QRectF tmpValue = static_cast<QGraphicsItem*>(ptr)->mapRectFromParent(x, y, w, h); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	}
}

void* QGraphicsItem_MapRectFromScene(void* ptr, void* rect)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return ({ QRectF tmpValue = static_cast<QGraphicsObject*>(ptr)->mapRectFromScene(*static_cast<QRectF*>(rect)); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({ QRectF tmpValue = static_cast<QGraphicsWidget*>(ptr)->mapRectFromScene(*static_cast<QRectF*>(rect)); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	} else {
		return ({ QRectF tmpValue = static_cast<QGraphicsItem*>(ptr)->mapRectFromScene(*static_cast<QRectF*>(rect)); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	}
}

void* QGraphicsItem_MapRectFromScene2(void* ptr, double x, double y, double w, double h)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return ({ QRectF tmpValue = static_cast<QGraphicsObject*>(ptr)->mapRectFromScene(x, y, w, h); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({ QRectF tmpValue = static_cast<QGraphicsWidget*>(ptr)->mapRectFromScene(x, y, w, h); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	} else {
		return ({ QRectF tmpValue = static_cast<QGraphicsItem*>(ptr)->mapRectFromScene(x, y, w, h); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	}
}

void* QGraphicsItem_MapRectToItem(void* ptr, void* item, void* rect)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return ({ QRectF tmpValue = static_cast<QGraphicsObject*>(ptr)->mapRectToItem(static_cast<QGraphicsObject*>(item), *static_cast<QRectF*>(rect)); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return ({ QRectF tmpValue = static_cast<QGraphicsObject*>(ptr)->mapRectToItem(static_cast<QGraphicsWidget*>(item), *static_cast<QRectF*>(rect)); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
		} else {
			return ({ QRectF tmpValue = static_cast<QGraphicsObject*>(ptr)->mapRectToItem(static_cast<QGraphicsItem*>(item), *static_cast<QRectF*>(rect)); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
		}
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return ({ QRectF tmpValue = static_cast<QGraphicsWidget*>(ptr)->mapRectToItem(static_cast<QGraphicsObject*>(item), *static_cast<QRectF*>(rect)); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return ({ QRectF tmpValue = static_cast<QGraphicsWidget*>(ptr)->mapRectToItem(static_cast<QGraphicsWidget*>(item), *static_cast<QRectF*>(rect)); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
		} else {
			return ({ QRectF tmpValue = static_cast<QGraphicsWidget*>(ptr)->mapRectToItem(static_cast<QGraphicsItem*>(item), *static_cast<QRectF*>(rect)); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
		}
	} else {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return ({ QRectF tmpValue = static_cast<QGraphicsItem*>(ptr)->mapRectToItem(static_cast<QGraphicsObject*>(item), *static_cast<QRectF*>(rect)); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return ({ QRectF tmpValue = static_cast<QGraphicsItem*>(ptr)->mapRectToItem(static_cast<QGraphicsWidget*>(item), *static_cast<QRectF*>(rect)); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
		} else {
			return ({ QRectF tmpValue = static_cast<QGraphicsItem*>(ptr)->mapRectToItem(static_cast<QGraphicsItem*>(item), *static_cast<QRectF*>(rect)); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
		}
	}
}

void* QGraphicsItem_MapRectToItem2(void* ptr, void* item, double x, double y, double w, double h)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return ({ QRectF tmpValue = static_cast<QGraphicsObject*>(ptr)->mapRectToItem(static_cast<QGraphicsObject*>(item), x, y, w, h); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return ({ QRectF tmpValue = static_cast<QGraphicsObject*>(ptr)->mapRectToItem(static_cast<QGraphicsWidget*>(item), x, y, w, h); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
		} else {
			return ({ QRectF tmpValue = static_cast<QGraphicsObject*>(ptr)->mapRectToItem(static_cast<QGraphicsItem*>(item), x, y, w, h); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
		}
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return ({ QRectF tmpValue = static_cast<QGraphicsWidget*>(ptr)->mapRectToItem(static_cast<QGraphicsObject*>(item), x, y, w, h); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return ({ QRectF tmpValue = static_cast<QGraphicsWidget*>(ptr)->mapRectToItem(static_cast<QGraphicsWidget*>(item), x, y, w, h); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
		} else {
			return ({ QRectF tmpValue = static_cast<QGraphicsWidget*>(ptr)->mapRectToItem(static_cast<QGraphicsItem*>(item), x, y, w, h); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
		}
	} else {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return ({ QRectF tmpValue = static_cast<QGraphicsItem*>(ptr)->mapRectToItem(static_cast<QGraphicsObject*>(item), x, y, w, h); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return ({ QRectF tmpValue = static_cast<QGraphicsItem*>(ptr)->mapRectToItem(static_cast<QGraphicsWidget*>(item), x, y, w, h); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
		} else {
			return ({ QRectF tmpValue = static_cast<QGraphicsItem*>(ptr)->mapRectToItem(static_cast<QGraphicsItem*>(item), x, y, w, h); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
		}
	}
}

void* QGraphicsItem_MapRectToParent(void* ptr, void* rect)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return ({ QRectF tmpValue = static_cast<QGraphicsObject*>(ptr)->mapRectToParent(*static_cast<QRectF*>(rect)); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({ QRectF tmpValue = static_cast<QGraphicsWidget*>(ptr)->mapRectToParent(*static_cast<QRectF*>(rect)); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	} else {
		return ({ QRectF tmpValue = static_cast<QGraphicsItem*>(ptr)->mapRectToParent(*static_cast<QRectF*>(rect)); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	}
}

void* QGraphicsItem_MapRectToParent2(void* ptr, double x, double y, double w, double h)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return ({ QRectF tmpValue = static_cast<QGraphicsObject*>(ptr)->mapRectToParent(x, y, w, h); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({ QRectF tmpValue = static_cast<QGraphicsWidget*>(ptr)->mapRectToParent(x, y, w, h); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	} else {
		return ({ QRectF tmpValue = static_cast<QGraphicsItem*>(ptr)->mapRectToParent(x, y, w, h); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	}
}

void* QGraphicsItem_MapRectToScene(void* ptr, void* rect)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return ({ QRectF tmpValue = static_cast<QGraphicsObject*>(ptr)->mapRectToScene(*static_cast<QRectF*>(rect)); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({ QRectF tmpValue = static_cast<QGraphicsWidget*>(ptr)->mapRectToScene(*static_cast<QRectF*>(rect)); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	} else {
		return ({ QRectF tmpValue = static_cast<QGraphicsItem*>(ptr)->mapRectToScene(*static_cast<QRectF*>(rect)); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	}
}

void* QGraphicsItem_MapRectToScene2(void* ptr, double x, double y, double w, double h)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return ({ QRectF tmpValue = static_cast<QGraphicsObject*>(ptr)->mapRectToScene(x, y, w, h); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({ QRectF tmpValue = static_cast<QGraphicsWidget*>(ptr)->mapRectToScene(x, y, w, h); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	} else {
		return ({ QRectF tmpValue = static_cast<QGraphicsItem*>(ptr)->mapRectToScene(x, y, w, h); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	}
}

void* QGraphicsItem_SceneBoundingRect(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return ({ QRectF tmpValue = static_cast<QGraphicsObject*>(ptr)->sceneBoundingRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({ QRectF tmpValue = static_cast<QGraphicsWidget*>(ptr)->sceneBoundingRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	} else {
		return ({ QRectF tmpValue = static_cast<QGraphicsItem*>(ptr)->sceneBoundingRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	}
}

void* QGraphicsItem_BoundingRegion(void* ptr, void* itemToDeviceTransform)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return new QRegion(static_cast<QGraphicsObject*>(ptr)->boundingRegion(*static_cast<QTransform*>(itemToDeviceTransform)));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return new QRegion(static_cast<QGraphicsWidget*>(ptr)->boundingRegion(*static_cast<QTransform*>(itemToDeviceTransform)));
	} else {
		return new QRegion(static_cast<QGraphicsItem*>(ptr)->boundingRegion(*static_cast<QTransform*>(itemToDeviceTransform)));
	}
}

struct QtWidgets_PackedString QGraphicsItem_ToolTip(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return ({ QByteArray t7daf65 = static_cast<QGraphicsObject*>(ptr)->toolTip().toUtf8(); QtWidgets_PackedString { const_cast<char*>(t7daf65.prepend("WHITESPACE").constData()+10), t7daf65.size()-10 }; });
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({ QByteArray t7daf65 = static_cast<QGraphicsWidget*>(ptr)->toolTip().toUtf8(); QtWidgets_PackedString { const_cast<char*>(t7daf65.prepend("WHITESPACE").constData()+10), t7daf65.size()-10 }; });
	} else {
		return ({ QByteArray t7daf65 = static_cast<QGraphicsItem*>(ptr)->toolTip().toUtf8(); QtWidgets_PackedString { const_cast<char*>(t7daf65.prepend("WHITESPACE").constData()+10), t7daf65.size()-10 }; });
	}
}

void* QGraphicsItem_DeviceTransform(void* ptr, void* viewportTransform)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return new QTransform(static_cast<QGraphicsObject*>(ptr)->deviceTransform(*static_cast<QTransform*>(viewportTransform)));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return new QTransform(static_cast<QGraphicsWidget*>(ptr)->deviceTransform(*static_cast<QTransform*>(viewportTransform)));
	} else {
		return new QTransform(static_cast<QGraphicsItem*>(ptr)->deviceTransform(*static_cast<QTransform*>(viewportTransform)));
	}
}

void* QGraphicsItem_ItemTransform(void* ptr, void* other, char* ok)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(other))) {
			return new QTransform(static_cast<QGraphicsObject*>(ptr)->itemTransform(static_cast<QGraphicsObject*>(other), reinterpret_cast<bool*>(ok)));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(other))) {
			return new QTransform(static_cast<QGraphicsObject*>(ptr)->itemTransform(static_cast<QGraphicsWidget*>(other), reinterpret_cast<bool*>(ok)));
		} else {
			return new QTransform(static_cast<QGraphicsObject*>(ptr)->itemTransform(static_cast<QGraphicsItem*>(other), reinterpret_cast<bool*>(ok)));
		}
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(other))) {
			return new QTransform(static_cast<QGraphicsWidget*>(ptr)->itemTransform(static_cast<QGraphicsObject*>(other), reinterpret_cast<bool*>(ok)));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(other))) {
			return new QTransform(static_cast<QGraphicsWidget*>(ptr)->itemTransform(static_cast<QGraphicsWidget*>(other), reinterpret_cast<bool*>(ok)));
		} else {
			return new QTransform(static_cast<QGraphicsWidget*>(ptr)->itemTransform(static_cast<QGraphicsItem*>(other), reinterpret_cast<bool*>(ok)));
		}
	} else {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(other))) {
			return new QTransform(static_cast<QGraphicsItem*>(ptr)->itemTransform(static_cast<QGraphicsObject*>(other), reinterpret_cast<bool*>(ok)));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(other))) {
			return new QTransform(static_cast<QGraphicsItem*>(ptr)->itemTransform(static_cast<QGraphicsWidget*>(other), reinterpret_cast<bool*>(ok)));
		} else {
			return new QTransform(static_cast<QGraphicsItem*>(ptr)->itemTransform(static_cast<QGraphicsItem*>(other), reinterpret_cast<bool*>(ok)));
		}
	}
}

void* QGraphicsItem_SceneTransform(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return new QTransform(static_cast<QGraphicsObject*>(ptr)->sceneTransform());
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return new QTransform(static_cast<QGraphicsWidget*>(ptr)->sceneTransform());
	} else {
		return new QTransform(static_cast<QGraphicsItem*>(ptr)->sceneTransform());
	}
}

void* QGraphicsItem_Transform(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return new QTransform(static_cast<QGraphicsObject*>(ptr)->transform());
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return new QTransform(static_cast<QGraphicsWidget*>(ptr)->transform());
	} else {
		return new QTransform(static_cast<QGraphicsItem*>(ptr)->transform());
	}
}

void* QGraphicsItem_Data(void* ptr, int key)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return new QVariant(static_cast<QGraphicsObject*>(ptr)->data(key));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return new QVariant(static_cast<QGraphicsWidget*>(ptr)->data(key));
	} else {
		return new QVariant(static_cast<QGraphicsItem*>(ptr)->data(key));
	}
}

void* QGraphicsItem_InputMethodQuery(void* ptr, long long query)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return new QVariant(static_cast<QGraphicsObject*>(ptr)->inputMethodQuery(static_cast<Qt::InputMethodQuery>(query)));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return new QVariant(static_cast<QGraphicsWidget*>(ptr)->inputMethodQuery(static_cast<Qt::InputMethodQuery>(query)));
	} else {
		return new QVariant(static_cast<QGraphicsItem*>(ptr)->inputMethodQuery(static_cast<Qt::InputMethodQuery>(query)));
	}
}

void* QGraphicsItem_InputMethodQueryDefault(void* ptr, long long query)
{
	if (dynamic_cast<QGraphicsPixmapItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return new QVariant(static_cast<QGraphicsPixmapItem*>(ptr)->QGraphicsPixmapItem::inputMethodQuery(static_cast<Qt::InputMethodQuery>(query)));
	} else if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		return new QVariant(static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::inputMethodQuery(static_cast<Qt::InputMethodQuery>(query)));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return new QVariant(static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::inputMethodQuery(static_cast<Qt::InputMethodQuery>(query)));
	} else if (dynamic_cast<QGraphicsTextItem*>(static_cast<QObject*>(ptr))) {
		return new QVariant(static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::inputMethodQuery(static_cast<Qt::InputMethodQuery>(query)));
	} else if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return new QVariant(static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::inputMethodQuery(static_cast<Qt::InputMethodQuery>(query)));
	} else if (dynamic_cast<QGraphicsLineItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return new QVariant(static_cast<QGraphicsLineItem*>(ptr)->QGraphicsLineItem::inputMethodQuery(static_cast<Qt::InputMethodQuery>(query)));
	} else if (dynamic_cast<QGraphicsItemGroup*>(static_cast<QGraphicsItem*>(ptr))) {
		return new QVariant(static_cast<QGraphicsItemGroup*>(ptr)->QGraphicsItemGroup::inputMethodQuery(static_cast<Qt::InputMethodQuery>(query)));
	} else if (dynamic_cast<QGraphicsSimpleTextItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return new QVariant(static_cast<QGraphicsSimpleTextItem*>(ptr)->QGraphicsSimpleTextItem::inputMethodQuery(static_cast<Qt::InputMethodQuery>(query)));
	} else if (dynamic_cast<QGraphicsRectItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return new QVariant(static_cast<QGraphicsRectItem*>(ptr)->QGraphicsRectItem::inputMethodQuery(static_cast<Qt::InputMethodQuery>(query)));
	} else if (dynamic_cast<QGraphicsPolygonItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return new QVariant(static_cast<QGraphicsPolygonItem*>(ptr)->QGraphicsPolygonItem::inputMethodQuery(static_cast<Qt::InputMethodQuery>(query)));
	} else if (dynamic_cast<QGraphicsPathItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return new QVariant(static_cast<QGraphicsPathItem*>(ptr)->QGraphicsPathItem::inputMethodQuery(static_cast<Qt::InputMethodQuery>(query)));
	} else if (dynamic_cast<QGraphicsEllipseItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return new QVariant(static_cast<QGraphicsEllipseItem*>(ptr)->QGraphicsEllipseItem::inputMethodQuery(static_cast<Qt::InputMethodQuery>(query)));
	} else if (dynamic_cast<QAbstractGraphicsShapeItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return new QVariant(static_cast<QAbstractGraphicsShapeItem*>(ptr)->QAbstractGraphicsShapeItem::inputMethodQuery(static_cast<Qt::InputMethodQuery>(query)));
	} else {
		return new QVariant(static_cast<QGraphicsItem*>(ptr)->QGraphicsItem::inputMethodQuery(static_cast<Qt::InputMethodQuery>(query)));
	}
}

long long QGraphicsItem_InputMethodHints(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->inputMethodHints();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->inputMethodHints();
	} else {
		return static_cast<QGraphicsItem*>(ptr)->inputMethodHints();
	}
}

long long QGraphicsItem_AcceptedMouseButtons(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->acceptedMouseButtons();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->acceptedMouseButtons();
	} else {
		return static_cast<QGraphicsItem*>(ptr)->acceptedMouseButtons();
	}
}

char QGraphicsItem_AcceptDrops(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->acceptDrops();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->acceptDrops();
	} else {
		return static_cast<QGraphicsItem*>(ptr)->acceptDrops();
	}
}

char QGraphicsItem_AcceptHoverEvents(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->acceptHoverEvents();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->acceptHoverEvents();
	} else {
		return static_cast<QGraphicsItem*>(ptr)->acceptHoverEvents();
	}
}

char QGraphicsItem_AcceptTouchEvents(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->acceptTouchEvents();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->acceptTouchEvents();
	} else {
		return static_cast<QGraphicsItem*>(ptr)->acceptTouchEvents();
	}
}

char QGraphicsItem_CollidesWithItem(void* ptr, void* other, long long mode)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(other))) {
			return static_cast<QGraphicsObject*>(ptr)->collidesWithItem(static_cast<QGraphicsObject*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(other))) {
			return static_cast<QGraphicsObject*>(ptr)->collidesWithItem(static_cast<QGraphicsWidget*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		} else {
			return static_cast<QGraphicsObject*>(ptr)->collidesWithItem(static_cast<QGraphicsItem*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		}
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(other))) {
			return static_cast<QGraphicsWidget*>(ptr)->collidesWithItem(static_cast<QGraphicsObject*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(other))) {
			return static_cast<QGraphicsWidget*>(ptr)->collidesWithItem(static_cast<QGraphicsWidget*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		} else {
			return static_cast<QGraphicsWidget*>(ptr)->collidesWithItem(static_cast<QGraphicsItem*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		}
	} else {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(other))) {
			return static_cast<QGraphicsItem*>(ptr)->collidesWithItem(static_cast<QGraphicsObject*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(other))) {
			return static_cast<QGraphicsItem*>(ptr)->collidesWithItem(static_cast<QGraphicsWidget*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		} else {
			return static_cast<QGraphicsItem*>(ptr)->collidesWithItem(static_cast<QGraphicsItem*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		}
	}
}

char QGraphicsItem_CollidesWithItemDefault(void* ptr, void* other, long long mode)
{
	if (dynamic_cast<QGraphicsPixmapItem*>(static_cast<QGraphicsItem*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(other))) {
			return static_cast<QGraphicsPixmapItem*>(ptr)->QGraphicsPixmapItem::collidesWithItem(static_cast<QGraphicsObject*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(other))) {
			return static_cast<QGraphicsPixmapItem*>(ptr)->QGraphicsPixmapItem::collidesWithItem(static_cast<QGraphicsWidget*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		} else {
			return static_cast<QGraphicsPixmapItem*>(ptr)->QGraphicsPixmapItem::collidesWithItem(static_cast<QGraphicsItem*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		}
	} else if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(other))) {
			return static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::collidesWithItem(static_cast<QGraphicsObject*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(other))) {
			return static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::collidesWithItem(static_cast<QGraphicsWidget*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		} else {
			return static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::collidesWithItem(static_cast<QGraphicsItem*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		}
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(other))) {
			return static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::collidesWithItem(static_cast<QGraphicsObject*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(other))) {
			return static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::collidesWithItem(static_cast<QGraphicsWidget*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		} else {
			return static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::collidesWithItem(static_cast<QGraphicsItem*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		}
	} else if (dynamic_cast<QGraphicsTextItem*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(other))) {
			return static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::collidesWithItem(static_cast<QGraphicsObject*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(other))) {
			return static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::collidesWithItem(static_cast<QGraphicsWidget*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		} else {
			return static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::collidesWithItem(static_cast<QGraphicsItem*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		}
	} else if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(other))) {
			return static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::collidesWithItem(static_cast<QGraphicsObject*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(other))) {
			return static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::collidesWithItem(static_cast<QGraphicsWidget*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		} else {
			return static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::collidesWithItem(static_cast<QGraphicsItem*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		}
	} else if (dynamic_cast<QGraphicsLineItem*>(static_cast<QGraphicsItem*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(other))) {
			return static_cast<QGraphicsLineItem*>(ptr)->QGraphicsLineItem::collidesWithItem(static_cast<QGraphicsObject*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(other))) {
			return static_cast<QGraphicsLineItem*>(ptr)->QGraphicsLineItem::collidesWithItem(static_cast<QGraphicsWidget*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		} else {
			return static_cast<QGraphicsLineItem*>(ptr)->QGraphicsLineItem::collidesWithItem(static_cast<QGraphicsItem*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		}
	} else if (dynamic_cast<QGraphicsItemGroup*>(static_cast<QGraphicsItem*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(other))) {
			return static_cast<QGraphicsItemGroup*>(ptr)->QGraphicsItemGroup::collidesWithItem(static_cast<QGraphicsObject*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(other))) {
			return static_cast<QGraphicsItemGroup*>(ptr)->QGraphicsItemGroup::collidesWithItem(static_cast<QGraphicsWidget*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		} else {
			return static_cast<QGraphicsItemGroup*>(ptr)->QGraphicsItemGroup::collidesWithItem(static_cast<QGraphicsItem*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		}
	} else if (dynamic_cast<QGraphicsSimpleTextItem*>(static_cast<QGraphicsItem*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(other))) {
			return static_cast<QGraphicsSimpleTextItem*>(ptr)->QGraphicsSimpleTextItem::collidesWithItem(static_cast<QGraphicsObject*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(other))) {
			return static_cast<QGraphicsSimpleTextItem*>(ptr)->QGraphicsSimpleTextItem::collidesWithItem(static_cast<QGraphicsWidget*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		} else {
			return static_cast<QGraphicsSimpleTextItem*>(ptr)->QGraphicsSimpleTextItem::collidesWithItem(static_cast<QGraphicsItem*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		}
	} else if (dynamic_cast<QGraphicsRectItem*>(static_cast<QGraphicsItem*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(other))) {
			return static_cast<QGraphicsRectItem*>(ptr)->QGraphicsRectItem::collidesWithItem(static_cast<QGraphicsObject*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(other))) {
			return static_cast<QGraphicsRectItem*>(ptr)->QGraphicsRectItem::collidesWithItem(static_cast<QGraphicsWidget*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		} else {
			return static_cast<QGraphicsRectItem*>(ptr)->QGraphicsRectItem::collidesWithItem(static_cast<QGraphicsItem*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		}
	} else if (dynamic_cast<QGraphicsPolygonItem*>(static_cast<QGraphicsItem*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(other))) {
			return static_cast<QGraphicsPolygonItem*>(ptr)->QGraphicsPolygonItem::collidesWithItem(static_cast<QGraphicsObject*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(other))) {
			return static_cast<QGraphicsPolygonItem*>(ptr)->QGraphicsPolygonItem::collidesWithItem(static_cast<QGraphicsWidget*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		} else {
			return static_cast<QGraphicsPolygonItem*>(ptr)->QGraphicsPolygonItem::collidesWithItem(static_cast<QGraphicsItem*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		}
	} else if (dynamic_cast<QGraphicsPathItem*>(static_cast<QGraphicsItem*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(other))) {
			return static_cast<QGraphicsPathItem*>(ptr)->QGraphicsPathItem::collidesWithItem(static_cast<QGraphicsObject*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(other))) {
			return static_cast<QGraphicsPathItem*>(ptr)->QGraphicsPathItem::collidesWithItem(static_cast<QGraphicsWidget*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		} else {
			return static_cast<QGraphicsPathItem*>(ptr)->QGraphicsPathItem::collidesWithItem(static_cast<QGraphicsItem*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		}
	} else if (dynamic_cast<QGraphicsEllipseItem*>(static_cast<QGraphicsItem*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(other))) {
			return static_cast<QGraphicsEllipseItem*>(ptr)->QGraphicsEllipseItem::collidesWithItem(static_cast<QGraphicsObject*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(other))) {
			return static_cast<QGraphicsEllipseItem*>(ptr)->QGraphicsEllipseItem::collidesWithItem(static_cast<QGraphicsWidget*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		} else {
			return static_cast<QGraphicsEllipseItem*>(ptr)->QGraphicsEllipseItem::collidesWithItem(static_cast<QGraphicsItem*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		}
	} else if (dynamic_cast<QAbstractGraphicsShapeItem*>(static_cast<QGraphicsItem*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(other))) {
			return static_cast<QAbstractGraphicsShapeItem*>(ptr)->QAbstractGraphicsShapeItem::collidesWithItem(static_cast<QGraphicsObject*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(other))) {
			return static_cast<QAbstractGraphicsShapeItem*>(ptr)->QAbstractGraphicsShapeItem::collidesWithItem(static_cast<QGraphicsWidget*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		} else {
			return static_cast<QAbstractGraphicsShapeItem*>(ptr)->QAbstractGraphicsShapeItem::collidesWithItem(static_cast<QGraphicsItem*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		}
	} else {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(other))) {
			return static_cast<QGraphicsItem*>(ptr)->QGraphicsItem::collidesWithItem(static_cast<QGraphicsObject*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(other))) {
			return static_cast<QGraphicsItem*>(ptr)->QGraphicsItem::collidesWithItem(static_cast<QGraphicsWidget*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		} else {
			return static_cast<QGraphicsItem*>(ptr)->QGraphicsItem::collidesWithItem(static_cast<QGraphicsItem*>(other), static_cast<Qt::ItemSelectionMode>(mode));
		}
	}
}

char QGraphicsItem_CollidesWithPath(void* ptr, void* path, long long mode)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->collidesWithPath(*static_cast<QPainterPath*>(path), static_cast<Qt::ItemSelectionMode>(mode));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->collidesWithPath(*static_cast<QPainterPath*>(path), static_cast<Qt::ItemSelectionMode>(mode));
	} else {
		return static_cast<QGraphicsItem*>(ptr)->collidesWithPath(*static_cast<QPainterPath*>(path), static_cast<Qt::ItemSelectionMode>(mode));
	}
}

char QGraphicsItem_CollidesWithPathDefault(void* ptr, void* path, long long mode)
{
	if (dynamic_cast<QGraphicsPixmapItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return static_cast<QGraphicsPixmapItem*>(ptr)->QGraphicsPixmapItem::collidesWithPath(*static_cast<QPainterPath*>(path), static_cast<Qt::ItemSelectionMode>(mode));
	} else if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::collidesWithPath(*static_cast<QPainterPath*>(path), static_cast<Qt::ItemSelectionMode>(mode));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::collidesWithPath(*static_cast<QPainterPath*>(path), static_cast<Qt::ItemSelectionMode>(mode));
	} else if (dynamic_cast<QGraphicsTextItem*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::collidesWithPath(*static_cast<QPainterPath*>(path), static_cast<Qt::ItemSelectionMode>(mode));
	} else if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::collidesWithPath(*static_cast<QPainterPath*>(path), static_cast<Qt::ItemSelectionMode>(mode));
	} else if (dynamic_cast<QGraphicsLineItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return static_cast<QGraphicsLineItem*>(ptr)->QGraphicsLineItem::collidesWithPath(*static_cast<QPainterPath*>(path), static_cast<Qt::ItemSelectionMode>(mode));
	} else if (dynamic_cast<QGraphicsItemGroup*>(static_cast<QGraphicsItem*>(ptr))) {
		return static_cast<QGraphicsItemGroup*>(ptr)->QGraphicsItemGroup::collidesWithPath(*static_cast<QPainterPath*>(path), static_cast<Qt::ItemSelectionMode>(mode));
	} else if (dynamic_cast<QGraphicsSimpleTextItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return static_cast<QGraphicsSimpleTextItem*>(ptr)->QGraphicsSimpleTextItem::collidesWithPath(*static_cast<QPainterPath*>(path), static_cast<Qt::ItemSelectionMode>(mode));
	} else if (dynamic_cast<QGraphicsRectItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return static_cast<QGraphicsRectItem*>(ptr)->QGraphicsRectItem::collidesWithPath(*static_cast<QPainterPath*>(path), static_cast<Qt::ItemSelectionMode>(mode));
	} else if (dynamic_cast<QGraphicsPolygonItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return static_cast<QGraphicsPolygonItem*>(ptr)->QGraphicsPolygonItem::collidesWithPath(*static_cast<QPainterPath*>(path), static_cast<Qt::ItemSelectionMode>(mode));
	} else if (dynamic_cast<QGraphicsPathItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return static_cast<QGraphicsPathItem*>(ptr)->QGraphicsPathItem::collidesWithPath(*static_cast<QPainterPath*>(path), static_cast<Qt::ItemSelectionMode>(mode));
	} else if (dynamic_cast<QGraphicsEllipseItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return static_cast<QGraphicsEllipseItem*>(ptr)->QGraphicsEllipseItem::collidesWithPath(*static_cast<QPainterPath*>(path), static_cast<Qt::ItemSelectionMode>(mode));
	} else if (dynamic_cast<QAbstractGraphicsShapeItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return static_cast<QAbstractGraphicsShapeItem*>(ptr)->QAbstractGraphicsShapeItem::collidesWithPath(*static_cast<QPainterPath*>(path), static_cast<Qt::ItemSelectionMode>(mode));
	} else {
		return static_cast<QGraphicsItem*>(ptr)->QGraphicsItem::collidesWithPath(*static_cast<QPainterPath*>(path), static_cast<Qt::ItemSelectionMode>(mode));
	}
}

char QGraphicsItem_Contains(void* ptr, void* point)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->contains(*static_cast<QPointF*>(point));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->contains(*static_cast<QPointF*>(point));
	} else {
		return static_cast<QGraphicsItem*>(ptr)->contains(*static_cast<QPointF*>(point));
	}
}

char QGraphicsItem_ContainsDefault(void* ptr, void* point)
{
	if (dynamic_cast<QGraphicsPixmapItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return static_cast<QGraphicsPixmapItem*>(ptr)->QGraphicsPixmapItem::contains(*static_cast<QPointF*>(point));
	} else if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::contains(*static_cast<QPointF*>(point));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::contains(*static_cast<QPointF*>(point));
	} else if (dynamic_cast<QGraphicsTextItem*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::contains(*static_cast<QPointF*>(point));
	} else if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::contains(*static_cast<QPointF*>(point));
	} else if (dynamic_cast<QGraphicsLineItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return static_cast<QGraphicsLineItem*>(ptr)->QGraphicsLineItem::contains(*static_cast<QPointF*>(point));
	} else if (dynamic_cast<QGraphicsItemGroup*>(static_cast<QGraphicsItem*>(ptr))) {
		return static_cast<QGraphicsItemGroup*>(ptr)->QGraphicsItemGroup::contains(*static_cast<QPointF*>(point));
	} else if (dynamic_cast<QGraphicsSimpleTextItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return static_cast<QGraphicsSimpleTextItem*>(ptr)->QGraphicsSimpleTextItem::contains(*static_cast<QPointF*>(point));
	} else if (dynamic_cast<QGraphicsRectItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return static_cast<QGraphicsRectItem*>(ptr)->QGraphicsRectItem::contains(*static_cast<QPointF*>(point));
	} else if (dynamic_cast<QGraphicsPolygonItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return static_cast<QGraphicsPolygonItem*>(ptr)->QGraphicsPolygonItem::contains(*static_cast<QPointF*>(point));
	} else if (dynamic_cast<QGraphicsPathItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return static_cast<QGraphicsPathItem*>(ptr)->QGraphicsPathItem::contains(*static_cast<QPointF*>(point));
	} else if (dynamic_cast<QGraphicsEllipseItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return static_cast<QGraphicsEllipseItem*>(ptr)->QGraphicsEllipseItem::contains(*static_cast<QPointF*>(point));
	} else if (dynamic_cast<QAbstractGraphicsShapeItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return static_cast<QAbstractGraphicsShapeItem*>(ptr)->QAbstractGraphicsShapeItem::contains(*static_cast<QPointF*>(point));
	} else {
		return static_cast<QGraphicsItem*>(ptr)->QGraphicsItem::contains(*static_cast<QPointF*>(point));
	}
}

char QGraphicsItem_FiltersChildEvents(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->filtersChildEvents();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->filtersChildEvents();
	} else {
		return static_cast<QGraphicsItem*>(ptr)->filtersChildEvents();
	}
}

char QGraphicsItem_HasCursor(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->hasCursor();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->hasCursor();
	} else {
		return static_cast<QGraphicsItem*>(ptr)->hasCursor();
	}
}

char QGraphicsItem_HasFocus(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->hasFocus();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->hasFocus();
	} else {
		return static_cast<QGraphicsItem*>(ptr)->hasFocus();
	}
}

char QGraphicsItem_IsActive(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->isActive();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->isActive();
	} else {
		return static_cast<QGraphicsItem*>(ptr)->isActive();
	}
}

char QGraphicsItem_IsAncestorOf(void* ptr, void* child)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(child))) {
			return static_cast<QGraphicsObject*>(ptr)->isAncestorOf(static_cast<QGraphicsObject*>(child));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(child))) {
			return static_cast<QGraphicsObject*>(ptr)->isAncestorOf(static_cast<QGraphicsWidget*>(child));
		} else {
			return static_cast<QGraphicsObject*>(ptr)->isAncestorOf(static_cast<QGraphicsItem*>(child));
		}
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(child))) {
			return static_cast<QGraphicsWidget*>(ptr)->isAncestorOf(static_cast<QGraphicsObject*>(child));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(child))) {
			return static_cast<QGraphicsWidget*>(ptr)->isAncestorOf(static_cast<QGraphicsWidget*>(child));
		} else {
			return static_cast<QGraphicsWidget*>(ptr)->isAncestorOf(static_cast<QGraphicsItem*>(child));
		}
	} else {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(child))) {
			return static_cast<QGraphicsItem*>(ptr)->isAncestorOf(static_cast<QGraphicsObject*>(child));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(child))) {
			return static_cast<QGraphicsItem*>(ptr)->isAncestorOf(static_cast<QGraphicsWidget*>(child));
		} else {
			return static_cast<QGraphicsItem*>(ptr)->isAncestorOf(static_cast<QGraphicsItem*>(child));
		}
	}
}

char QGraphicsItem_IsClipped(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->isClipped();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->isClipped();
	} else {
		return static_cast<QGraphicsItem*>(ptr)->isClipped();
	}
}

char QGraphicsItem_IsEnabled(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->isEnabled();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->isEnabled();
	} else {
		return static_cast<QGraphicsItem*>(ptr)->isEnabled();
	}
}

char QGraphicsItem_IsObscured(void* ptr, void* rect)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->isObscured(*static_cast<QRectF*>(rect));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->isObscured(*static_cast<QRectF*>(rect));
	} else {
		return static_cast<QGraphicsItem*>(ptr)->isObscured(*static_cast<QRectF*>(rect));
	}
}

char QGraphicsItem_IsObscured2(void* ptr, double x, double y, double w, double h)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->isObscured(x, y, w, h);
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->isObscured(x, y, w, h);
	} else {
		return static_cast<QGraphicsItem*>(ptr)->isObscured(x, y, w, h);
	}
}

char QGraphicsItem_IsObscuredBy(void* ptr, void* item)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return static_cast<QGraphicsObject*>(ptr)->isObscuredBy(static_cast<QGraphicsObject*>(item));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return static_cast<QGraphicsObject*>(ptr)->isObscuredBy(static_cast<QGraphicsWidget*>(item));
		} else {
			return static_cast<QGraphicsObject*>(ptr)->isObscuredBy(static_cast<QGraphicsItem*>(item));
		}
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return static_cast<QGraphicsWidget*>(ptr)->isObscuredBy(static_cast<QGraphicsObject*>(item));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return static_cast<QGraphicsWidget*>(ptr)->isObscuredBy(static_cast<QGraphicsWidget*>(item));
		} else {
			return static_cast<QGraphicsWidget*>(ptr)->isObscuredBy(static_cast<QGraphicsItem*>(item));
		}
	} else {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return static_cast<QGraphicsItem*>(ptr)->isObscuredBy(static_cast<QGraphicsObject*>(item));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return static_cast<QGraphicsItem*>(ptr)->isObscuredBy(static_cast<QGraphicsWidget*>(item));
		} else {
			return static_cast<QGraphicsItem*>(ptr)->isObscuredBy(static_cast<QGraphicsItem*>(item));
		}
	}
}

char QGraphicsItem_IsObscuredByDefault(void* ptr, void* item)
{
	if (dynamic_cast<QGraphicsPixmapItem*>(static_cast<QGraphicsItem*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return static_cast<QGraphicsPixmapItem*>(ptr)->QGraphicsPixmapItem::isObscuredBy(static_cast<QGraphicsObject*>(item));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return static_cast<QGraphicsPixmapItem*>(ptr)->QGraphicsPixmapItem::isObscuredBy(static_cast<QGraphicsWidget*>(item));
		} else {
			return static_cast<QGraphicsPixmapItem*>(ptr)->QGraphicsPixmapItem::isObscuredBy(static_cast<QGraphicsItem*>(item));
		}
	} else if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::isObscuredBy(static_cast<QGraphicsObject*>(item));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::isObscuredBy(static_cast<QGraphicsWidget*>(item));
		} else {
			return static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::isObscuredBy(static_cast<QGraphicsItem*>(item));
		}
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::isObscuredBy(static_cast<QGraphicsObject*>(item));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::isObscuredBy(static_cast<QGraphicsWidget*>(item));
		} else {
			return static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::isObscuredBy(static_cast<QGraphicsItem*>(item));
		}
	} else if (dynamic_cast<QGraphicsTextItem*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::isObscuredBy(static_cast<QGraphicsObject*>(item));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::isObscuredBy(static_cast<QGraphicsWidget*>(item));
		} else {
			return static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::isObscuredBy(static_cast<QGraphicsItem*>(item));
		}
	} else if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::isObscuredBy(static_cast<QGraphicsObject*>(item));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::isObscuredBy(static_cast<QGraphicsWidget*>(item));
		} else {
			return static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::isObscuredBy(static_cast<QGraphicsItem*>(item));
		}
	} else if (dynamic_cast<QGraphicsLineItem*>(static_cast<QGraphicsItem*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return static_cast<QGraphicsLineItem*>(ptr)->QGraphicsLineItem::isObscuredBy(static_cast<QGraphicsObject*>(item));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return static_cast<QGraphicsLineItem*>(ptr)->QGraphicsLineItem::isObscuredBy(static_cast<QGraphicsWidget*>(item));
		} else {
			return static_cast<QGraphicsLineItem*>(ptr)->QGraphicsLineItem::isObscuredBy(static_cast<QGraphicsItem*>(item));
		}
	} else if (dynamic_cast<QGraphicsItemGroup*>(static_cast<QGraphicsItem*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return static_cast<QGraphicsItemGroup*>(ptr)->QGraphicsItemGroup::isObscuredBy(static_cast<QGraphicsObject*>(item));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return static_cast<QGraphicsItemGroup*>(ptr)->QGraphicsItemGroup::isObscuredBy(static_cast<QGraphicsWidget*>(item));
		} else {
			return static_cast<QGraphicsItemGroup*>(ptr)->QGraphicsItemGroup::isObscuredBy(static_cast<QGraphicsItem*>(item));
		}
	} else if (dynamic_cast<QGraphicsSimpleTextItem*>(static_cast<QGraphicsItem*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return static_cast<QGraphicsSimpleTextItem*>(ptr)->QGraphicsSimpleTextItem::isObscuredBy(static_cast<QGraphicsObject*>(item));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return static_cast<QGraphicsSimpleTextItem*>(ptr)->QGraphicsSimpleTextItem::isObscuredBy(static_cast<QGraphicsWidget*>(item));
		} else {
			return static_cast<QGraphicsSimpleTextItem*>(ptr)->QGraphicsSimpleTextItem::isObscuredBy(static_cast<QGraphicsItem*>(item));
		}
	} else if (dynamic_cast<QGraphicsRectItem*>(static_cast<QGraphicsItem*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return static_cast<QGraphicsRectItem*>(ptr)->QGraphicsRectItem::isObscuredBy(static_cast<QGraphicsObject*>(item));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return static_cast<QGraphicsRectItem*>(ptr)->QGraphicsRectItem::isObscuredBy(static_cast<QGraphicsWidget*>(item));
		} else {
			return static_cast<QGraphicsRectItem*>(ptr)->QGraphicsRectItem::isObscuredBy(static_cast<QGraphicsItem*>(item));
		}
	} else if (dynamic_cast<QGraphicsPolygonItem*>(static_cast<QGraphicsItem*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return static_cast<QGraphicsPolygonItem*>(ptr)->QGraphicsPolygonItem::isObscuredBy(static_cast<QGraphicsObject*>(item));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return static_cast<QGraphicsPolygonItem*>(ptr)->QGraphicsPolygonItem::isObscuredBy(static_cast<QGraphicsWidget*>(item));
		} else {
			return static_cast<QGraphicsPolygonItem*>(ptr)->QGraphicsPolygonItem::isObscuredBy(static_cast<QGraphicsItem*>(item));
		}
	} else if (dynamic_cast<QGraphicsPathItem*>(static_cast<QGraphicsItem*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return static_cast<QGraphicsPathItem*>(ptr)->QGraphicsPathItem::isObscuredBy(static_cast<QGraphicsObject*>(item));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return static_cast<QGraphicsPathItem*>(ptr)->QGraphicsPathItem::isObscuredBy(static_cast<QGraphicsWidget*>(item));
		} else {
			return static_cast<QGraphicsPathItem*>(ptr)->QGraphicsPathItem::isObscuredBy(static_cast<QGraphicsItem*>(item));
		}
	} else if (dynamic_cast<QGraphicsEllipseItem*>(static_cast<QGraphicsItem*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return static_cast<QGraphicsEllipseItem*>(ptr)->QGraphicsEllipseItem::isObscuredBy(static_cast<QGraphicsObject*>(item));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return static_cast<QGraphicsEllipseItem*>(ptr)->QGraphicsEllipseItem::isObscuredBy(static_cast<QGraphicsWidget*>(item));
		} else {
			return static_cast<QGraphicsEllipseItem*>(ptr)->QGraphicsEllipseItem::isObscuredBy(static_cast<QGraphicsItem*>(item));
		}
	} else if (dynamic_cast<QAbstractGraphicsShapeItem*>(static_cast<QGraphicsItem*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return static_cast<QAbstractGraphicsShapeItem*>(ptr)->QAbstractGraphicsShapeItem::isObscuredBy(static_cast<QGraphicsObject*>(item));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return static_cast<QAbstractGraphicsShapeItem*>(ptr)->QAbstractGraphicsShapeItem::isObscuredBy(static_cast<QGraphicsWidget*>(item));
		} else {
			return static_cast<QAbstractGraphicsShapeItem*>(ptr)->QAbstractGraphicsShapeItem::isObscuredBy(static_cast<QGraphicsItem*>(item));
		}
	} else {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			return static_cast<QGraphicsItem*>(ptr)->QGraphicsItem::isObscuredBy(static_cast<QGraphicsObject*>(item));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			return static_cast<QGraphicsItem*>(ptr)->QGraphicsItem::isObscuredBy(static_cast<QGraphicsWidget*>(item));
		} else {
			return static_cast<QGraphicsItem*>(ptr)->QGraphicsItem::isObscuredBy(static_cast<QGraphicsItem*>(item));
		}
	}
}

char QGraphicsItem_IsPanel(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->isPanel();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->isPanel();
	} else {
		return static_cast<QGraphicsItem*>(ptr)->isPanel();
	}
}

char QGraphicsItem_IsSelected(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->isSelected();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->isSelected();
	} else {
		return static_cast<QGraphicsItem*>(ptr)->isSelected();
	}
}

char QGraphicsItem_IsUnderMouse(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->isUnderMouse();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->isUnderMouse();
	} else {
		return static_cast<QGraphicsItem*>(ptr)->isUnderMouse();
	}
}

char QGraphicsItem_IsVisible(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->isVisible();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->isVisible();
	} else {
		return static_cast<QGraphicsItem*>(ptr)->isVisible();
	}
}

char QGraphicsItem_IsVisibleTo(void* ptr, void* parent)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(parent))) {
			return static_cast<QGraphicsObject*>(ptr)->isVisibleTo(static_cast<QGraphicsObject*>(parent));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(parent))) {
			return static_cast<QGraphicsObject*>(ptr)->isVisibleTo(static_cast<QGraphicsWidget*>(parent));
		} else {
			return static_cast<QGraphicsObject*>(ptr)->isVisibleTo(static_cast<QGraphicsItem*>(parent));
		}
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(parent))) {
			return static_cast<QGraphicsWidget*>(ptr)->isVisibleTo(static_cast<QGraphicsObject*>(parent));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(parent))) {
			return static_cast<QGraphicsWidget*>(ptr)->isVisibleTo(static_cast<QGraphicsWidget*>(parent));
		} else {
			return static_cast<QGraphicsWidget*>(ptr)->isVisibleTo(static_cast<QGraphicsItem*>(parent));
		}
	} else {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(parent))) {
			return static_cast<QGraphicsItem*>(ptr)->isVisibleTo(static_cast<QGraphicsObject*>(parent));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(parent))) {
			return static_cast<QGraphicsItem*>(ptr)->isVisibleTo(static_cast<QGraphicsWidget*>(parent));
		} else {
			return static_cast<QGraphicsItem*>(ptr)->isVisibleTo(static_cast<QGraphicsItem*>(parent));
		}
	}
}

char QGraphicsItem_IsWidget(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->isWidget();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->isWidget();
	} else {
		return static_cast<QGraphicsItem*>(ptr)->isWidget();
	}
}

char QGraphicsItem_IsWindow(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->isWindow();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->isWindow();
	} else {
		return static_cast<QGraphicsItem*>(ptr)->isWindow();
	}
}

void* QGraphicsItem_ToGraphicsObject2(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return const_cast<QGraphicsObject*>(static_cast<QGraphicsObject*>(ptr)->toGraphicsObject());
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return const_cast<QGraphicsObject*>(static_cast<QGraphicsWidget*>(ptr)->toGraphicsObject());
	} else {
		return const_cast<QGraphicsObject*>(static_cast<QGraphicsItem*>(ptr)->toGraphicsObject());
	}
}

int QGraphicsItem_Type(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->type();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->type();
	} else {
		return static_cast<QGraphicsItem*>(ptr)->type();
	}
}

int QGraphicsItem_TypeDefault(void* ptr)
{
	if (dynamic_cast<QGraphicsPixmapItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return static_cast<QGraphicsPixmapItem*>(ptr)->QGraphicsPixmapItem::type();
	} else if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::type();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::type();
	} else if (dynamic_cast<QGraphicsTextItem*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::type();
	} else if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::type();
	} else if (dynamic_cast<QGraphicsLineItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return static_cast<QGraphicsLineItem*>(ptr)->QGraphicsLineItem::type();
	} else if (dynamic_cast<QGraphicsItemGroup*>(static_cast<QGraphicsItem*>(ptr))) {
		return static_cast<QGraphicsItemGroup*>(ptr)->QGraphicsItemGroup::type();
	} else if (dynamic_cast<QGraphicsSimpleTextItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return static_cast<QGraphicsSimpleTextItem*>(ptr)->QGraphicsSimpleTextItem::type();
	} else if (dynamic_cast<QGraphicsRectItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return static_cast<QGraphicsRectItem*>(ptr)->QGraphicsRectItem::type();
	} else if (dynamic_cast<QGraphicsPolygonItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return static_cast<QGraphicsPolygonItem*>(ptr)->QGraphicsPolygonItem::type();
	} else if (dynamic_cast<QGraphicsPathItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return static_cast<QGraphicsPathItem*>(ptr)->QGraphicsPathItem::type();
	} else if (dynamic_cast<QGraphicsEllipseItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return static_cast<QGraphicsEllipseItem*>(ptr)->QGraphicsEllipseItem::type();
	} else if (dynamic_cast<QAbstractGraphicsShapeItem*>(static_cast<QGraphicsItem*>(ptr))) {
		return static_cast<QAbstractGraphicsShapeItem*>(ptr)->QAbstractGraphicsShapeItem::type();
	} else {
		return static_cast<QGraphicsItem*>(ptr)->QGraphicsItem::type();
	}
}

double QGraphicsItem_BoundingRegionGranularity(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->boundingRegionGranularity();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->boundingRegionGranularity();
	} else {
		return static_cast<QGraphicsItem*>(ptr)->boundingRegionGranularity();
	}
}

double QGraphicsItem_EffectiveOpacity(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->effectiveOpacity();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->effectiveOpacity();
	} else {
		return static_cast<QGraphicsItem*>(ptr)->effectiveOpacity();
	}
}

double QGraphicsItem_Opacity(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->opacity();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->opacity();
	} else {
		return static_cast<QGraphicsItem*>(ptr)->opacity();
	}
}

double QGraphicsItem_Rotation(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->rotation();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->rotation();
	} else {
		return static_cast<QGraphicsItem*>(ptr)->rotation();
	}
}

double QGraphicsItem_Scale(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->scale();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->scale();
	} else {
		return static_cast<QGraphicsItem*>(ptr)->scale();
	}
}

double QGraphicsItem_X(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->x();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->x();
	} else {
		return static_cast<QGraphicsItem*>(ptr)->x();
	}
}

double QGraphicsItem_Y(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->y();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->y();
	} else {
		return static_cast<QGraphicsItem*>(ptr)->y();
	}
}

double QGraphicsItem_ZValue(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsObject*>(ptr)->zValue();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->zValue();
	} else {
		return static_cast<QGraphicsItem*>(ptr)->zValue();
	}
}

void* QGraphicsItem___setTransformations_transformations_atList(void* ptr, int i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return ({QGraphicsTransform * tmp = static_cast<QList<QGraphicsTransform *>*>(ptr)->at(i); if (i == static_cast<QList<QGraphicsTransform *>*>(ptr)->size()-1) { static_cast<QList<QGraphicsTransform *>*>(ptr)->~QList(); free(ptr); }; tmp; });
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({QGraphicsTransform * tmp = static_cast<QList<QGraphicsTransform *>*>(ptr)->at(i); if (i == static_cast<QList<QGraphicsTransform *>*>(ptr)->size()-1) { static_cast<QList<QGraphicsTransform *>*>(ptr)->~QList(); free(ptr); }; tmp; });
	} else {
		return ({QGraphicsTransform * tmp = static_cast<QList<QGraphicsTransform *>*>(ptr)->at(i); if (i == static_cast<QList<QGraphicsTransform *>*>(ptr)->size()-1) { static_cast<QList<QGraphicsTransform *>*>(ptr)->~QList(); free(ptr); }; tmp; });
	}
}

void QGraphicsItem___setTransformations_transformations_setList(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QList<QGraphicsTransform *>*>(ptr)->append(static_cast<QGraphicsTransform*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QList<QGraphicsTransform *>*>(ptr)->append(static_cast<QGraphicsTransform*>(i));
	} else {
		static_cast<QList<QGraphicsTransform *>*>(ptr)->append(static_cast<QGraphicsTransform*>(i));
	}
}

void* QGraphicsItem___setTransformations_transformations_newList(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return new QList<QGraphicsTransform *>();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return new QList<QGraphicsTransform *>();
	} else {
		return new QList<QGraphicsTransform *>();
	}
}

void* QGraphicsItem___childItems_atList(void* ptr, int i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return ({QGraphicsItem * tmp = static_cast<QList<QGraphicsItem *>*>(ptr)->at(i); if (i == static_cast<QList<QGraphicsItem *>*>(ptr)->size()-1) { static_cast<QList<QGraphicsItem *>*>(ptr)->~QList(); free(ptr); }; tmp; });
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({QGraphicsItem * tmp = static_cast<QList<QGraphicsItem *>*>(ptr)->at(i); if (i == static_cast<QList<QGraphicsItem *>*>(ptr)->size()-1) { static_cast<QList<QGraphicsItem *>*>(ptr)->~QList(); free(ptr); }; tmp; });
	} else {
		return ({QGraphicsItem * tmp = static_cast<QList<QGraphicsItem *>*>(ptr)->at(i); if (i == static_cast<QList<QGraphicsItem *>*>(ptr)->size()-1) { static_cast<QList<QGraphicsItem *>*>(ptr)->~QList(); free(ptr); }; tmp; });
	}
}

void QGraphicsItem___childItems_setList(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
			static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
			static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
		} else {
			static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsItem*>(i));
		}
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
			static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
			static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
		} else {
			static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsItem*>(i));
		}
	} else {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
			static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
			static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
		} else {
			static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsItem*>(i));
		}
	}
}

void* QGraphicsItem___childItems_newList(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return new QList<QGraphicsItem *>();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return new QList<QGraphicsItem *>();
	} else {
		return new QList<QGraphicsItem *>();
	}
}

void* QGraphicsItem___children_atList(void* ptr, int i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return ({QGraphicsItem * tmp = static_cast<QList<QGraphicsItem *>*>(ptr)->at(i); if (i == static_cast<QList<QGraphicsItem *>*>(ptr)->size()-1) { static_cast<QList<QGraphicsItem *>*>(ptr)->~QList(); free(ptr); }; tmp; });
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({QGraphicsItem * tmp = static_cast<QList<QGraphicsItem *>*>(ptr)->at(i); if (i == static_cast<QList<QGraphicsItem *>*>(ptr)->size()-1) { static_cast<QList<QGraphicsItem *>*>(ptr)->~QList(); free(ptr); }; tmp; });
	} else {
		return ({QGraphicsItem * tmp = static_cast<QList<QGraphicsItem *>*>(ptr)->at(i); if (i == static_cast<QList<QGraphicsItem *>*>(ptr)->size()-1) { static_cast<QList<QGraphicsItem *>*>(ptr)->~QList(); free(ptr); }; tmp; });
	}
}

void QGraphicsItem___children_setList(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
			static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
			static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
		} else {
			static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsItem*>(i));
		}
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
			static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
			static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
		} else {
			static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsItem*>(i));
		}
	} else {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
			static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
			static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
		} else {
			static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsItem*>(i));
		}
	}
}

void* QGraphicsItem___children_newList(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return new QList<QGraphicsItem *>();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return new QList<QGraphicsItem *>();
	} else {
		return new QList<QGraphicsItem *>();
	}
}

void* QGraphicsItem___collidingItems_atList(void* ptr, int i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return ({QGraphicsItem * tmp = static_cast<QList<QGraphicsItem *>*>(ptr)->at(i); if (i == static_cast<QList<QGraphicsItem *>*>(ptr)->size()-1) { static_cast<QList<QGraphicsItem *>*>(ptr)->~QList(); free(ptr); }; tmp; });
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({QGraphicsItem * tmp = static_cast<QList<QGraphicsItem *>*>(ptr)->at(i); if (i == static_cast<QList<QGraphicsItem *>*>(ptr)->size()-1) { static_cast<QList<QGraphicsItem *>*>(ptr)->~QList(); free(ptr); }; tmp; });
	} else {
		return ({QGraphicsItem * tmp = static_cast<QList<QGraphicsItem *>*>(ptr)->at(i); if (i == static_cast<QList<QGraphicsItem *>*>(ptr)->size()-1) { static_cast<QList<QGraphicsItem *>*>(ptr)->~QList(); free(ptr); }; tmp; });
	}
}

void QGraphicsItem___collidingItems_setList(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
			static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
			static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
		} else {
			static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsItem*>(i));
		}
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
			static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
			static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
		} else {
			static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsItem*>(i));
		}
	} else {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
			static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
			static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
		} else {
			static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsItem*>(i));
		}
	}
}

void* QGraphicsItem___collidingItems_newList(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return new QList<QGraphicsItem *>();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return new QList<QGraphicsItem *>();
	} else {
		return new QList<QGraphicsItem *>();
	}
}

void* QGraphicsItem___transformations_atList(void* ptr, int i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return ({QGraphicsTransform * tmp = static_cast<QList<QGraphicsTransform *>*>(ptr)->at(i); if (i == static_cast<QList<QGraphicsTransform *>*>(ptr)->size()-1) { static_cast<QList<QGraphicsTransform *>*>(ptr)->~QList(); free(ptr); }; tmp; });
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({QGraphicsTransform * tmp = static_cast<QList<QGraphicsTransform *>*>(ptr)->at(i); if (i == static_cast<QList<QGraphicsTransform *>*>(ptr)->size()-1) { static_cast<QList<QGraphicsTransform *>*>(ptr)->~QList(); free(ptr); }; tmp; });
	} else {
		return ({QGraphicsTransform * tmp = static_cast<QList<QGraphicsTransform *>*>(ptr)->at(i); if (i == static_cast<QList<QGraphicsTransform *>*>(ptr)->size()-1) { static_cast<QList<QGraphicsTransform *>*>(ptr)->~QList(); free(ptr); }; tmp; });
	}
}

void QGraphicsItem___transformations_setList(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		static_cast<QList<QGraphicsTransform *>*>(ptr)->append(static_cast<QGraphicsTransform*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QList<QGraphicsTransform *>*>(ptr)->append(static_cast<QGraphicsTransform*>(i));
	} else {
		static_cast<QList<QGraphicsTransform *>*>(ptr)->append(static_cast<QGraphicsTransform*>(i));
	}
}

void* QGraphicsItem___transformations_newList(void* ptr)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(ptr))) {
		return new QList<QGraphicsTransform *>();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return new QList<QGraphicsTransform *>();
	} else {
		return new QList<QGraphicsTransform *>();
	}
}

class MyQGraphicsItemGroup: public QGraphicsItemGroup
{
public:
	MyQGraphicsItemGroup(QGraphicsItem *parent = Q_NULLPTR) : QGraphicsItemGroup(parent) {QGraphicsItemGroup_QGraphicsItemGroup_QRegisterMetaType();};
	void paint(QPainter * painter, const QStyleOptionGraphicsItem * option, QWidget * widget) { callbackQGraphicsItemGroup_Paint(this, painter, const_cast<QStyleOptionGraphicsItem*>(option), widget); };
	 ~MyQGraphicsItemGroup() { callbackQGraphicsItemGroup_DestroyQGraphicsItemGroup(this); };
	QPainterPath opaqueArea() const { return *static_cast<QPainterPath*>(callbackQGraphicsItem_OpaqueArea(const_cast<void*>(static_cast<const void*>(this)))); };
	QRectF boundingRect() const { return *static_cast<QRectF*>(callbackQGraphicsItemGroup_BoundingRect(const_cast<void*>(static_cast<const void*>(this)))); };
	bool isObscuredBy(const QGraphicsItem * item) const { return callbackQGraphicsItem_IsObscuredBy(const_cast<void*>(static_cast<const void*>(this)), const_cast<QGraphicsItem*>(item)) != 0; };
	int type() const { return callbackQGraphicsItem_Type(const_cast<void*>(static_cast<const void*>(this))); };
	QVariant itemChange(QGraphicsItem::GraphicsItemChange change, const QVariant & value) { return *static_cast<QVariant*>(callbackQGraphicsItem_ItemChange(this, change, const_cast<QVariant*>(&value))); };
	bool sceneEvent(QEvent * event) { return callbackQGraphicsItem_SceneEvent(this, event) != 0; };
	bool sceneEventFilter(QGraphicsItem * watched, QEvent * event) { return callbackQGraphicsItem_SceneEventFilter(this, watched, event) != 0; };
	void advance(int phase) { callbackQGraphicsItem_Advance(this, phase); };
	void contextMenuEvent(QGraphicsSceneContextMenuEvent * event) { callbackQGraphicsItem_ContextMenuEvent(this, event); };
	void dragEnterEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DragEnterEvent(this, event); };
	void dragLeaveEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DragLeaveEvent(this, event); };
	void dragMoveEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DragMoveEvent(this, event); };
	void dropEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DropEvent(this, event); };
	void focusInEvent(QFocusEvent * event) { callbackQGraphicsItem_FocusInEvent(this, event); };
	void focusOutEvent(QFocusEvent * event) { callbackQGraphicsItem_FocusOutEvent(this, event); };
	void hoverEnterEvent(QGraphicsSceneHoverEvent * event) { callbackQGraphicsItem_HoverEnterEvent(this, event); };
	void hoverLeaveEvent(QGraphicsSceneHoverEvent * event) { callbackQGraphicsItem_HoverLeaveEvent(this, event); };
	void hoverMoveEvent(QGraphicsSceneHoverEvent * event) { callbackQGraphicsItem_HoverMoveEvent(this, event); };
	void inputMethodEvent(QInputMethodEvent * event) { callbackQGraphicsItem_InputMethodEvent(this, event); };
	void keyPressEvent(QKeyEvent * event) { callbackQGraphicsItem_KeyPressEvent(this, event); };
	void keyReleaseEvent(QKeyEvent * event) { callbackQGraphicsItem_KeyReleaseEvent(this, event); };
	void mouseDoubleClickEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MouseDoubleClickEvent(this, event); };
	void mouseMoveEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MouseMoveEvent(this, event); };
	void mousePressEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MousePressEvent(this, event); };
	void mouseReleaseEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MouseReleaseEvent(this, event); };
	void wheelEvent(QGraphicsSceneWheelEvent * event) { callbackQGraphicsItem_WheelEvent(this, event); };
	QPainterPath shape() const { return *static_cast<QPainterPath*>(callbackQGraphicsItem_Shape(const_cast<void*>(static_cast<const void*>(this)))); };
	QVariant inputMethodQuery(Qt::InputMethodQuery query) const { return *static_cast<QVariant*>(callbackQGraphicsItem_InputMethodQuery(const_cast<void*>(static_cast<const void*>(this)), query)); };
	bool collidesWithItem(const QGraphicsItem * other, Qt::ItemSelectionMode mode) const { return callbackQGraphicsItem_CollidesWithItem(const_cast<void*>(static_cast<const void*>(this)), const_cast<QGraphicsItem*>(other), mode) != 0; };
	bool collidesWithPath(const QPainterPath & path, Qt::ItemSelectionMode mode) const { return callbackQGraphicsItem_CollidesWithPath(const_cast<void*>(static_cast<const void*>(this)), const_cast<QPainterPath*>(&path), mode) != 0; };
	bool contains(const QPointF & point) const { return callbackQGraphicsItem_Contains(const_cast<void*>(static_cast<const void*>(this)), const_cast<QPointF*>(&point)) != 0; };
};

Q_DECLARE_METATYPE(QGraphicsItemGroup*)
Q_DECLARE_METATYPE(MyQGraphicsItemGroup*)

int QGraphicsItemGroup_QGraphicsItemGroup_QRegisterMetaType(){qRegisterMetaType<QGraphicsItemGroup*>(); return qRegisterMetaType<MyQGraphicsItemGroup*>();}

void* QGraphicsItemGroup_NewQGraphicsItemGroup(void* parent)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsItemGroup(static_cast<QGraphicsObject*>(parent));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsItemGroup(static_cast<QGraphicsWidget*>(parent));
	} else {
		return new MyQGraphicsItemGroup(static_cast<QGraphicsItem*>(parent));
	}
}

void QGraphicsItemGroup_AddToGroup(void* ptr, void* item)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
		static_cast<QGraphicsItemGroup*>(ptr)->addToGroup(static_cast<QGraphicsObject*>(item));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
		static_cast<QGraphicsItemGroup*>(ptr)->addToGroup(static_cast<QGraphicsWidget*>(item));
	} else {
		static_cast<QGraphicsItemGroup*>(ptr)->addToGroup(static_cast<QGraphicsItem*>(item));
	}
}

void QGraphicsItemGroup_Paint(void* ptr, void* painter, void* option, void* widget)
{
		static_cast<QGraphicsItemGroup*>(ptr)->paint(static_cast<QPainter*>(painter), static_cast<QStyleOptionGraphicsItem*>(option), static_cast<QWidget*>(widget));
}

void QGraphicsItemGroup_PaintDefault(void* ptr, void* painter, void* option, void* widget)
{
		static_cast<QGraphicsItemGroup*>(ptr)->QGraphicsItemGroup::paint(static_cast<QPainter*>(painter), static_cast<QStyleOptionGraphicsItem*>(option), static_cast<QWidget*>(widget));
}

void QGraphicsItemGroup_RemoveFromGroup(void* ptr, void* item)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
		static_cast<QGraphicsItemGroup*>(ptr)->removeFromGroup(static_cast<QGraphicsObject*>(item));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
		static_cast<QGraphicsItemGroup*>(ptr)->removeFromGroup(static_cast<QGraphicsWidget*>(item));
	} else {
		static_cast<QGraphicsItemGroup*>(ptr)->removeFromGroup(static_cast<QGraphicsItem*>(item));
	}
}

void QGraphicsItemGroup_DestroyQGraphicsItemGroup(void* ptr)
{
	static_cast<QGraphicsItemGroup*>(ptr)->~QGraphicsItemGroup();
}

void QGraphicsItemGroup_DestroyQGraphicsItemGroupDefault(void* ptr)
{
	Q_UNUSED(ptr);

}

void* QGraphicsItemGroup_BoundingRect(void* ptr)
{
	return ({ QRectF tmpValue = static_cast<QGraphicsItemGroup*>(ptr)->boundingRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QGraphicsItemGroup_BoundingRectDefault(void* ptr)
{
		return ({ QRectF tmpValue = static_cast<QGraphicsItemGroup*>(ptr)->QGraphicsItemGroup::boundingRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

class MyQGraphicsLayout: public QGraphicsLayout
{
public:
	MyQGraphicsLayout(QGraphicsLayoutItem *parent = Q_NULLPTR) : QGraphicsLayout(parent) {QGraphicsLayout_QGraphicsLayout_QRegisterMetaType();};
	void invalidate() { callbackQGraphicsLayout_Invalidate(this); };
	void removeAt(int index) { callbackQGraphicsLayout_RemoveAt(this, index); };
	void updateGeometry() { callbackQGraphicsLayoutItem_UpdateGeometry(this); };
	void widgetEvent(QEvent * e) { callbackQGraphicsLayout_WidgetEvent(this, e); };
	 ~MyQGraphicsLayout() { callbackQGraphicsLayout_DestroyQGraphicsLayout(this); };
	QGraphicsLayoutItem * itemAt(int i) const { return static_cast<QGraphicsLayoutItem*>(callbackQGraphicsLayout_ItemAt(const_cast<void*>(static_cast<const void*>(this)), i)); };
	int count() const { return callbackQGraphicsLayout_Count(const_cast<void*>(static_cast<const void*>(this))); };
	void getContentsMargins(qreal * left, qreal * top, qreal * right, qreal * bottom) const { callbackQGraphicsLayoutItem_GetContentsMargins(const_cast<void*>(static_cast<const void*>(this)), *left, *top, *right, *bottom); };
	void setGeometry(const QRectF & rect) { callbackQGraphicsLayoutItem_SetGeometry(this, const_cast<QRectF*>(&rect)); };
	QSizeF sizeHint(Qt::SizeHint which, const QSizeF & constraint) const { return *static_cast<QSizeF*>(callbackQGraphicsLayout_SizeHint(const_cast<void*>(static_cast<const void*>(this)), which, const_cast<QSizeF*>(&constraint))); };
};

Q_DECLARE_METATYPE(QGraphicsLayout*)
Q_DECLARE_METATYPE(MyQGraphicsLayout*)

int QGraphicsLayout_QGraphicsLayout_QRegisterMetaType(){qRegisterMetaType<QGraphicsLayout*>(); return qRegisterMetaType<MyQGraphicsLayout*>();}

void* QGraphicsLayout_NewQGraphicsLayout(void* parent)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsLayout(static_cast<QGraphicsWidget*>(parent));
	} else {
		return new MyQGraphicsLayout(static_cast<QGraphicsLayoutItem*>(parent));
	}
}

void QGraphicsLayout_Activate(void* ptr)
{
	static_cast<QGraphicsLayout*>(ptr)->activate();
}

void QGraphicsLayout_AddChildLayoutItem(void* ptr, void* layoutItem)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(layoutItem))) {
		static_cast<QGraphicsLayout*>(ptr)->addChildLayoutItem(static_cast<QGraphicsWidget*>(layoutItem));
	} else {
		static_cast<QGraphicsLayout*>(ptr)->addChildLayoutItem(static_cast<QGraphicsLayoutItem*>(layoutItem));
	}
}

void QGraphicsLayout_Invalidate(void* ptr)
{
	static_cast<QGraphicsLayout*>(ptr)->invalidate();
}

void QGraphicsLayout_InvalidateDefault(void* ptr)
{
		static_cast<QGraphicsLayout*>(ptr)->QGraphicsLayout::invalidate();
}

void QGraphicsLayout_RemoveAt(void* ptr, int index)
{
	static_cast<QGraphicsLayout*>(ptr)->removeAt(index);
}

void QGraphicsLayout_SetContentsMargins(void* ptr, double left, double top, double right, double bottom)
{
	static_cast<QGraphicsLayout*>(ptr)->setContentsMargins(left, top, right, bottom);
}

void QGraphicsLayout_WidgetEvent(void* ptr, void* e)
{
	static_cast<QGraphicsLayout*>(ptr)->widgetEvent(static_cast<QEvent*>(e));
}

void QGraphicsLayout_WidgetEventDefault(void* ptr, void* e)
{
		static_cast<QGraphicsLayout*>(ptr)->QGraphicsLayout::widgetEvent(static_cast<QEvent*>(e));
}

void QGraphicsLayout_DestroyQGraphicsLayout(void* ptr)
{
	static_cast<QGraphicsLayout*>(ptr)->~QGraphicsLayout();
}

void QGraphicsLayout_DestroyQGraphicsLayoutDefault(void* ptr)
{
	Q_UNUSED(ptr);

}

void* QGraphicsLayout_ItemAt(void* ptr, int i)
{
	return static_cast<QGraphicsLayout*>(ptr)->itemAt(i);
}

char QGraphicsLayout_IsActivated(void* ptr)
{
	return static_cast<QGraphicsLayout*>(ptr)->isActivated();
}

int QGraphicsLayout_Count(void* ptr)
{
	return static_cast<QGraphicsLayout*>(ptr)->count();
}

void* QGraphicsLayout_SizeHint(void* ptr, long long which, void* constraint)
{
	return ({ QSizeF tmpValue = static_cast<QGraphicsLayout*>(ptr)->sizeHint(static_cast<Qt::SizeHint>(which), *static_cast<QSizeF*>(constraint)); new QSizeF(tmpValue.width(), tmpValue.height()); });
}

void* QGraphicsLayout_SizeHintDefault(void* ptr, long long which, void* constraint)
{
	Q_UNUSED(ptr);
	Q_UNUSED(which);
	Q_UNUSED(constraint);
	
}

class MyQGraphicsLayoutItem: public QGraphicsLayoutItem
{
public:
	MyQGraphicsLayoutItem(QGraphicsLayoutItem *parent = Q_NULLPTR, bool isLayout = false) : QGraphicsLayoutItem(parent, isLayout) {QGraphicsLayoutItem_QGraphicsLayoutItem_QRegisterMetaType();};
	void setGeometry(const QRectF & rect) { callbackQGraphicsLayoutItem_SetGeometry(this, const_cast<QRectF*>(&rect)); };
	void updateGeometry() { callbackQGraphicsLayoutItem_UpdateGeometry(this); };
	 ~MyQGraphicsLayoutItem() { callbackQGraphicsLayoutItem_DestroyQGraphicsLayoutItem(this); };
	QSizeF sizeHint(Qt::SizeHint which, const QSizeF & constraint) const { return *static_cast<QSizeF*>(callbackQGraphicsLayoutItem_SizeHint(const_cast<void*>(static_cast<const void*>(this)), which, const_cast<QSizeF*>(&constraint))); };
	void getContentsMargins(qreal * left, qreal * top, qreal * right, qreal * bottom) const { callbackQGraphicsLayoutItem_GetContentsMargins(const_cast<void*>(static_cast<const void*>(this)), *left, *top, *right, *bottom); };
};

Q_DECLARE_METATYPE(QGraphicsLayoutItem*)
Q_DECLARE_METATYPE(MyQGraphicsLayoutItem*)

int QGraphicsLayoutItem_QGraphicsLayoutItem_QRegisterMetaType(){qRegisterMetaType<QGraphicsLayoutItem*>(); return qRegisterMetaType<MyQGraphicsLayoutItem*>();}

void* QGraphicsLayoutItem_NewQGraphicsLayoutItem(void* parent, char isLayout)
{
	return new MyQGraphicsLayoutItem(static_cast<QGraphicsLayoutItem*>(parent), isLayout != 0);
}

void QGraphicsLayoutItem_SetGeometry(void* ptr, void* rect)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setGeometry(*static_cast<QRectF*>(rect));
	} else {
		static_cast<QGraphicsLayoutItem*>(ptr)->setGeometry(*static_cast<QRectF*>(rect));
	}
}

void QGraphicsLayoutItem_SetGeometryDefault(void* ptr, void* rect)
{
	if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::setGeometry(*static_cast<QRectF*>(rect));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::setGeometry(*static_cast<QRectF*>(rect));
	} else if (dynamic_cast<QGraphicsLayout*>(static_cast<QGraphicsLayoutItem*>(ptr))) {
		static_cast<QGraphicsLayout*>(ptr)->QGraphicsLayout::setGeometry(*static_cast<QRectF*>(rect));
	} else {
		static_cast<QGraphicsLayoutItem*>(ptr)->QGraphicsLayoutItem::setGeometry(*static_cast<QRectF*>(rect));
	}
}

void QGraphicsLayoutItem_SetGraphicsItem(void* ptr, void* item)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			static_cast<QGraphicsWidget*>(ptr)->setGraphicsItem(static_cast<QGraphicsObject*>(item));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			static_cast<QGraphicsWidget*>(ptr)->setGraphicsItem(static_cast<QGraphicsWidget*>(item));
		} else {
			static_cast<QGraphicsWidget*>(ptr)->setGraphicsItem(static_cast<QGraphicsItem*>(item));
		}
	} else {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
			static_cast<QGraphicsLayoutItem*>(ptr)->setGraphicsItem(static_cast<QGraphicsObject*>(item));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
			static_cast<QGraphicsLayoutItem*>(ptr)->setGraphicsItem(static_cast<QGraphicsWidget*>(item));
		} else {
			static_cast<QGraphicsLayoutItem*>(ptr)->setGraphicsItem(static_cast<QGraphicsItem*>(item));
		}
	}
}

void QGraphicsLayoutItem_SetMaximumHeight(void* ptr, double height)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setMaximumHeight(height);
	} else {
		static_cast<QGraphicsLayoutItem*>(ptr)->setMaximumHeight(height);
	}
}

void QGraphicsLayoutItem_SetMaximumSize(void* ptr, void* size)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setMaximumSize(*static_cast<QSizeF*>(size));
	} else {
		static_cast<QGraphicsLayoutItem*>(ptr)->setMaximumSize(*static_cast<QSizeF*>(size));
	}
}

void QGraphicsLayoutItem_SetMaximumSize2(void* ptr, double w, double h)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setMaximumSize(w, h);
	} else {
		static_cast<QGraphicsLayoutItem*>(ptr)->setMaximumSize(w, h);
	}
}

void QGraphicsLayoutItem_SetMaximumWidth(void* ptr, double width)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setMaximumWidth(width);
	} else {
		static_cast<QGraphicsLayoutItem*>(ptr)->setMaximumWidth(width);
	}
}

void QGraphicsLayoutItem_SetMinimumHeight(void* ptr, double height)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setMinimumHeight(height);
	} else {
		static_cast<QGraphicsLayoutItem*>(ptr)->setMinimumHeight(height);
	}
}

void QGraphicsLayoutItem_SetMinimumSize(void* ptr, void* size)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setMinimumSize(*static_cast<QSizeF*>(size));
	} else {
		static_cast<QGraphicsLayoutItem*>(ptr)->setMinimumSize(*static_cast<QSizeF*>(size));
	}
}

void QGraphicsLayoutItem_SetMinimumSize2(void* ptr, double w, double h)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setMinimumSize(w, h);
	} else {
		static_cast<QGraphicsLayoutItem*>(ptr)->setMinimumSize(w, h);
	}
}

void QGraphicsLayoutItem_SetMinimumWidth(void* ptr, double width)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setMinimumWidth(width);
	} else {
		static_cast<QGraphicsLayoutItem*>(ptr)->setMinimumWidth(width);
	}
}

void QGraphicsLayoutItem_SetOwnedByLayout(void* ptr, char ownership)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setOwnedByLayout(ownership != 0);
	} else {
		static_cast<QGraphicsLayoutItem*>(ptr)->setOwnedByLayout(ownership != 0);
	}
}

void QGraphicsLayoutItem_SetParentLayoutItem(void* ptr, void* parent)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(parent))) {
			static_cast<QGraphicsWidget*>(ptr)->setParentLayoutItem(static_cast<QGraphicsWidget*>(parent));
		} else {
			static_cast<QGraphicsWidget*>(ptr)->setParentLayoutItem(static_cast<QGraphicsLayoutItem*>(parent));
		}
	} else {
		if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(parent))) {
			static_cast<QGraphicsLayoutItem*>(ptr)->setParentLayoutItem(static_cast<QGraphicsWidget*>(parent));
		} else {
			static_cast<QGraphicsLayoutItem*>(ptr)->setParentLayoutItem(static_cast<QGraphicsLayoutItem*>(parent));
		}
	}
}

void QGraphicsLayoutItem_SetPreferredHeight(void* ptr, double height)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setPreferredHeight(height);
	} else {
		static_cast<QGraphicsLayoutItem*>(ptr)->setPreferredHeight(height);
	}
}

void QGraphicsLayoutItem_SetPreferredSize(void* ptr, void* size)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setPreferredSize(*static_cast<QSizeF*>(size));
	} else {
		static_cast<QGraphicsLayoutItem*>(ptr)->setPreferredSize(*static_cast<QSizeF*>(size));
	}
}

void QGraphicsLayoutItem_SetPreferredSize2(void* ptr, double w, double h)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setPreferredSize(w, h);
	} else {
		static_cast<QGraphicsLayoutItem*>(ptr)->setPreferredSize(w, h);
	}
}

void QGraphicsLayoutItem_SetPreferredWidth(void* ptr, double width)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setPreferredWidth(width);
	} else {
		static_cast<QGraphicsLayoutItem*>(ptr)->setPreferredWidth(width);
	}
}

void QGraphicsLayoutItem_SetSizePolicy2(void* ptr, long long hPolicy, long long vPolicy, long long controlType)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setSizePolicy(static_cast<QSizePolicy::Policy>(hPolicy), static_cast<QSizePolicy::Policy>(vPolicy), static_cast<QSizePolicy::ControlType>(controlType));
	} else {
		static_cast<QGraphicsLayoutItem*>(ptr)->setSizePolicy(static_cast<QSizePolicy::Policy>(hPolicy), static_cast<QSizePolicy::Policy>(vPolicy), static_cast<QSizePolicy::ControlType>(controlType));
	}
}

void QGraphicsLayoutItem_SetSizePolicy(void* ptr, void* policy)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setSizePolicy(*static_cast<QSizePolicy*>(policy));
	} else {
		static_cast<QGraphicsLayoutItem*>(ptr)->setSizePolicy(*static_cast<QSizePolicy*>(policy));
	}
}

void QGraphicsLayoutItem_UpdateGeometry(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->updateGeometry();
	} else {
		static_cast<QGraphicsLayoutItem*>(ptr)->updateGeometry();
	}
}

void QGraphicsLayoutItem_UpdateGeometryDefault(void* ptr)
{
	if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::updateGeometry();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::updateGeometry();
	} else if (dynamic_cast<QGraphicsLayout*>(static_cast<QGraphicsLayoutItem*>(ptr))) {
		static_cast<QGraphicsLayout*>(ptr)->QGraphicsLayout::updateGeometry();
	} else {
		static_cast<QGraphicsLayoutItem*>(ptr)->QGraphicsLayoutItem::updateGeometry();
	}
}

void QGraphicsLayoutItem_DestroyQGraphicsLayoutItem(void* ptr)
{
	static_cast<QGraphicsLayoutItem*>(ptr)->~QGraphicsLayoutItem();
}

void QGraphicsLayoutItem_DestroyQGraphicsLayoutItemDefault(void* ptr)
{
	Q_UNUSED(ptr);

}

void* QGraphicsLayoutItem_GraphicsItem(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->graphicsItem();
	} else {
		return static_cast<QGraphicsLayoutItem*>(ptr)->graphicsItem();
	}
}

void* QGraphicsLayoutItem_ParentLayoutItem(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->parentLayoutItem();
	} else {
		return static_cast<QGraphicsLayoutItem*>(ptr)->parentLayoutItem();
	}
}

void* QGraphicsLayoutItem_ContentsRect(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({ QRectF tmpValue = static_cast<QGraphicsWidget*>(ptr)->contentsRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	} else {
		return ({ QRectF tmpValue = static_cast<QGraphicsLayoutItem*>(ptr)->contentsRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	}
}

void* QGraphicsLayoutItem_Geometry(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({ QRectF tmpValue = static_cast<QGraphicsWidget*>(ptr)->geometry(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	} else {
		return ({ QRectF tmpValue = static_cast<QGraphicsLayoutItem*>(ptr)->geometry(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	}
}

void* QGraphicsLayoutItem_EffectiveSizeHint(void* ptr, long long which, void* constraint)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({ QSizeF tmpValue = static_cast<QGraphicsWidget*>(ptr)->effectiveSizeHint(static_cast<Qt::SizeHint>(which), *static_cast<QSizeF*>(constraint)); new QSizeF(tmpValue.width(), tmpValue.height()); });
	} else {
		return ({ QSizeF tmpValue = static_cast<QGraphicsLayoutItem*>(ptr)->effectiveSizeHint(static_cast<Qt::SizeHint>(which), *static_cast<QSizeF*>(constraint)); new QSizeF(tmpValue.width(), tmpValue.height()); });
	}
}

void* QGraphicsLayoutItem_MaximumSize(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({ QSizeF tmpValue = static_cast<QGraphicsWidget*>(ptr)->maximumSize(); new QSizeF(tmpValue.width(), tmpValue.height()); });
	} else {
		return ({ QSizeF tmpValue = static_cast<QGraphicsLayoutItem*>(ptr)->maximumSize(); new QSizeF(tmpValue.width(), tmpValue.height()); });
	}
}

void* QGraphicsLayoutItem_MinimumSize(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({ QSizeF tmpValue = static_cast<QGraphicsWidget*>(ptr)->minimumSize(); new QSizeF(tmpValue.width(), tmpValue.height()); });
	} else {
		return ({ QSizeF tmpValue = static_cast<QGraphicsLayoutItem*>(ptr)->minimumSize(); new QSizeF(tmpValue.width(), tmpValue.height()); });
	}
}

void* QGraphicsLayoutItem_PreferredSize(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({ QSizeF tmpValue = static_cast<QGraphicsWidget*>(ptr)->preferredSize(); new QSizeF(tmpValue.width(), tmpValue.height()); });
	} else {
		return ({ QSizeF tmpValue = static_cast<QGraphicsLayoutItem*>(ptr)->preferredSize(); new QSizeF(tmpValue.width(), tmpValue.height()); });
	}
}

void* QGraphicsLayoutItem_SizeHint(void* ptr, long long which, void* constraint)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({ QSizeF tmpValue = static_cast<QGraphicsWidget*>(ptr)->sizeHint(static_cast<Qt::SizeHint>(which), *static_cast<QSizeF*>(constraint)); new QSizeF(tmpValue.width(), tmpValue.height()); });
	} else {
		return ({ QSizeF tmpValue = static_cast<QGraphicsLayoutItem*>(ptr)->sizeHint(static_cast<Qt::SizeHint>(which), *static_cast<QSizeF*>(constraint)); new QSizeF(tmpValue.width(), tmpValue.height()); });
	}
}

void* QGraphicsLayoutItem_SizePolicy(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return new QSizePolicy(static_cast<QGraphicsWidget*>(ptr)->sizePolicy());
	} else {
		return new QSizePolicy(static_cast<QGraphicsLayoutItem*>(ptr)->sizePolicy());
	}
}

char QGraphicsLayoutItem_IsLayout(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->isLayout();
	} else {
		return static_cast<QGraphicsLayoutItem*>(ptr)->isLayout();
	}
}

char QGraphicsLayoutItem_OwnedByLayout(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->ownedByLayout();
	} else {
		return static_cast<QGraphicsLayoutItem*>(ptr)->ownedByLayout();
	}
}

double QGraphicsLayoutItem_MaximumHeight(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->maximumHeight();
	} else {
		return static_cast<QGraphicsLayoutItem*>(ptr)->maximumHeight();
	}
}

double QGraphicsLayoutItem_MaximumWidth(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->maximumWidth();
	} else {
		return static_cast<QGraphicsLayoutItem*>(ptr)->maximumWidth();
	}
}

double QGraphicsLayoutItem_MinimumHeight(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->minimumHeight();
	} else {
		return static_cast<QGraphicsLayoutItem*>(ptr)->minimumHeight();
	}
}

double QGraphicsLayoutItem_MinimumWidth(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->minimumWidth();
	} else {
		return static_cast<QGraphicsLayoutItem*>(ptr)->minimumWidth();
	}
}

double QGraphicsLayoutItem_PreferredHeight(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->preferredHeight();
	} else {
		return static_cast<QGraphicsLayoutItem*>(ptr)->preferredHeight();
	}
}

double QGraphicsLayoutItem_PreferredWidth(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->preferredWidth();
	} else {
		return static_cast<QGraphicsLayoutItem*>(ptr)->preferredWidth();
	}
}

void QGraphicsLayoutItem_GetContentsMargins(void* ptr, double left, double top, double right, double bottom)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->getContentsMargins(&left, &top, &right, &bottom);
	} else {
		static_cast<QGraphicsLayoutItem*>(ptr)->getContentsMargins(&left, &top, &right, &bottom);
	}
}

void QGraphicsLayoutItem_GetContentsMarginsDefault(void* ptr, double left, double top, double right, double bottom)
{
	if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::getContentsMargins(&left, &top, &right, &bottom);
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::getContentsMargins(&left, &top, &right, &bottom);
	} else if (dynamic_cast<QGraphicsLayout*>(static_cast<QGraphicsLayoutItem*>(ptr))) {
		static_cast<QGraphicsLayout*>(ptr)->QGraphicsLayout::getContentsMargins(&left, &top, &right, &bottom);
	} else {
		static_cast<QGraphicsLayoutItem*>(ptr)->QGraphicsLayoutItem::getContentsMargins(&left, &top, &right, &bottom);
	}
}

class MyQGraphicsLineItem: public QGraphicsLineItem
{
public:
	MyQGraphicsLineItem(QGraphicsItem *parent = Q_NULLPTR) : QGraphicsLineItem(parent) {QGraphicsLineItem_QGraphicsLineItem_QRegisterMetaType();};
	MyQGraphicsLineItem(const QLineF &line, QGraphicsItem *parent = Q_NULLPTR) : QGraphicsLineItem(line, parent) {QGraphicsLineItem_QGraphicsLineItem_QRegisterMetaType();};
	MyQGraphicsLineItem(qreal x1, qreal y1, qreal x2, qreal y2, QGraphicsItem *parent = Q_NULLPTR) : QGraphicsLineItem(x1, y1, x2, y2, parent) {QGraphicsLineItem_QGraphicsLineItem_QRegisterMetaType();};
	void paint(QPainter * painter, const QStyleOptionGraphicsItem * option, QWidget * widget) { callbackQGraphicsLineItem_Paint(this, painter, const_cast<QStyleOptionGraphicsItem*>(option), widget); };
	 ~MyQGraphicsLineItem() { callbackQGraphicsLineItem_DestroyQGraphicsLineItem(this); };
	QPainterPath opaqueArea() const { return *static_cast<QPainterPath*>(callbackQGraphicsItem_OpaqueArea(const_cast<void*>(static_cast<const void*>(this)))); };
	QPainterPath shape() const { return *static_cast<QPainterPath*>(callbackQGraphicsItem_Shape(const_cast<void*>(static_cast<const void*>(this)))); };
	QRectF boundingRect() const { return *static_cast<QRectF*>(callbackQGraphicsLineItem_BoundingRect(const_cast<void*>(static_cast<const void*>(this)))); };
	bool contains(const QPointF & point) const { return callbackQGraphicsItem_Contains(const_cast<void*>(static_cast<const void*>(this)), const_cast<QPointF*>(&point)) != 0; };
	bool isObscuredBy(const QGraphicsItem * item) const { return callbackQGraphicsItem_IsObscuredBy(const_cast<void*>(static_cast<const void*>(this)), const_cast<QGraphicsItem*>(item)) != 0; };
	int type() const { return callbackQGraphicsItem_Type(const_cast<void*>(static_cast<const void*>(this))); };
	QVariant itemChange(QGraphicsItem::GraphicsItemChange change, const QVariant & value) { return *static_cast<QVariant*>(callbackQGraphicsItem_ItemChange(this, change, const_cast<QVariant*>(&value))); };
	bool sceneEvent(QEvent * event) { return callbackQGraphicsItem_SceneEvent(this, event) != 0; };
	bool sceneEventFilter(QGraphicsItem * watched, QEvent * event) { return callbackQGraphicsItem_SceneEventFilter(this, watched, event) != 0; };
	void advance(int phase) { callbackQGraphicsItem_Advance(this, phase); };
	void contextMenuEvent(QGraphicsSceneContextMenuEvent * event) { callbackQGraphicsItem_ContextMenuEvent(this, event); };
	void dragEnterEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DragEnterEvent(this, event); };
	void dragLeaveEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DragLeaveEvent(this, event); };
	void dragMoveEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DragMoveEvent(this, event); };
	void dropEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DropEvent(this, event); };
	void focusInEvent(QFocusEvent * event) { callbackQGraphicsItem_FocusInEvent(this, event); };
	void focusOutEvent(QFocusEvent * event) { callbackQGraphicsItem_FocusOutEvent(this, event); };
	void hoverEnterEvent(QGraphicsSceneHoverEvent * event) { callbackQGraphicsItem_HoverEnterEvent(this, event); };
	void hoverLeaveEvent(QGraphicsSceneHoverEvent * event) { callbackQGraphicsItem_HoverLeaveEvent(this, event); };
	void hoverMoveEvent(QGraphicsSceneHoverEvent * event) { callbackQGraphicsItem_HoverMoveEvent(this, event); };
	void inputMethodEvent(QInputMethodEvent * event) { callbackQGraphicsItem_InputMethodEvent(this, event); };
	void keyPressEvent(QKeyEvent * event) { callbackQGraphicsItem_KeyPressEvent(this, event); };
	void keyReleaseEvent(QKeyEvent * event) { callbackQGraphicsItem_KeyReleaseEvent(this, event); };
	void mouseDoubleClickEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MouseDoubleClickEvent(this, event); };
	void mouseMoveEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MouseMoveEvent(this, event); };
	void mousePressEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MousePressEvent(this, event); };
	void mouseReleaseEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MouseReleaseEvent(this, event); };
	void wheelEvent(QGraphicsSceneWheelEvent * event) { callbackQGraphicsItem_WheelEvent(this, event); };
	QVariant inputMethodQuery(Qt::InputMethodQuery query) const { return *static_cast<QVariant*>(callbackQGraphicsItem_InputMethodQuery(const_cast<void*>(static_cast<const void*>(this)), query)); };
	bool collidesWithItem(const QGraphicsItem * other, Qt::ItemSelectionMode mode) const { return callbackQGraphicsItem_CollidesWithItem(const_cast<void*>(static_cast<const void*>(this)), const_cast<QGraphicsItem*>(other), mode) != 0; };
	bool collidesWithPath(const QPainterPath & path, Qt::ItemSelectionMode mode) const { return callbackQGraphicsItem_CollidesWithPath(const_cast<void*>(static_cast<const void*>(this)), const_cast<QPainterPath*>(&path), mode) != 0; };
};

Q_DECLARE_METATYPE(QGraphicsLineItem*)
Q_DECLARE_METATYPE(MyQGraphicsLineItem*)

int QGraphicsLineItem_QGraphicsLineItem_QRegisterMetaType(){qRegisterMetaType<QGraphicsLineItem*>(); return qRegisterMetaType<MyQGraphicsLineItem*>();}

void* QGraphicsLineItem_NewQGraphicsLineItem(void* parent)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsLineItem(static_cast<QGraphicsObject*>(parent));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsLineItem(static_cast<QGraphicsWidget*>(parent));
	} else {
		return new MyQGraphicsLineItem(static_cast<QGraphicsItem*>(parent));
	}
}

void* QGraphicsLineItem_NewQGraphicsLineItem2(void* line, void* parent)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsLineItem(*static_cast<QLineF*>(line), static_cast<QGraphicsObject*>(parent));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsLineItem(*static_cast<QLineF*>(line), static_cast<QGraphicsWidget*>(parent));
	} else {
		return new MyQGraphicsLineItem(*static_cast<QLineF*>(line), static_cast<QGraphicsItem*>(parent));
	}
}

void* QGraphicsLineItem_NewQGraphicsLineItem3(double x1, double y1, double x2, double y2, void* parent)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsLineItem(x1, y1, x2, y2, static_cast<QGraphicsObject*>(parent));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsLineItem(x1, y1, x2, y2, static_cast<QGraphicsWidget*>(parent));
	} else {
		return new MyQGraphicsLineItem(x1, y1, x2, y2, static_cast<QGraphicsItem*>(parent));
	}
}

void QGraphicsLineItem_Paint(void* ptr, void* painter, void* option, void* widget)
{
		static_cast<QGraphicsLineItem*>(ptr)->paint(static_cast<QPainter*>(painter), static_cast<QStyleOptionGraphicsItem*>(option), static_cast<QWidget*>(widget));
}

void QGraphicsLineItem_PaintDefault(void* ptr, void* painter, void* option, void* widget)
{
		static_cast<QGraphicsLineItem*>(ptr)->QGraphicsLineItem::paint(static_cast<QPainter*>(painter), static_cast<QStyleOptionGraphicsItem*>(option), static_cast<QWidget*>(widget));
}

void QGraphicsLineItem_SetLine(void* ptr, void* line)
{
	static_cast<QGraphicsLineItem*>(ptr)->setLine(*static_cast<QLineF*>(line));
}

void QGraphicsLineItem_SetLine2(void* ptr, double x1, double y1, double x2, double y2)
{
	static_cast<QGraphicsLineItem*>(ptr)->setLine(x1, y1, x2, y2);
}

void QGraphicsLineItem_SetPen(void* ptr, void* pen)
{
	static_cast<QGraphicsLineItem*>(ptr)->setPen(*static_cast<QPen*>(pen));
}

void QGraphicsLineItem_DestroyQGraphicsLineItem(void* ptr)
{
	static_cast<QGraphicsLineItem*>(ptr)->~QGraphicsLineItem();
}

void QGraphicsLineItem_DestroyQGraphicsLineItemDefault(void* ptr)
{
	Q_UNUSED(ptr);

}

void* QGraphicsLineItem_Line(void* ptr)
{
	return ({ QLineF tmpValue = static_cast<QGraphicsLineItem*>(ptr)->line(); new QLineF(tmpValue.p1(), tmpValue.p2()); });
}

void* QGraphicsLineItem_Pen(void* ptr)
{
	return new QPen(static_cast<QGraphicsLineItem*>(ptr)->pen());
}

void* QGraphicsLineItem_BoundingRect(void* ptr)
{
	return ({ QRectF tmpValue = static_cast<QGraphicsLineItem*>(ptr)->boundingRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QGraphicsLineItem_BoundingRectDefault(void* ptr)
{
		return ({ QRectF tmpValue = static_cast<QGraphicsLineItem*>(ptr)->QGraphicsLineItem::boundingRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

class MyQGraphicsObject: public QGraphicsObject
{
public:
	MyQGraphicsObject(QGraphicsItem *parent = Q_NULLPTR) : QGraphicsObject(parent) {QGraphicsObject_QGraphicsObject_QRegisterMetaType();};
	bool event(QEvent * ev) { return callbackQGraphicsObject_Event(this, ev) != 0; };
	void Signal_EnabledChanged() { callbackQGraphicsObject_EnabledChanged(this); };
	void Signal_OpacityChanged() { callbackQGraphicsObject_OpacityChanged(this); };
	void Signal_ParentChanged() { callbackQGraphicsObject_ParentChanged(this); };
	void Signal_RotationChanged() { callbackQGraphicsObject_RotationChanged(this); };
	void Signal_ScaleChanged() { callbackQGraphicsObject_ScaleChanged(this); };
	void updateMicroFocus() { callbackQGraphicsObject_UpdateMicroFocus(this); };
	void Signal_VisibleChanged() { callbackQGraphicsObject_VisibleChanged(this); };
	void Signal_XChanged() { callbackQGraphicsObject_XChanged(this); };
	void Signal_YChanged() { callbackQGraphicsObject_YChanged(this); };
	void Signal_ZChanged() { callbackQGraphicsObject_ZChanged(this); };
	 ~MyQGraphicsObject() { callbackQGraphicsObject_DestroyQGraphicsObject(this); };
	const QMetaObject * metaObject() const { return static_cast<QMetaObject*>(callbackQGraphicsObject_MetaObject(const_cast<void*>(static_cast<const void*>(this)))); };
	bool eventFilter(QObject * watched, QEvent * event) { return callbackQGraphicsObject_EventFilter(this, watched, event) != 0; };
	void childEvent(QChildEvent * event) { callbackQGraphicsObject_ChildEvent(this, event); };
	void connectNotify(const QMetaMethod & sign) { callbackQGraphicsObject_ConnectNotify(this, const_cast<QMetaMethod*>(&sign)); };
	void customEvent(QEvent * event) { callbackQGraphicsObject_CustomEvent(this, event); };
	void deleteLater() { callbackQGraphicsObject_DeleteLater(this); };
	void Signal_Destroyed(QObject * obj) { callbackQGraphicsObject_Destroyed(this, obj); };
	void disconnectNotify(const QMetaMethod & sign) { callbackQGraphicsObject_DisconnectNotify(this, const_cast<QMetaMethod*>(&sign)); };
	void Signal_ObjectNameChanged(const QString & objectName) { QByteArray taa2c4f = objectName.toUtf8(); QtWidgets_PackedString objectNamePacked = { const_cast<char*>(taa2c4f.prepend("WHITESPACE").constData()+10), taa2c4f.size()-10 };callbackQGraphicsObject_ObjectNameChanged(this, objectNamePacked); };
	void timerEvent(QTimerEvent * event) { callbackQGraphicsObject_TimerEvent(this, event); };
	QVariant itemChange(QGraphicsItem::GraphicsItemChange change, const QVariant & value) { return *static_cast<QVariant*>(callbackQGraphicsItem_ItemChange(this, change, const_cast<QVariant*>(&value))); };
	bool sceneEvent(QEvent * event) { return callbackQGraphicsItem_SceneEvent(this, event) != 0; };
	bool sceneEventFilter(QGraphicsItem * watched, QEvent * event) { return callbackQGraphicsItem_SceneEventFilter(this, watched, event) != 0; };
	void advance(int phase) { callbackQGraphicsItem_Advance(this, phase); };
	void contextMenuEvent(QGraphicsSceneContextMenuEvent * event) { callbackQGraphicsItem_ContextMenuEvent(this, event); };
	void dragEnterEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DragEnterEvent(this, event); };
	void dragLeaveEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DragLeaveEvent(this, event); };
	void dragMoveEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DragMoveEvent(this, event); };
	void dropEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DropEvent(this, event); };
	void focusInEvent(QFocusEvent * event) { callbackQGraphicsItem_FocusInEvent(this, event); };
	void focusOutEvent(QFocusEvent * event) { callbackQGraphicsItem_FocusOutEvent(this, event); };
	void hoverEnterEvent(QGraphicsSceneHoverEvent * event) { callbackQGraphicsItem_HoverEnterEvent(this, event); };
	void hoverLeaveEvent(QGraphicsSceneHoverEvent * event) { callbackQGraphicsItem_HoverLeaveEvent(this, event); };
	void hoverMoveEvent(QGraphicsSceneHoverEvent * event) { callbackQGraphicsItem_HoverMoveEvent(this, event); };
	void inputMethodEvent(QInputMethodEvent * event) { callbackQGraphicsItem_InputMethodEvent(this, event); };
	void keyPressEvent(QKeyEvent * event) { callbackQGraphicsItem_KeyPressEvent(this, event); };
	void keyReleaseEvent(QKeyEvent * event) { callbackQGraphicsItem_KeyReleaseEvent(this, event); };
	void mouseDoubleClickEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MouseDoubleClickEvent(this, event); };
	void mouseMoveEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MouseMoveEvent(this, event); };
	void mousePressEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MousePressEvent(this, event); };
	void mouseReleaseEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MouseReleaseEvent(this, event); };
	void paint(QPainter * painter, const QStyleOptionGraphicsItem * option, QWidget * widget) { callbackQGraphicsObject_Paint(this, painter, const_cast<QStyleOptionGraphicsItem*>(option), widget); };
	void wheelEvent(QGraphicsSceneWheelEvent * event) { callbackQGraphicsItem_WheelEvent(this, event); };
	QPainterPath opaqueArea() const { return *static_cast<QPainterPath*>(callbackQGraphicsItem_OpaqueArea(const_cast<void*>(static_cast<const void*>(this)))); };
	QPainterPath shape() const { return *static_cast<QPainterPath*>(callbackQGraphicsItem_Shape(const_cast<void*>(static_cast<const void*>(this)))); };
	QRectF boundingRect() const { return *static_cast<QRectF*>(callbackQGraphicsObject_BoundingRect(const_cast<void*>(static_cast<const void*>(this)))); };
	QVariant inputMethodQuery(Qt::InputMethodQuery query) const { return *static_cast<QVariant*>(callbackQGraphicsItem_InputMethodQuery(const_cast<void*>(static_cast<const void*>(this)), query)); };
	bool collidesWithItem(const QGraphicsItem * other, Qt::ItemSelectionMode mode) const { return callbackQGraphicsItem_CollidesWithItem(const_cast<void*>(static_cast<const void*>(this)), const_cast<QGraphicsItem*>(other), mode) != 0; };
	bool collidesWithPath(const QPainterPath & path, Qt::ItemSelectionMode mode) const { return callbackQGraphicsItem_CollidesWithPath(const_cast<void*>(static_cast<const void*>(this)), const_cast<QPainterPath*>(&path), mode) != 0; };
	bool contains(const QPointF & point) const { return callbackQGraphicsItem_Contains(const_cast<void*>(static_cast<const void*>(this)), const_cast<QPointF*>(&point)) != 0; };
	bool isObscuredBy(const QGraphicsItem * item) const { return callbackQGraphicsItem_IsObscuredBy(const_cast<void*>(static_cast<const void*>(this)), const_cast<QGraphicsItem*>(item)) != 0; };
	int type() const { return callbackQGraphicsItem_Type(const_cast<void*>(static_cast<const void*>(this))); };
};

Q_DECLARE_METATYPE(QGraphicsObject*)
Q_DECLARE_METATYPE(MyQGraphicsObject*)

int QGraphicsObject_QGraphicsObject_QRegisterMetaType(){qRegisterMetaType<QGraphicsObject*>(); return qRegisterMetaType<MyQGraphicsObject*>();}

void* QGraphicsObject_NewQGraphicsObject(void* parent)
{
	return new MyQGraphicsObject(static_cast<QGraphicsItem*>(parent));
}

struct QtWidgets_PackedString QGraphicsObject_QGraphicsObject_Tr(char* s, char* c, int n)
{
		return ({ QByteArray t4d57a6 = QGraphicsObject::tr(const_cast<const char*>(s), const_cast<const char*>(c), n).toUtf8(); QtWidgets_PackedString { const_cast<char*>(t4d57a6.prepend("WHITESPACE").constData()+10), t4d57a6.size()-10 }; });
}

char QGraphicsObject_Event(void* ptr, void* ev)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->event(static_cast<QEvent*>(ev));
	} else {
		return static_cast<QGraphicsObject*>(ptr)->event(static_cast<QEvent*>(ev));
	}
}

char QGraphicsObject_EventDefault(void* ptr, void* ev)
{
	if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::event(static_cast<QEvent*>(ev));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::event(static_cast<QEvent*>(ev));
	} else if (dynamic_cast<QGraphicsTextItem*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::event(static_cast<QEvent*>(ev));
	} else {
		return static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::event(static_cast<QEvent*>(ev));
	}
}

void QGraphicsObject_ConnectEnabledChanged(void* ptr, long long t)
{
	QObject::connect(static_cast<QGraphicsObject*>(ptr), static_cast<void (QGraphicsObject::*)()>(&QGraphicsObject::enabledChanged), static_cast<MyQGraphicsObject*>(ptr), static_cast<void (MyQGraphicsObject::*)()>(&MyQGraphicsObject::Signal_EnabledChanged), static_cast<Qt::ConnectionType>(t));
}

void QGraphicsObject_DisconnectEnabledChanged(void* ptr)
{
	QObject::disconnect(static_cast<QGraphicsObject*>(ptr), static_cast<void (QGraphicsObject::*)()>(&QGraphicsObject::enabledChanged), static_cast<MyQGraphicsObject*>(ptr), static_cast<void (MyQGraphicsObject::*)()>(&MyQGraphicsObject::Signal_EnabledChanged));
}

void QGraphicsObject_EnabledChanged(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->enabledChanged();
	} else {
		static_cast<QGraphicsObject*>(ptr)->enabledChanged();
	}
}

void QGraphicsObject_GrabGesture(void* ptr, long long gesture, long long flags)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->grabGesture(static_cast<Qt::GestureType>(gesture), static_cast<Qt::GestureFlag>(flags));
	} else {
		static_cast<QGraphicsObject*>(ptr)->grabGesture(static_cast<Qt::GestureType>(gesture), static_cast<Qt::GestureFlag>(flags));
	}
}

void QGraphicsObject_ConnectOpacityChanged(void* ptr, long long t)
{
	QObject::connect(static_cast<QGraphicsObject*>(ptr), static_cast<void (QGraphicsObject::*)()>(&QGraphicsObject::opacityChanged), static_cast<MyQGraphicsObject*>(ptr), static_cast<void (MyQGraphicsObject::*)()>(&MyQGraphicsObject::Signal_OpacityChanged), static_cast<Qt::ConnectionType>(t));
}

void QGraphicsObject_DisconnectOpacityChanged(void* ptr)
{
	QObject::disconnect(static_cast<QGraphicsObject*>(ptr), static_cast<void (QGraphicsObject::*)()>(&QGraphicsObject::opacityChanged), static_cast<MyQGraphicsObject*>(ptr), static_cast<void (MyQGraphicsObject::*)()>(&MyQGraphicsObject::Signal_OpacityChanged));
}

void QGraphicsObject_OpacityChanged(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->opacityChanged();
	} else {
		static_cast<QGraphicsObject*>(ptr)->opacityChanged();
	}
}

void QGraphicsObject_ConnectParentChanged(void* ptr, long long t)
{
	QObject::connect(static_cast<QGraphicsObject*>(ptr), static_cast<void (QGraphicsObject::*)()>(&QGraphicsObject::parentChanged), static_cast<MyQGraphicsObject*>(ptr), static_cast<void (MyQGraphicsObject::*)()>(&MyQGraphicsObject::Signal_ParentChanged), static_cast<Qt::ConnectionType>(t));
}

void QGraphicsObject_DisconnectParentChanged(void* ptr)
{
	QObject::disconnect(static_cast<QGraphicsObject*>(ptr), static_cast<void (QGraphicsObject::*)()>(&QGraphicsObject::parentChanged), static_cast<MyQGraphicsObject*>(ptr), static_cast<void (MyQGraphicsObject::*)()>(&MyQGraphicsObject::Signal_ParentChanged));
}

void QGraphicsObject_ParentChanged(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->parentChanged();
	} else {
		static_cast<QGraphicsObject*>(ptr)->parentChanged();
	}
}

void QGraphicsObject_ConnectRotationChanged(void* ptr, long long t)
{
	QObject::connect(static_cast<QGraphicsObject*>(ptr), static_cast<void (QGraphicsObject::*)()>(&QGraphicsObject::rotationChanged), static_cast<MyQGraphicsObject*>(ptr), static_cast<void (MyQGraphicsObject::*)()>(&MyQGraphicsObject::Signal_RotationChanged), static_cast<Qt::ConnectionType>(t));
}

void QGraphicsObject_DisconnectRotationChanged(void* ptr)
{
	QObject::disconnect(static_cast<QGraphicsObject*>(ptr), static_cast<void (QGraphicsObject::*)()>(&QGraphicsObject::rotationChanged), static_cast<MyQGraphicsObject*>(ptr), static_cast<void (MyQGraphicsObject::*)()>(&MyQGraphicsObject::Signal_RotationChanged));
}

void QGraphicsObject_RotationChanged(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->rotationChanged();
	} else {
		static_cast<QGraphicsObject*>(ptr)->rotationChanged();
	}
}

void QGraphicsObject_ConnectScaleChanged(void* ptr, long long t)
{
	QObject::connect(static_cast<QGraphicsObject*>(ptr), static_cast<void (QGraphicsObject::*)()>(&QGraphicsObject::scaleChanged), static_cast<MyQGraphicsObject*>(ptr), static_cast<void (MyQGraphicsObject::*)()>(&MyQGraphicsObject::Signal_ScaleChanged), static_cast<Qt::ConnectionType>(t));
}

void QGraphicsObject_DisconnectScaleChanged(void* ptr)
{
	QObject::disconnect(static_cast<QGraphicsObject*>(ptr), static_cast<void (QGraphicsObject::*)()>(&QGraphicsObject::scaleChanged), static_cast<MyQGraphicsObject*>(ptr), static_cast<void (MyQGraphicsObject::*)()>(&MyQGraphicsObject::Signal_ScaleChanged));
}

void QGraphicsObject_ScaleChanged(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->scaleChanged();
	} else {
		static_cast<QGraphicsObject*>(ptr)->scaleChanged();
	}
}

void QGraphicsObject_UngrabGesture(void* ptr, long long gesture)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->ungrabGesture(static_cast<Qt::GestureType>(gesture));
	} else {
		static_cast<QGraphicsObject*>(ptr)->ungrabGesture(static_cast<Qt::GestureType>(gesture));
	}
}

void QGraphicsObject_UpdateMicroFocus(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		QMetaObject::invokeMethod(static_cast<QGraphicsWidget*>(ptr), "updateMicroFocus");
	} else {
		QMetaObject::invokeMethod(static_cast<QGraphicsObject*>(ptr), "updateMicroFocus");
	}
}

void QGraphicsObject_UpdateMicroFocusDefault(void* ptr)
{
	if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::updateMicroFocus();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::updateMicroFocus();
	} else if (dynamic_cast<QGraphicsTextItem*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::updateMicroFocus();
	} else {
		static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::updateMicroFocus();
	}
}

void QGraphicsObject_ConnectVisibleChanged(void* ptr, long long t)
{
	QObject::connect(static_cast<QGraphicsObject*>(ptr), static_cast<void (QGraphicsObject::*)()>(&QGraphicsObject::visibleChanged), static_cast<MyQGraphicsObject*>(ptr), static_cast<void (MyQGraphicsObject::*)()>(&MyQGraphicsObject::Signal_VisibleChanged), static_cast<Qt::ConnectionType>(t));
}

void QGraphicsObject_DisconnectVisibleChanged(void* ptr)
{
	QObject::disconnect(static_cast<QGraphicsObject*>(ptr), static_cast<void (QGraphicsObject::*)()>(&QGraphicsObject::visibleChanged), static_cast<MyQGraphicsObject*>(ptr), static_cast<void (MyQGraphicsObject::*)()>(&MyQGraphicsObject::Signal_VisibleChanged));
}

void QGraphicsObject_VisibleChanged(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->visibleChanged();
	} else {
		static_cast<QGraphicsObject*>(ptr)->visibleChanged();
	}
}

void QGraphicsObject_ConnectXChanged(void* ptr, long long t)
{
	QObject::connect(static_cast<QGraphicsObject*>(ptr), static_cast<void (QGraphicsObject::*)()>(&QGraphicsObject::xChanged), static_cast<MyQGraphicsObject*>(ptr), static_cast<void (MyQGraphicsObject::*)()>(&MyQGraphicsObject::Signal_XChanged), static_cast<Qt::ConnectionType>(t));
}

void QGraphicsObject_DisconnectXChanged(void* ptr)
{
	QObject::disconnect(static_cast<QGraphicsObject*>(ptr), static_cast<void (QGraphicsObject::*)()>(&QGraphicsObject::xChanged), static_cast<MyQGraphicsObject*>(ptr), static_cast<void (MyQGraphicsObject::*)()>(&MyQGraphicsObject::Signal_XChanged));
}

void QGraphicsObject_XChanged(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->xChanged();
	} else {
		static_cast<QGraphicsObject*>(ptr)->xChanged();
	}
}

void QGraphicsObject_ConnectYChanged(void* ptr, long long t)
{
	QObject::connect(static_cast<QGraphicsObject*>(ptr), static_cast<void (QGraphicsObject::*)()>(&QGraphicsObject::yChanged), static_cast<MyQGraphicsObject*>(ptr), static_cast<void (MyQGraphicsObject::*)()>(&MyQGraphicsObject::Signal_YChanged), static_cast<Qt::ConnectionType>(t));
}

void QGraphicsObject_DisconnectYChanged(void* ptr)
{
	QObject::disconnect(static_cast<QGraphicsObject*>(ptr), static_cast<void (QGraphicsObject::*)()>(&QGraphicsObject::yChanged), static_cast<MyQGraphicsObject*>(ptr), static_cast<void (MyQGraphicsObject::*)()>(&MyQGraphicsObject::Signal_YChanged));
}

void QGraphicsObject_YChanged(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->yChanged();
	} else {
		static_cast<QGraphicsObject*>(ptr)->yChanged();
	}
}

void QGraphicsObject_ConnectZChanged(void* ptr, long long t)
{
	QObject::connect(static_cast<QGraphicsObject*>(ptr), static_cast<void (QGraphicsObject::*)()>(&QGraphicsObject::zChanged), static_cast<MyQGraphicsObject*>(ptr), static_cast<void (MyQGraphicsObject::*)()>(&MyQGraphicsObject::Signal_ZChanged), static_cast<Qt::ConnectionType>(t));
}

void QGraphicsObject_DisconnectZChanged(void* ptr)
{
	QObject::disconnect(static_cast<QGraphicsObject*>(ptr), static_cast<void (QGraphicsObject::*)()>(&QGraphicsObject::zChanged), static_cast<MyQGraphicsObject*>(ptr), static_cast<void (MyQGraphicsObject::*)()>(&MyQGraphicsObject::Signal_ZChanged));
}

void QGraphicsObject_ZChanged(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->zChanged();
	} else {
		static_cast<QGraphicsObject*>(ptr)->zChanged();
	}
}

void QGraphicsObject_DestroyQGraphicsObject(void* ptr)
{
	static_cast<QGraphicsObject*>(ptr)->~QGraphicsObject();
}

void QGraphicsObject_DestroyQGraphicsObjectDefault(void* ptr)
{
	Q_UNUSED(ptr);

}

void* QGraphicsObject_MetaObject(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return const_cast<QMetaObject*>(static_cast<QGraphicsWidget*>(ptr)->metaObject());
	} else {
		return const_cast<QMetaObject*>(static_cast<QGraphicsObject*>(ptr)->metaObject());
	}
}

void* QGraphicsObject_MetaObjectDefault(void* ptr)
{
	if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		return const_cast<QMetaObject*>(static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::metaObject());
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return const_cast<QMetaObject*>(static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::metaObject());
	} else if (dynamic_cast<QGraphicsTextItem*>(static_cast<QObject*>(ptr))) {
		return const_cast<QMetaObject*>(static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::metaObject());
	} else {
		return const_cast<QMetaObject*>(static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::metaObject());
	}
}

void* QGraphicsObject_GraphicsEffect(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->graphicsEffect();
	} else {
		return static_cast<QGraphicsObject*>(ptr)->graphicsEffect();
	}
}

void QGraphicsObject_SetGraphicsEffect(void* ptr, void* effect)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setGraphicsEffect(static_cast<QGraphicsEffect*>(effect));
	} else {
		static_cast<QGraphicsObject*>(ptr)->setGraphicsEffect(static_cast<QGraphicsEffect*>(effect));
	}
}

char QGraphicsObject_IsEnabled(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->isEnabled();
	} else {
		return static_cast<QGraphicsObject*>(ptr)->isEnabled();
	}
}

void QGraphicsObject_SetEnabled(void* ptr, char enabled)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setEnabled(enabled != 0);
	} else {
		static_cast<QGraphicsObject*>(ptr)->setEnabled(enabled != 0);
	}
}

double QGraphicsObject_Opacity(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->opacity();
	} else {
		return static_cast<QGraphicsObject*>(ptr)->opacity();
	}
}

void QGraphicsObject_SetOpacity(void* ptr, double opacity)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setOpacity(opacity);
	} else {
		static_cast<QGraphicsObject*>(ptr)->setOpacity(opacity);
	}
}

void* QGraphicsObject_Parent(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->parent();
	} else {
		return static_cast<QGraphicsObject*>(ptr)->parent();
	}
}

void QGraphicsObject_SetParent(void* ptr, void* parent)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(parent))) {
			static_cast<QGraphicsWidget*>(ptr)->setParent(static_cast<QGraphicsWidget*>(parent));
		} else {
			static_cast<QGraphicsWidget*>(ptr)->setParent(static_cast<QGraphicsObject*>(parent));
		}
	} else {
		if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(parent))) {
			static_cast<QGraphicsObject*>(ptr)->setParent(static_cast<QGraphicsWidget*>(parent));
		} else {
			static_cast<QGraphicsObject*>(ptr)->setParent(static_cast<QGraphicsObject*>(parent));
		}
	}
}

void* QGraphicsObject_Pos(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({ QPointF tmpValue = static_cast<QGraphicsWidget*>(ptr)->pos(); new QPointF(tmpValue.x(), tmpValue.y()); });
	} else {
		return ({ QPointF tmpValue = static_cast<QGraphicsObject*>(ptr)->pos(); new QPointF(tmpValue.x(), tmpValue.y()); });
	}
}

void QGraphicsObject_SetPos(void* ptr, void* pos)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setPos(*static_cast<QPointF*>(pos));
	} else {
		static_cast<QGraphicsObject*>(ptr)->setPos(*static_cast<QPointF*>(pos));
	}
}

double QGraphicsObject_Rotation(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->rotation();
	} else {
		return static_cast<QGraphicsObject*>(ptr)->rotation();
	}
}

void QGraphicsObject_SetRotation(void* ptr, double rotation)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setRotation(rotation);
	} else {
		static_cast<QGraphicsObject*>(ptr)->setRotation(rotation);
	}
}

double QGraphicsObject_Scale(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->scale();
	} else {
		return static_cast<QGraphicsObject*>(ptr)->scale();
	}
}

void QGraphicsObject_SetScale(void* ptr, double scale)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setScale(scale);
	} else {
		static_cast<QGraphicsObject*>(ptr)->setScale(scale);
	}
}

void* QGraphicsObject_TransformOriginPoint(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({ QPointF tmpValue = static_cast<QGraphicsWidget*>(ptr)->transformOriginPoint(); new QPointF(tmpValue.x(), tmpValue.y()); });
	} else {
		return ({ QPointF tmpValue = static_cast<QGraphicsObject*>(ptr)->transformOriginPoint(); new QPointF(tmpValue.x(), tmpValue.y()); });
	}
}

void QGraphicsObject_SetTransformOriginPoint(void* ptr, void* transformOriginPoint)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setTransformOriginPoint(*static_cast<QPointF*>(transformOriginPoint));
	} else {
		static_cast<QGraphicsObject*>(ptr)->setTransformOriginPoint(*static_cast<QPointF*>(transformOriginPoint));
	}
}

char QGraphicsObject_IsVisible(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->isVisible();
	} else {
		return static_cast<QGraphicsObject*>(ptr)->isVisible();
	}
}

void QGraphicsObject_SetVisible(void* ptr, char visible)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setVisible(visible != 0);
	} else {
		static_cast<QGraphicsObject*>(ptr)->setVisible(visible != 0);
	}
}

double QGraphicsObject_X(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->x();
	} else {
		return static_cast<QGraphicsObject*>(ptr)->x();
	}
}

void QGraphicsObject_SetX(void* ptr, double x)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setX(x);
	} else {
		static_cast<QGraphicsObject*>(ptr)->setX(x);
	}
}

double QGraphicsObject_Y(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->y();
	} else {
		return static_cast<QGraphicsObject*>(ptr)->y();
	}
}

void QGraphicsObject_SetY(void* ptr, double y)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setY(y);
	} else {
		static_cast<QGraphicsObject*>(ptr)->setY(y);
	}
}

double QGraphicsObject_ZValue(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsWidget*>(ptr)->zValue();
	} else {
		return static_cast<QGraphicsObject*>(ptr)->zValue();
	}
}

void QGraphicsObject_SetZValue(void* ptr, double z)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->setZValue(z);
	} else {
		static_cast<QGraphicsObject*>(ptr)->setZValue(z);
	}
}

void* QGraphicsObject___dynamicPropertyNames_atList(void* ptr, int i)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return new QByteArray(({QByteArray tmp = static_cast<QList<QByteArray>*>(ptr)->at(i); if (i == static_cast<QList<QByteArray>*>(ptr)->size()-1) { static_cast<QList<QByteArray>*>(ptr)->~QList(); free(ptr); }; tmp; }));
	} else {
		return new QByteArray(({QByteArray tmp = static_cast<QList<QByteArray>*>(ptr)->at(i); if (i == static_cast<QList<QByteArray>*>(ptr)->size()-1) { static_cast<QList<QByteArray>*>(ptr)->~QList(); free(ptr); }; tmp; }));
	}
}

void QGraphicsObject___dynamicPropertyNames_setList(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QList<QByteArray>*>(ptr)->append(*static_cast<QByteArray*>(i));
	} else {
		static_cast<QList<QByteArray>*>(ptr)->append(*static_cast<QByteArray*>(i));
	}
}

void* QGraphicsObject___dynamicPropertyNames_newList(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return new QList<QByteArray>();
	} else {
		return new QList<QByteArray>();
	}
}

void* QGraphicsObject___findChildren_atList2(void* ptr, int i)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({QObject* tmp = static_cast<QList<QObject*>*>(ptr)->at(i); if (i == static_cast<QList<QObject*>*>(ptr)->size()-1) { static_cast<QList<QObject*>*>(ptr)->~QList(); free(ptr); }; tmp; });
	} else {
		return ({QObject* tmp = static_cast<QList<QObject*>*>(ptr)->at(i); if (i == static_cast<QList<QObject*>*>(ptr)->size()-1) { static_cast<QList<QObject*>*>(ptr)->~QList(); free(ptr); }; tmp; });
	}
}

void QGraphicsObject___findChildren_setList2(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
			static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
			static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
		} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(i))) {
			static_cast<QList<QObject*>*>(ptr)->append(static_cast<QLayout*>(i));
		} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(i))) {
			static_cast<QList<QObject*>*>(ptr)->append(static_cast<QWidget*>(i));
		} else {
			static_cast<QList<QObject*>*>(ptr)->append(static_cast<QObject*>(i));
		}
	} else {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
			static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
			static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
		} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(i))) {
			static_cast<QList<QObject*>*>(ptr)->append(static_cast<QLayout*>(i));
		} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(i))) {
			static_cast<QList<QObject*>*>(ptr)->append(static_cast<QWidget*>(i));
		} else {
			static_cast<QList<QObject*>*>(ptr)->append(static_cast<QObject*>(i));
		}
	}
}

void* QGraphicsObject___findChildren_newList2(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return new QList<QObject*>();
	} else {
		return new QList<QObject*>();
	}
}

void* QGraphicsObject___findChildren_atList3(void* ptr, int i)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({QObject* tmp = static_cast<QList<QObject*>*>(ptr)->at(i); if (i == static_cast<QList<QObject*>*>(ptr)->size()-1) { static_cast<QList<QObject*>*>(ptr)->~QList(); free(ptr); }; tmp; });
	} else {
		return ({QObject* tmp = static_cast<QList<QObject*>*>(ptr)->at(i); if (i == static_cast<QList<QObject*>*>(ptr)->size()-1) { static_cast<QList<QObject*>*>(ptr)->~QList(); free(ptr); }; tmp; });
	}
}

void QGraphicsObject___findChildren_setList3(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
			static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
			static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
		} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(i))) {
			static_cast<QList<QObject*>*>(ptr)->append(static_cast<QLayout*>(i));
		} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(i))) {
			static_cast<QList<QObject*>*>(ptr)->append(static_cast<QWidget*>(i));
		} else {
			static_cast<QList<QObject*>*>(ptr)->append(static_cast<QObject*>(i));
		}
	} else {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
			static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
			static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
		} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(i))) {
			static_cast<QList<QObject*>*>(ptr)->append(static_cast<QLayout*>(i));
		} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(i))) {
			static_cast<QList<QObject*>*>(ptr)->append(static_cast<QWidget*>(i));
		} else {
			static_cast<QList<QObject*>*>(ptr)->append(static_cast<QObject*>(i));
		}
	}
}

void* QGraphicsObject___findChildren_newList3(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return new QList<QObject*>();
	} else {
		return new QList<QObject*>();
	}
}

void* QGraphicsObject___findChildren_atList(void* ptr, int i)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({QObject* tmp = static_cast<QList<QObject*>*>(ptr)->at(i); if (i == static_cast<QList<QObject*>*>(ptr)->size()-1) { static_cast<QList<QObject*>*>(ptr)->~QList(); free(ptr); }; tmp; });
	} else {
		return ({QObject* tmp = static_cast<QList<QObject*>*>(ptr)->at(i); if (i == static_cast<QList<QObject*>*>(ptr)->size()-1) { static_cast<QList<QObject*>*>(ptr)->~QList(); free(ptr); }; tmp; });
	}
}

void QGraphicsObject___findChildren_setList(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
			static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
			static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
		} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(i))) {
			static_cast<QList<QObject*>*>(ptr)->append(static_cast<QLayout*>(i));
		} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(i))) {
			static_cast<QList<QObject*>*>(ptr)->append(static_cast<QWidget*>(i));
		} else {
			static_cast<QList<QObject*>*>(ptr)->append(static_cast<QObject*>(i));
		}
	} else {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
			static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
			static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
		} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(i))) {
			static_cast<QList<QObject*>*>(ptr)->append(static_cast<QLayout*>(i));
		} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(i))) {
			static_cast<QList<QObject*>*>(ptr)->append(static_cast<QWidget*>(i));
		} else {
			static_cast<QList<QObject*>*>(ptr)->append(static_cast<QObject*>(i));
		}
	}
}

void* QGraphicsObject___findChildren_newList(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return new QList<QObject*>();
	} else {
		return new QList<QObject*>();
	}
}

void* QGraphicsObject___children_atList(void* ptr, int i)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({QObject * tmp = static_cast<QList<QObject *>*>(ptr)->at(i); if (i == static_cast<QList<QObject *>*>(ptr)->size()-1) { static_cast<QList<QObject *>*>(ptr)->~QList(); free(ptr); }; tmp; });
	} else {
		return ({QObject * tmp = static_cast<QList<QObject *>*>(ptr)->at(i); if (i == static_cast<QList<QObject *>*>(ptr)->size()-1) { static_cast<QList<QObject *>*>(ptr)->~QList(); free(ptr); }; tmp; });
	}
}

void QGraphicsObject___children_setList(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
			static_cast<QList<QObject *>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
			static_cast<QList<QObject *>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
		} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(i))) {
			static_cast<QList<QObject *>*>(ptr)->append(static_cast<QLayout*>(i));
		} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(i))) {
			static_cast<QList<QObject *>*>(ptr)->append(static_cast<QWidget*>(i));
		} else {
			static_cast<QList<QObject *>*>(ptr)->append(static_cast<QObject*>(i));
		}
	} else {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
			static_cast<QList<QObject *>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
			static_cast<QList<QObject *>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
		} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(i))) {
			static_cast<QList<QObject *>*>(ptr)->append(static_cast<QLayout*>(i));
		} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(i))) {
			static_cast<QList<QObject *>*>(ptr)->append(static_cast<QWidget*>(i));
		} else {
			static_cast<QList<QObject *>*>(ptr)->append(static_cast<QObject*>(i));
		}
	}
}

void* QGraphicsObject___children_newList(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return new QList<QObject *>();
	} else {
		return new QList<QObject *>();
	}
}

char QGraphicsObject_EventFilter(void* ptr, void* watched, void* event)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsWidget*>(ptr)->eventFilter(static_cast<QGraphicsObject*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsWidget*>(ptr)->eventFilter(static_cast<QGraphicsWidget*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsWidget*>(ptr)->eventFilter(static_cast<QLayout*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsWidget*>(ptr)->eventFilter(static_cast<QWidget*>(watched), static_cast<QEvent*>(event));
		} else {
			return static_cast<QGraphicsWidget*>(ptr)->eventFilter(static_cast<QObject*>(watched), static_cast<QEvent*>(event));
		}
	} else {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsObject*>(ptr)->eventFilter(static_cast<QGraphicsObject*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsObject*>(ptr)->eventFilter(static_cast<QGraphicsWidget*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsObject*>(ptr)->eventFilter(static_cast<QLayout*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsObject*>(ptr)->eventFilter(static_cast<QWidget*>(watched), static_cast<QEvent*>(event));
		} else {
			return static_cast<QGraphicsObject*>(ptr)->eventFilter(static_cast<QObject*>(watched), static_cast<QEvent*>(event));
		}
	}
}

char QGraphicsObject_EventFilterDefault(void* ptr, void* watched, void* event)
{
	if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::eventFilter(static_cast<QGraphicsObject*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::eventFilter(static_cast<QGraphicsWidget*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::eventFilter(static_cast<QLayout*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::eventFilter(static_cast<QWidget*>(watched), static_cast<QEvent*>(event));
		} else {
			return static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::eventFilter(static_cast<QObject*>(watched), static_cast<QEvent*>(event));
		}
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::eventFilter(static_cast<QGraphicsObject*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::eventFilter(static_cast<QGraphicsWidget*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::eventFilter(static_cast<QLayout*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::eventFilter(static_cast<QWidget*>(watched), static_cast<QEvent*>(event));
		} else {
			return static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::eventFilter(static_cast<QObject*>(watched), static_cast<QEvent*>(event));
		}
	} else if (dynamic_cast<QGraphicsTextItem*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::eventFilter(static_cast<QGraphicsObject*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::eventFilter(static_cast<QGraphicsWidget*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::eventFilter(static_cast<QLayout*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::eventFilter(static_cast<QWidget*>(watched), static_cast<QEvent*>(event));
		} else {
			return static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::eventFilter(static_cast<QObject*>(watched), static_cast<QEvent*>(event));
		}
	} else {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::eventFilter(static_cast<QGraphicsObject*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::eventFilter(static_cast<QGraphicsWidget*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::eventFilter(static_cast<QLayout*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::eventFilter(static_cast<QWidget*>(watched), static_cast<QEvent*>(event));
		} else {
			return static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::eventFilter(static_cast<QObject*>(watched), static_cast<QEvent*>(event));
		}
	}
}

void QGraphicsObject_ChildEvent(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->childEvent(static_cast<QChildEvent*>(event));
	} else {
		static_cast<QGraphicsObject*>(ptr)->childEvent(static_cast<QChildEvent*>(event));
	}
}

void QGraphicsObject_ChildEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::childEvent(static_cast<QChildEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::childEvent(static_cast<QChildEvent*>(event));
	} else if (dynamic_cast<QGraphicsTextItem*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::childEvent(static_cast<QChildEvent*>(event));
	} else {
		static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::childEvent(static_cast<QChildEvent*>(event));
	}
}

void QGraphicsObject_ConnectNotify(void* ptr, void* sign)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->connectNotify(*static_cast<QMetaMethod*>(sign));
	} else {
		static_cast<QGraphicsObject*>(ptr)->connectNotify(*static_cast<QMetaMethod*>(sign));
	}
}

void QGraphicsObject_ConnectNotifyDefault(void* ptr, void* sign)
{
	if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::connectNotify(*static_cast<QMetaMethod*>(sign));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::connectNotify(*static_cast<QMetaMethod*>(sign));
	} else if (dynamic_cast<QGraphicsTextItem*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::connectNotify(*static_cast<QMetaMethod*>(sign));
	} else {
		static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::connectNotify(*static_cast<QMetaMethod*>(sign));
	}
}

void QGraphicsObject_CustomEvent(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->customEvent(static_cast<QEvent*>(event));
	} else {
		static_cast<QGraphicsObject*>(ptr)->customEvent(static_cast<QEvent*>(event));
	}
}

void QGraphicsObject_CustomEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::customEvent(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::customEvent(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QGraphicsTextItem*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::customEvent(static_cast<QEvent*>(event));
	} else {
		static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::customEvent(static_cast<QEvent*>(event));
	}
}

void QGraphicsObject_DeleteLater(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		QMetaObject::invokeMethod(static_cast<QGraphicsWidget*>(ptr), "deleteLater");
	} else {
		QMetaObject::invokeMethod(static_cast<QGraphicsObject*>(ptr), "deleteLater");
	}
}

void QGraphicsObject_DeleteLaterDefault(void* ptr)
{
	if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::deleteLater();
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::deleteLater();
	} else if (dynamic_cast<QGraphicsTextItem*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::deleteLater();
	} else {
		static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::deleteLater();
	}
}

void QGraphicsObject_DisconnectNotify(void* ptr, void* sign)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->disconnectNotify(*static_cast<QMetaMethod*>(sign));
	} else {
		static_cast<QGraphicsObject*>(ptr)->disconnectNotify(*static_cast<QMetaMethod*>(sign));
	}
}

void QGraphicsObject_DisconnectNotifyDefault(void* ptr, void* sign)
{
	if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::disconnectNotify(*static_cast<QMetaMethod*>(sign));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::disconnectNotify(*static_cast<QMetaMethod*>(sign));
	} else if (dynamic_cast<QGraphicsTextItem*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::disconnectNotify(*static_cast<QMetaMethod*>(sign));
	} else {
		static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::disconnectNotify(*static_cast<QMetaMethod*>(sign));
	}
}

void QGraphicsObject_TimerEvent(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->timerEvent(static_cast<QTimerEvent*>(event));
	} else {
		static_cast<QGraphicsObject*>(ptr)->timerEvent(static_cast<QTimerEvent*>(event));
	}
}

void QGraphicsObject_TimerEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::timerEvent(static_cast<QTimerEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::timerEvent(static_cast<QTimerEvent*>(event));
	} else if (dynamic_cast<QGraphicsTextItem*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::timerEvent(static_cast<QTimerEvent*>(event));
	} else {
		static_cast<QGraphicsObject*>(ptr)->QGraphicsObject::timerEvent(static_cast<QTimerEvent*>(event));
	}
}

void QGraphicsObject_Paint(void* ptr, void* painter, void* option, void* widget)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->paint(static_cast<QPainter*>(painter), static_cast<QStyleOptionGraphicsItem*>(option), static_cast<QWidget*>(widget));
	} else {
	
	}
}

void QGraphicsObject_PaintDefault(void* ptr, void* painter, void* option, void* widget)
{
	if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::paint(static_cast<QPainter*>(painter), static_cast<QStyleOptionGraphicsItem*>(option), static_cast<QWidget*>(widget));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::paint(static_cast<QPainter*>(painter), static_cast<QStyleOptionGraphicsItem*>(option), static_cast<QWidget*>(widget));
	} else if (dynamic_cast<QGraphicsTextItem*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::paint(static_cast<QPainter*>(painter), static_cast<QStyleOptionGraphicsItem*>(option), static_cast<QWidget*>(widget));
	} else {
	
	}
}

void* QGraphicsObject_BoundingRect(void* ptr)
{
	if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({ QRectF tmpValue = static_cast<QGraphicsWidget*>(ptr)->boundingRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	} else {
	
	}
}

void* QGraphicsObject_BoundingRectDefault(void* ptr)
{
	if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		return ({ QRectF tmpValue = static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::boundingRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(ptr))) {
		return ({ QRectF tmpValue = static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::boundingRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	} else if (dynamic_cast<QGraphicsTextItem*>(static_cast<QObject*>(ptr))) {
		return ({ QRectF tmpValue = static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::boundingRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	} else {
	
	}
}

class MyQGraphicsPathItem: public QGraphicsPathItem
{
public:
	MyQGraphicsPathItem(QGraphicsItem *parent = Q_NULLPTR) : QGraphicsPathItem(parent) {QGraphicsPathItem_QGraphicsPathItem_QRegisterMetaType();};
	MyQGraphicsPathItem(const QPainterPath &path, QGraphicsItem *parent = Q_NULLPTR) : QGraphicsPathItem(path, parent) {QGraphicsPathItem_QGraphicsPathItem_QRegisterMetaType();};
	void paint(QPainter * painter, const QStyleOptionGraphicsItem * option, QWidget * widget) { callbackQGraphicsPathItem_Paint(this, painter, const_cast<QStyleOptionGraphicsItem*>(option), widget); };
	 ~MyQGraphicsPathItem() { callbackQGraphicsPathItem_DestroyQGraphicsPathItem(this); };
	QPainterPath opaqueArea() const { return *static_cast<QPainterPath*>(callbackQGraphicsItem_OpaqueArea(const_cast<void*>(static_cast<const void*>(this)))); };
	QPainterPath shape() const { return *static_cast<QPainterPath*>(callbackQGraphicsItem_Shape(const_cast<void*>(static_cast<const void*>(this)))); };
	QRectF boundingRect() const { return *static_cast<QRectF*>(callbackQGraphicsPathItem_BoundingRect(const_cast<void*>(static_cast<const void*>(this)))); };
	bool contains(const QPointF & point) const { return callbackQGraphicsItem_Contains(const_cast<void*>(static_cast<const void*>(this)), const_cast<QPointF*>(&point)) != 0; };
	bool isObscuredBy(const QGraphicsItem * item) const { return callbackQGraphicsItem_IsObscuredBy(const_cast<void*>(static_cast<const void*>(this)), const_cast<QGraphicsItem*>(item)) != 0; };
	int type() const { return callbackQGraphicsItem_Type(const_cast<void*>(static_cast<const void*>(this))); };
	QVariant itemChange(QGraphicsItem::GraphicsItemChange change, const QVariant & value) { return *static_cast<QVariant*>(callbackQGraphicsItem_ItemChange(this, change, const_cast<QVariant*>(&value))); };
	bool sceneEvent(QEvent * event) { return callbackQGraphicsItem_SceneEvent(this, event) != 0; };
	bool sceneEventFilter(QGraphicsItem * watched, QEvent * event) { return callbackQGraphicsItem_SceneEventFilter(this, watched, event) != 0; };
	void advance(int phase) { callbackQGraphicsItem_Advance(this, phase); };
	void contextMenuEvent(QGraphicsSceneContextMenuEvent * event) { callbackQGraphicsItem_ContextMenuEvent(this, event); };
	void dragEnterEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DragEnterEvent(this, event); };
	void dragLeaveEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DragLeaveEvent(this, event); };
	void dragMoveEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DragMoveEvent(this, event); };
	void dropEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DropEvent(this, event); };
	void focusInEvent(QFocusEvent * event) { callbackQGraphicsItem_FocusInEvent(this, event); };
	void focusOutEvent(QFocusEvent * event) { callbackQGraphicsItem_FocusOutEvent(this, event); };
	void hoverEnterEvent(QGraphicsSceneHoverEvent * event) { callbackQGraphicsItem_HoverEnterEvent(this, event); };
	void hoverLeaveEvent(QGraphicsSceneHoverEvent * event) { callbackQGraphicsItem_HoverLeaveEvent(this, event); };
	void hoverMoveEvent(QGraphicsSceneHoverEvent * event) { callbackQGraphicsItem_HoverMoveEvent(this, event); };
	void inputMethodEvent(QInputMethodEvent * event) { callbackQGraphicsItem_InputMethodEvent(this, event); };
	void keyPressEvent(QKeyEvent * event) { callbackQGraphicsItem_KeyPressEvent(this, event); };
	void keyReleaseEvent(QKeyEvent * event) { callbackQGraphicsItem_KeyReleaseEvent(this, event); };
	void mouseDoubleClickEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MouseDoubleClickEvent(this, event); };
	void mouseMoveEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MouseMoveEvent(this, event); };
	void mousePressEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MousePressEvent(this, event); };
	void mouseReleaseEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MouseReleaseEvent(this, event); };
	void wheelEvent(QGraphicsSceneWheelEvent * event) { callbackQGraphicsItem_WheelEvent(this, event); };
	QVariant inputMethodQuery(Qt::InputMethodQuery query) const { return *static_cast<QVariant*>(callbackQGraphicsItem_InputMethodQuery(const_cast<void*>(static_cast<const void*>(this)), query)); };
	bool collidesWithItem(const QGraphicsItem * other, Qt::ItemSelectionMode mode) const { return callbackQGraphicsItem_CollidesWithItem(const_cast<void*>(static_cast<const void*>(this)), const_cast<QGraphicsItem*>(other), mode) != 0; };
	bool collidesWithPath(const QPainterPath & path, Qt::ItemSelectionMode mode) const { return callbackQGraphicsItem_CollidesWithPath(const_cast<void*>(static_cast<const void*>(this)), const_cast<QPainterPath*>(&path), mode) != 0; };
};

Q_DECLARE_METATYPE(QGraphicsPathItem*)
Q_DECLARE_METATYPE(MyQGraphicsPathItem*)

int QGraphicsPathItem_QGraphicsPathItem_QRegisterMetaType(){qRegisterMetaType<QGraphicsPathItem*>(); return qRegisterMetaType<MyQGraphicsPathItem*>();}

void* QGraphicsPathItem_NewQGraphicsPathItem(void* parent)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsPathItem(static_cast<QGraphicsObject*>(parent));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsPathItem(static_cast<QGraphicsWidget*>(parent));
	} else {
		return new MyQGraphicsPathItem(static_cast<QGraphicsItem*>(parent));
	}
}

void* QGraphicsPathItem_NewQGraphicsPathItem2(void* path, void* parent)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsPathItem(*static_cast<QPainterPath*>(path), static_cast<QGraphicsObject*>(parent));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsPathItem(*static_cast<QPainterPath*>(path), static_cast<QGraphicsWidget*>(parent));
	} else {
		return new MyQGraphicsPathItem(*static_cast<QPainterPath*>(path), static_cast<QGraphicsItem*>(parent));
	}
}

void QGraphicsPathItem_Paint(void* ptr, void* painter, void* option, void* widget)
{
		static_cast<QGraphicsPathItem*>(ptr)->paint(static_cast<QPainter*>(painter), static_cast<QStyleOptionGraphicsItem*>(option), static_cast<QWidget*>(widget));
}

void QGraphicsPathItem_PaintDefault(void* ptr, void* painter, void* option, void* widget)
{
		static_cast<QGraphicsPathItem*>(ptr)->QGraphicsPathItem::paint(static_cast<QPainter*>(painter), static_cast<QStyleOptionGraphicsItem*>(option), static_cast<QWidget*>(widget));
}

void QGraphicsPathItem_SetPath(void* ptr, void* path)
{
	static_cast<QGraphicsPathItem*>(ptr)->setPath(*static_cast<QPainterPath*>(path));
}

void QGraphicsPathItem_DestroyQGraphicsPathItem(void* ptr)
{
	static_cast<QGraphicsPathItem*>(ptr)->~QGraphicsPathItem();
}

void QGraphicsPathItem_DestroyQGraphicsPathItemDefault(void* ptr)
{
	Q_UNUSED(ptr);

}

void* QGraphicsPathItem_Path(void* ptr)
{
	return new QPainterPath(static_cast<QGraphicsPathItem*>(ptr)->path());
}

void* QGraphicsPathItem_BoundingRect(void* ptr)
{
	return ({ QRectF tmpValue = static_cast<QGraphicsPathItem*>(ptr)->boundingRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QGraphicsPathItem_BoundingRectDefault(void* ptr)
{
		return ({ QRectF tmpValue = static_cast<QGraphicsPathItem*>(ptr)->QGraphicsPathItem::boundingRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

class MyQGraphicsPixmapItem: public QGraphicsPixmapItem
{
public:
	MyQGraphicsPixmapItem(QGraphicsItem *parent = Q_NULLPTR) : QGraphicsPixmapItem(parent) {QGraphicsPixmapItem_QGraphicsPixmapItem_QRegisterMetaType();};
	MyQGraphicsPixmapItem(const QPixmap &pixmap, QGraphicsItem *parent = Q_NULLPTR) : QGraphicsPixmapItem(pixmap, parent) {QGraphicsPixmapItem_QGraphicsPixmapItem_QRegisterMetaType();};
	void paint(QPainter * painter, const QStyleOptionGraphicsItem * option, QWidget * widget) { callbackQGraphicsPixmapItem_Paint(this, painter, const_cast<QStyleOptionGraphicsItem*>(option), widget); };
	 ~MyQGraphicsPixmapItem() { callbackQGraphicsPixmapItem_DestroyQGraphicsPixmapItem(this); };
	QPainterPath opaqueArea() const { return *static_cast<QPainterPath*>(callbackQGraphicsItem_OpaqueArea(const_cast<void*>(static_cast<const void*>(this)))); };
	QPainterPath shape() const { return *static_cast<QPainterPath*>(callbackQGraphicsItem_Shape(const_cast<void*>(static_cast<const void*>(this)))); };
	QRectF boundingRect() const { return *static_cast<QRectF*>(callbackQGraphicsPixmapItem_BoundingRect(const_cast<void*>(static_cast<const void*>(this)))); };
	bool contains(const QPointF & point) const { return callbackQGraphicsItem_Contains(const_cast<void*>(static_cast<const void*>(this)), const_cast<QPointF*>(&point)) != 0; };
	bool isObscuredBy(const QGraphicsItem * item) const { return callbackQGraphicsItem_IsObscuredBy(const_cast<void*>(static_cast<const void*>(this)), const_cast<QGraphicsItem*>(item)) != 0; };
	int type() const { return callbackQGraphicsItem_Type(const_cast<void*>(static_cast<const void*>(this))); };
	QVariant itemChange(QGraphicsItem::GraphicsItemChange change, const QVariant & value) { return *static_cast<QVariant*>(callbackQGraphicsItem_ItemChange(this, change, const_cast<QVariant*>(&value))); };
	bool sceneEvent(QEvent * event) { return callbackQGraphicsItem_SceneEvent(this, event) != 0; };
	bool sceneEventFilter(QGraphicsItem * watched, QEvent * event) { return callbackQGraphicsItem_SceneEventFilter(this, watched, event) != 0; };
	void advance(int phase) { callbackQGraphicsItem_Advance(this, phase); };
	void contextMenuEvent(QGraphicsSceneContextMenuEvent * event) { callbackQGraphicsItem_ContextMenuEvent(this, event); };
	void dragEnterEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DragEnterEvent(this, event); };
	void dragLeaveEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DragLeaveEvent(this, event); };
	void dragMoveEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DragMoveEvent(this, event); };
	void dropEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DropEvent(this, event); };
	void focusInEvent(QFocusEvent * event) { callbackQGraphicsItem_FocusInEvent(this, event); };
	void focusOutEvent(QFocusEvent * event) { callbackQGraphicsItem_FocusOutEvent(this, event); };
	void hoverEnterEvent(QGraphicsSceneHoverEvent * event) { callbackQGraphicsItem_HoverEnterEvent(this, event); };
	void hoverLeaveEvent(QGraphicsSceneHoverEvent * event) { callbackQGraphicsItem_HoverLeaveEvent(this, event); };
	void hoverMoveEvent(QGraphicsSceneHoverEvent * event) { callbackQGraphicsItem_HoverMoveEvent(this, event); };
	void inputMethodEvent(QInputMethodEvent * event) { callbackQGraphicsItem_InputMethodEvent(this, event); };
	void keyPressEvent(QKeyEvent * event) { callbackQGraphicsItem_KeyPressEvent(this, event); };
	void keyReleaseEvent(QKeyEvent * event) { callbackQGraphicsItem_KeyReleaseEvent(this, event); };
	void mouseDoubleClickEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MouseDoubleClickEvent(this, event); };
	void mouseMoveEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MouseMoveEvent(this, event); };
	void mousePressEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MousePressEvent(this, event); };
	void mouseReleaseEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MouseReleaseEvent(this, event); };
	void wheelEvent(QGraphicsSceneWheelEvent * event) { callbackQGraphicsItem_WheelEvent(this, event); };
	QVariant inputMethodQuery(Qt::InputMethodQuery query) const { return *static_cast<QVariant*>(callbackQGraphicsItem_InputMethodQuery(const_cast<void*>(static_cast<const void*>(this)), query)); };
	bool collidesWithItem(const QGraphicsItem * other, Qt::ItemSelectionMode mode) const { return callbackQGraphicsItem_CollidesWithItem(const_cast<void*>(static_cast<const void*>(this)), const_cast<QGraphicsItem*>(other), mode) != 0; };
	bool collidesWithPath(const QPainterPath & path, Qt::ItemSelectionMode mode) const { return callbackQGraphicsItem_CollidesWithPath(const_cast<void*>(static_cast<const void*>(this)), const_cast<QPainterPath*>(&path), mode) != 0; };
};

Q_DECLARE_METATYPE(QGraphicsPixmapItem*)
Q_DECLARE_METATYPE(MyQGraphicsPixmapItem*)

int QGraphicsPixmapItem_QGraphicsPixmapItem_QRegisterMetaType(){qRegisterMetaType<QGraphicsPixmapItem*>(); return qRegisterMetaType<MyQGraphicsPixmapItem*>();}

void* QGraphicsPixmapItem_NewQGraphicsPixmapItem(void* parent)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsPixmapItem(static_cast<QGraphicsObject*>(parent));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsPixmapItem(static_cast<QGraphicsWidget*>(parent));
	} else {
		return new MyQGraphicsPixmapItem(static_cast<QGraphicsItem*>(parent));
	}
}

void* QGraphicsPixmapItem_NewQGraphicsPixmapItem2(void* pixmap, void* parent)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsPixmapItem(*static_cast<QPixmap*>(pixmap), static_cast<QGraphicsObject*>(parent));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsPixmapItem(*static_cast<QPixmap*>(pixmap), static_cast<QGraphicsWidget*>(parent));
	} else {
		return new MyQGraphicsPixmapItem(*static_cast<QPixmap*>(pixmap), static_cast<QGraphicsItem*>(parent));
	}
}

void QGraphicsPixmapItem_Paint(void* ptr, void* painter, void* option, void* widget)
{
		static_cast<QGraphicsPixmapItem*>(ptr)->paint(static_cast<QPainter*>(painter), static_cast<QStyleOptionGraphicsItem*>(option), static_cast<QWidget*>(widget));
}

void QGraphicsPixmapItem_PaintDefault(void* ptr, void* painter, void* option, void* widget)
{
		static_cast<QGraphicsPixmapItem*>(ptr)->QGraphicsPixmapItem::paint(static_cast<QPainter*>(painter), static_cast<QStyleOptionGraphicsItem*>(option), static_cast<QWidget*>(widget));
}

void QGraphicsPixmapItem_SetOffset(void* ptr, void* offset)
{
	static_cast<QGraphicsPixmapItem*>(ptr)->setOffset(*static_cast<QPointF*>(offset));
}

void QGraphicsPixmapItem_SetOffset2(void* ptr, double x, double y)
{
	static_cast<QGraphicsPixmapItem*>(ptr)->setOffset(x, y);
}

void QGraphicsPixmapItem_SetPixmap(void* ptr, void* pixmap)
{
	static_cast<QGraphicsPixmapItem*>(ptr)->setPixmap(*static_cast<QPixmap*>(pixmap));
}

void QGraphicsPixmapItem_SetShapeMode(void* ptr, long long mode)
{
	static_cast<QGraphicsPixmapItem*>(ptr)->setShapeMode(static_cast<QGraphicsPixmapItem::ShapeMode>(mode));
}

void QGraphicsPixmapItem_SetTransformationMode(void* ptr, long long mode)
{
	static_cast<QGraphicsPixmapItem*>(ptr)->setTransformationMode(static_cast<Qt::TransformationMode>(mode));
}

void QGraphicsPixmapItem_DestroyQGraphicsPixmapItem(void* ptr)
{
	static_cast<QGraphicsPixmapItem*>(ptr)->~QGraphicsPixmapItem();
}

void QGraphicsPixmapItem_DestroyQGraphicsPixmapItemDefault(void* ptr)
{
	Q_UNUSED(ptr);

}

long long QGraphicsPixmapItem_ShapeMode(void* ptr)
{
	return static_cast<QGraphicsPixmapItem*>(ptr)->shapeMode();
}

void* QGraphicsPixmapItem_Pixmap(void* ptr)
{
	return new QPixmap(static_cast<QGraphicsPixmapItem*>(ptr)->pixmap());
}

void* QGraphicsPixmapItem_Offset(void* ptr)
{
	return ({ QPointF tmpValue = static_cast<QGraphicsPixmapItem*>(ptr)->offset(); new QPointF(tmpValue.x(), tmpValue.y()); });
}

void* QGraphicsPixmapItem_BoundingRect(void* ptr)
{
	return ({ QRectF tmpValue = static_cast<QGraphicsPixmapItem*>(ptr)->boundingRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QGraphicsPixmapItem_BoundingRectDefault(void* ptr)
{
		return ({ QRectF tmpValue = static_cast<QGraphicsPixmapItem*>(ptr)->QGraphicsPixmapItem::boundingRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

long long QGraphicsPixmapItem_TransformationMode(void* ptr)
{
	return static_cast<QGraphicsPixmapItem*>(ptr)->transformationMode();
}

class MyQGraphicsPolygonItem: public QGraphicsPolygonItem
{
public:
	MyQGraphicsPolygonItem(QGraphicsItem *parent = Q_NULLPTR) : QGraphicsPolygonItem(parent) {QGraphicsPolygonItem_QGraphicsPolygonItem_QRegisterMetaType();};
	MyQGraphicsPolygonItem(const QPolygonF &polygon, QGraphicsItem *parent = Q_NULLPTR) : QGraphicsPolygonItem(polygon, parent) {QGraphicsPolygonItem_QGraphicsPolygonItem_QRegisterMetaType();};
	void paint(QPainter * painter, const QStyleOptionGraphicsItem * option, QWidget * widget) { callbackQGraphicsPolygonItem_Paint(this, painter, const_cast<QStyleOptionGraphicsItem*>(option), widget); };
	 ~MyQGraphicsPolygonItem() { callbackQGraphicsPolygonItem_DestroyQGraphicsPolygonItem(this); };
	QPainterPath opaqueArea() const { return *static_cast<QPainterPath*>(callbackQGraphicsItem_OpaqueArea(const_cast<void*>(static_cast<const void*>(this)))); };
	QPainterPath shape() const { return *static_cast<QPainterPath*>(callbackQGraphicsItem_Shape(const_cast<void*>(static_cast<const void*>(this)))); };
	QRectF boundingRect() const { return *static_cast<QRectF*>(callbackQGraphicsPolygonItem_BoundingRect(const_cast<void*>(static_cast<const void*>(this)))); };
	bool contains(const QPointF & point) const { return callbackQGraphicsItem_Contains(const_cast<void*>(static_cast<const void*>(this)), const_cast<QPointF*>(&point)) != 0; };
	bool isObscuredBy(const QGraphicsItem * item) const { return callbackQGraphicsItem_IsObscuredBy(const_cast<void*>(static_cast<const void*>(this)), const_cast<QGraphicsItem*>(item)) != 0; };
	int type() const { return callbackQGraphicsItem_Type(const_cast<void*>(static_cast<const void*>(this))); };
	QVariant itemChange(QGraphicsItem::GraphicsItemChange change, const QVariant & value) { return *static_cast<QVariant*>(callbackQGraphicsItem_ItemChange(this, change, const_cast<QVariant*>(&value))); };
	bool sceneEvent(QEvent * event) { return callbackQGraphicsItem_SceneEvent(this, event) != 0; };
	bool sceneEventFilter(QGraphicsItem * watched, QEvent * event) { return callbackQGraphicsItem_SceneEventFilter(this, watched, event) != 0; };
	void advance(int phase) { callbackQGraphicsItem_Advance(this, phase); };
	void contextMenuEvent(QGraphicsSceneContextMenuEvent * event) { callbackQGraphicsItem_ContextMenuEvent(this, event); };
	void dragEnterEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DragEnterEvent(this, event); };
	void dragLeaveEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DragLeaveEvent(this, event); };
	void dragMoveEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DragMoveEvent(this, event); };
	void dropEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DropEvent(this, event); };
	void focusInEvent(QFocusEvent * event) { callbackQGraphicsItem_FocusInEvent(this, event); };
	void focusOutEvent(QFocusEvent * event) { callbackQGraphicsItem_FocusOutEvent(this, event); };
	void hoverEnterEvent(QGraphicsSceneHoverEvent * event) { callbackQGraphicsItem_HoverEnterEvent(this, event); };
	void hoverLeaveEvent(QGraphicsSceneHoverEvent * event) { callbackQGraphicsItem_HoverLeaveEvent(this, event); };
	void hoverMoveEvent(QGraphicsSceneHoverEvent * event) { callbackQGraphicsItem_HoverMoveEvent(this, event); };
	void inputMethodEvent(QInputMethodEvent * event) { callbackQGraphicsItem_InputMethodEvent(this, event); };
	void keyPressEvent(QKeyEvent * event) { callbackQGraphicsItem_KeyPressEvent(this, event); };
	void keyReleaseEvent(QKeyEvent * event) { callbackQGraphicsItem_KeyReleaseEvent(this, event); };
	void mouseDoubleClickEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MouseDoubleClickEvent(this, event); };
	void mouseMoveEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MouseMoveEvent(this, event); };
	void mousePressEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MousePressEvent(this, event); };
	void mouseReleaseEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MouseReleaseEvent(this, event); };
	void wheelEvent(QGraphicsSceneWheelEvent * event) { callbackQGraphicsItem_WheelEvent(this, event); };
	QVariant inputMethodQuery(Qt::InputMethodQuery query) const { return *static_cast<QVariant*>(callbackQGraphicsItem_InputMethodQuery(const_cast<void*>(static_cast<const void*>(this)), query)); };
	bool collidesWithItem(const QGraphicsItem * other, Qt::ItemSelectionMode mode) const { return callbackQGraphicsItem_CollidesWithItem(const_cast<void*>(static_cast<const void*>(this)), const_cast<QGraphicsItem*>(other), mode) != 0; };
	bool collidesWithPath(const QPainterPath & path, Qt::ItemSelectionMode mode) const { return callbackQGraphicsItem_CollidesWithPath(const_cast<void*>(static_cast<const void*>(this)), const_cast<QPainterPath*>(&path), mode) != 0; };
};

Q_DECLARE_METATYPE(QGraphicsPolygonItem*)
Q_DECLARE_METATYPE(MyQGraphicsPolygonItem*)

int QGraphicsPolygonItem_QGraphicsPolygonItem_QRegisterMetaType(){qRegisterMetaType<QGraphicsPolygonItem*>(); return qRegisterMetaType<MyQGraphicsPolygonItem*>();}

void* QGraphicsPolygonItem_NewQGraphicsPolygonItem(void* parent)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsPolygonItem(static_cast<QGraphicsObject*>(parent));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsPolygonItem(static_cast<QGraphicsWidget*>(parent));
	} else {
		return new MyQGraphicsPolygonItem(static_cast<QGraphicsItem*>(parent));
	}
}

void* QGraphicsPolygonItem_NewQGraphicsPolygonItem2(void* polygon, void* parent)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsPolygonItem(*static_cast<QPolygonF*>(polygon), static_cast<QGraphicsObject*>(parent));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsPolygonItem(*static_cast<QPolygonF*>(polygon), static_cast<QGraphicsWidget*>(parent));
	} else {
		return new MyQGraphicsPolygonItem(*static_cast<QPolygonF*>(polygon), static_cast<QGraphicsItem*>(parent));
	}
}

void QGraphicsPolygonItem_Paint(void* ptr, void* painter, void* option, void* widget)
{
		static_cast<QGraphicsPolygonItem*>(ptr)->paint(static_cast<QPainter*>(painter), static_cast<QStyleOptionGraphicsItem*>(option), static_cast<QWidget*>(widget));
}

void QGraphicsPolygonItem_PaintDefault(void* ptr, void* painter, void* option, void* widget)
{
		static_cast<QGraphicsPolygonItem*>(ptr)->QGraphicsPolygonItem::paint(static_cast<QPainter*>(painter), static_cast<QStyleOptionGraphicsItem*>(option), static_cast<QWidget*>(widget));
}

void QGraphicsPolygonItem_SetFillRule(void* ptr, long long rule)
{
	static_cast<QGraphicsPolygonItem*>(ptr)->setFillRule(static_cast<Qt::FillRule>(rule));
}

void QGraphicsPolygonItem_SetPolygon(void* ptr, void* polygon)
{
	static_cast<QGraphicsPolygonItem*>(ptr)->setPolygon(*static_cast<QPolygonF*>(polygon));
}

void QGraphicsPolygonItem_DestroyQGraphicsPolygonItem(void* ptr)
{
	static_cast<QGraphicsPolygonItem*>(ptr)->~QGraphicsPolygonItem();
}

void QGraphicsPolygonItem_DestroyQGraphicsPolygonItemDefault(void* ptr)
{
	Q_UNUSED(ptr);

}

void* QGraphicsPolygonItem_Polygon(void* ptr)
{
	return new QPolygonF(static_cast<QGraphicsPolygonItem*>(ptr)->polygon());
}

void* QGraphicsPolygonItem_BoundingRect(void* ptr)
{
	return ({ QRectF tmpValue = static_cast<QGraphicsPolygonItem*>(ptr)->boundingRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QGraphicsPolygonItem_BoundingRectDefault(void* ptr)
{
		return ({ QRectF tmpValue = static_cast<QGraphicsPolygonItem*>(ptr)->QGraphicsPolygonItem::boundingRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

long long QGraphicsPolygonItem_FillRule(void* ptr)
{
	return static_cast<QGraphicsPolygonItem*>(ptr)->fillRule();
}

class MyQGraphicsProxyWidget: public QGraphicsProxyWidget
{
public:
	MyQGraphicsProxyWidget(QGraphicsItem *parent = Q_NULLPTR, Qt::WindowFlags wFlags = Qt::WindowFlags()) : QGraphicsProxyWidget(parent, wFlags) {QGraphicsProxyWidget_QGraphicsProxyWidget_QRegisterMetaType();};
	QGraphicsProxyWidget * newProxyWidget(const QWidget * child) { return static_cast<QGraphicsProxyWidget*>(callbackQGraphicsProxyWidget_NewProxyWidget(this, const_cast<QWidget*>(child))); };
	QVariant itemChange(QGraphicsItem::GraphicsItemChange change, const QVariant & value) { return *static_cast<QVariant*>(callbackQGraphicsItem_ItemChange(this, change, const_cast<QVariant*>(&value))); };
	bool event(QEvent * event) { return callbackQGraphicsObject_Event(this, event) != 0; };
	bool eventFilter(QObject * object, QEvent * event) { return callbackQGraphicsObject_EventFilter(this, object, event) != 0; };
	bool focusNextPrevChild(bool next) { return callbackQGraphicsWidget_FocusNextPrevChild(this, next) != 0; };
	void contextMenuEvent(QGraphicsSceneContextMenuEvent * event) { callbackQGraphicsItem_ContextMenuEvent(this, event); };
	void dragEnterEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DragEnterEvent(this, event); };
	void dragLeaveEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DragLeaveEvent(this, event); };
	void dragMoveEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DragMoveEvent(this, event); };
	void dropEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DropEvent(this, event); };
	void focusInEvent(QFocusEvent * event) { callbackQGraphicsItem_FocusInEvent(this, event); };
	void focusOutEvent(QFocusEvent * event) { callbackQGraphicsItem_FocusOutEvent(this, event); };
	void grabMouseEvent(QEvent * event) { callbackQGraphicsWidget_GrabMouseEvent(this, event); };
	void hideEvent(QHideEvent * event) { callbackQGraphicsWidget_HideEvent(this, event); };
	void hoverEnterEvent(QGraphicsSceneHoverEvent * event) { callbackQGraphicsItem_HoverEnterEvent(this, event); };
	void hoverLeaveEvent(QGraphicsSceneHoverEvent * event) { callbackQGraphicsItem_HoverLeaveEvent(this, event); };
	void hoverMoveEvent(QGraphicsSceneHoverEvent * event) { callbackQGraphicsItem_HoverMoveEvent(this, event); };
	void inputMethodEvent(QInputMethodEvent * event) { callbackQGraphicsItem_InputMethodEvent(this, event); };
	void keyPressEvent(QKeyEvent * event) { callbackQGraphicsItem_KeyPressEvent(this, event); };
	void keyReleaseEvent(QKeyEvent * event) { callbackQGraphicsItem_KeyReleaseEvent(this, event); };
	void mouseDoubleClickEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MouseDoubleClickEvent(this, event); };
	void mouseMoveEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MouseMoveEvent(this, event); };
	void mousePressEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MousePressEvent(this, event); };
	void mouseReleaseEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MouseReleaseEvent(this, event); };
	void paint(QPainter * painter, const QStyleOptionGraphicsItem * option, QWidget * widget) { callbackQGraphicsWidget_Paint(this, painter, const_cast<QStyleOptionGraphicsItem*>(option), widget); };
	void resizeEvent(QGraphicsSceneResizeEvent * event) { callbackQGraphicsWidget_ResizeEvent(this, event); };
	void setGeometry(const QRectF & rect) { callbackQGraphicsLayoutItem_SetGeometry(this, const_cast<QRectF*>(&rect)); };
	void showEvent(QShowEvent * event) { callbackQGraphicsWidget_ShowEvent(this, event); };
	void ungrabMouseEvent(QEvent * event) { callbackQGraphicsWidget_UngrabMouseEvent(this, event); };
	void wheelEvent(QGraphicsSceneWheelEvent * event) { callbackQGraphicsItem_WheelEvent(this, event); };
	 ~MyQGraphicsProxyWidget() { callbackQGraphicsProxyWidget_DestroyQGraphicsProxyWidget(this); };
	QSizeF sizeHint(Qt::SizeHint which, const QSizeF & constraint) const { return *static_cast<QSizeF*>(callbackQGraphicsWidget_SizeHint(const_cast<void*>(static_cast<const void*>(this)), which, const_cast<QSizeF*>(&constraint))); };
	QVariant inputMethodQuery(Qt::InputMethodQuery query) const { return *static_cast<QVariant*>(callbackQGraphicsItem_InputMethodQuery(const_cast<void*>(static_cast<const void*>(this)), query)); };
	const QMetaObject * metaObject() const { return static_cast<QMetaObject*>(callbackQGraphicsObject_MetaObject(const_cast<void*>(static_cast<const void*>(this)))); };
	int type() const { return callbackQGraphicsItem_Type(const_cast<void*>(static_cast<const void*>(this))); };
	bool close() { return callbackQGraphicsWidget_Close(this) != 0; };
	bool sceneEvent(QEvent * event) { return callbackQGraphicsItem_SceneEvent(this, event) != 0; };
	bool windowFrameEvent(QEvent * event) { return callbackQGraphicsWidget_WindowFrameEvent(this, event) != 0; };
	void changeEvent(QEvent * event) { callbackQGraphicsWidget_ChangeEvent(this, event); };
	void closeEvent(QCloseEvent * event) { callbackQGraphicsWidget_CloseEvent(this, event); };
	void Signal_GeometryChanged() { callbackQGraphicsWidget_GeometryChanged(this); };
	void grabKeyboardEvent(QEvent * event) { callbackQGraphicsWidget_GrabKeyboardEvent(this, event); };
	void moveEvent(QGraphicsSceneMoveEvent * event) { callbackQGraphicsWidget_MoveEvent(this, event); };
	void paintWindowFrame(QPainter * painter, const QStyleOptionGraphicsItem * option, QWidget * widget) { callbackQGraphicsWidget_PaintWindowFrame(this, painter, const_cast<QStyleOptionGraphicsItem*>(option), widget); };
	void polishEvent() { callbackQGraphicsWidget_PolishEvent(this); };
	void ungrabKeyboardEvent(QEvent * event) { callbackQGraphicsWidget_UngrabKeyboardEvent(this, event); };
	void updateGeometry() { callbackQGraphicsLayoutItem_UpdateGeometry(this); };
	QPainterPath shape() const { return *static_cast<QPainterPath*>(callbackQGraphicsItem_Shape(const_cast<void*>(static_cast<const void*>(this)))); };
	QRectF boundingRect() const { return *static_cast<QRectF*>(callbackQGraphicsWidget_BoundingRect(const_cast<void*>(static_cast<const void*>(this)))); };
	Qt::WindowFrameSection windowFrameSectionAt(const QPointF & pos) const { return static_cast<Qt::WindowFrameSection>(callbackQGraphicsWidget_WindowFrameSectionAt(const_cast<void*>(static_cast<const void*>(this)), const_cast<QPointF*>(&pos))); };
	void getContentsMargins(qreal * left, qreal * top, qreal * right, qreal * bottom) const { callbackQGraphicsLayoutItem_GetContentsMargins(const_cast<void*>(static_cast<const void*>(this)), *left, *top, *right, *bottom); };
	void initStyleOption(QStyleOption * option) const { callbackQGraphicsWidget_InitStyleOption(const_cast<void*>(static_cast<const void*>(this)), option); };
	void Signal_EnabledChanged() { callbackQGraphicsObject_EnabledChanged(this); };
	void Signal_OpacityChanged() { callbackQGraphicsObject_OpacityChanged(this); };
	void Signal_ParentChanged() { callbackQGraphicsObject_ParentChanged(this); };
	void Signal_RotationChanged() { callbackQGraphicsObject_RotationChanged(this); };
	void Signal_ScaleChanged() { callbackQGraphicsObject_ScaleChanged(this); };
	void updateMicroFocus() { callbackQGraphicsObject_UpdateMicroFocus(this); };
	void Signal_VisibleChanged() { callbackQGraphicsObject_VisibleChanged(this); };
	void Signal_XChanged() { callbackQGraphicsObject_XChanged(this); };
	void Signal_YChanged() { callbackQGraphicsObject_YChanged(this); };
	void Signal_ZChanged() { callbackQGraphicsObject_ZChanged(this); };
	void childEvent(QChildEvent * event) { callbackQGraphicsObject_ChildEvent(this, event); };
	void connectNotify(const QMetaMethod & sign) { callbackQGraphicsObject_ConnectNotify(this, const_cast<QMetaMethod*>(&sign)); };
	void customEvent(QEvent * event) { callbackQGraphicsObject_CustomEvent(this, event); };
	void deleteLater() { callbackQGraphicsObject_DeleteLater(this); };
	void Signal_Destroyed(QObject * obj) { callbackQGraphicsObject_Destroyed(this, obj); };
	void disconnectNotify(const QMetaMethod & sign) { callbackQGraphicsObject_DisconnectNotify(this, const_cast<QMetaMethod*>(&sign)); };
	void Signal_ObjectNameChanged(const QString & objectName) { QByteArray taa2c4f = objectName.toUtf8(); QtWidgets_PackedString objectNamePacked = { const_cast<char*>(taa2c4f.prepend("WHITESPACE").constData()+10), taa2c4f.size()-10 };callbackQGraphicsObject_ObjectNameChanged(this, objectNamePacked); };
	void timerEvent(QTimerEvent * event) { callbackQGraphicsObject_TimerEvent(this, event); };
	bool sceneEventFilter(QGraphicsItem * watched, QEvent * event) { return callbackQGraphicsItem_SceneEventFilter(this, watched, event) != 0; };
	void advance(int phase) { callbackQGraphicsItem_Advance(this, phase); };
	QPainterPath opaqueArea() const { return *static_cast<QPainterPath*>(callbackQGraphicsItem_OpaqueArea(const_cast<void*>(static_cast<const void*>(this)))); };
	bool collidesWithItem(const QGraphicsItem * other, Qt::ItemSelectionMode mode) const { return callbackQGraphicsItem_CollidesWithItem(const_cast<void*>(static_cast<const void*>(this)), const_cast<QGraphicsItem*>(other), mode) != 0; };
	bool collidesWithPath(const QPainterPath & path, Qt::ItemSelectionMode mode) const { return callbackQGraphicsItem_CollidesWithPath(const_cast<void*>(static_cast<const void*>(this)), const_cast<QPainterPath*>(&path), mode) != 0; };
	bool contains(const QPointF & point) const { return callbackQGraphicsItem_Contains(const_cast<void*>(static_cast<const void*>(this)), const_cast<QPointF*>(&point)) != 0; };
	bool isObscuredBy(const QGraphicsItem * item) const { return callbackQGraphicsItem_IsObscuredBy(const_cast<void*>(static_cast<const void*>(this)), const_cast<QGraphicsItem*>(item)) != 0; };
};

Q_DECLARE_METATYPE(QGraphicsProxyWidget*)
Q_DECLARE_METATYPE(MyQGraphicsProxyWidget*)

int QGraphicsProxyWidget_QGraphicsProxyWidget_QRegisterMetaType(){qRegisterMetaType<QGraphicsProxyWidget*>(); return qRegisterMetaType<MyQGraphicsProxyWidget*>();}

void* QGraphicsProxyWidget_CreateProxyForChildWidget(void* ptr, void* child)
{
		return static_cast<QGraphicsProxyWidget*>(ptr)->createProxyForChildWidget(static_cast<QWidget*>(child));
}

void* QGraphicsProxyWidget_NewProxyWidget(void* ptr, void* child)
{
		QGraphicsProxyWidget* returnArg;
	QMetaObject::invokeMethod(static_cast<QGraphicsProxyWidget*>(ptr), "newProxyWidget", Q_RETURN_ARG(QGraphicsProxyWidget*, returnArg), Q_ARG(const QWidget*, static_cast<QWidget*>(child)));
	return returnArg;
}

void* QGraphicsProxyWidget_NewProxyWidgetDefault(void* ptr, void* child)
{
		return static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::newProxyWidget(static_cast<QWidget*>(child));
}

void* QGraphicsProxyWidget_NewQGraphicsProxyWidget(void* parent, long long wFlags)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsProxyWidget(static_cast<QGraphicsObject*>(parent), static_cast<Qt::WindowType>(wFlags));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsProxyWidget(static_cast<QGraphicsWidget*>(parent), static_cast<Qt::WindowType>(wFlags));
	} else {
		return new MyQGraphicsProxyWidget(static_cast<QGraphicsItem*>(parent), static_cast<Qt::WindowType>(wFlags));
	}
}

void QGraphicsProxyWidget_SetWidget(void* ptr, void* widget)
{
		static_cast<QGraphicsProxyWidget*>(ptr)->setWidget(static_cast<QWidget*>(widget));
}

void QGraphicsProxyWidget_DestroyQGraphicsProxyWidget(void* ptr)
{
	static_cast<QGraphicsProxyWidget*>(ptr)->~QGraphicsProxyWidget();
}

void QGraphicsProxyWidget_DestroyQGraphicsProxyWidgetDefault(void* ptr)
{
	Q_UNUSED(ptr);

}

void* QGraphicsProxyWidget_SubWidgetRect(void* ptr, void* widget)
{
		return ({ QRectF tmpValue = static_cast<QGraphicsProxyWidget*>(ptr)->subWidgetRect(static_cast<QWidget*>(widget)); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QGraphicsProxyWidget_Widget(void* ptr)
{
	return static_cast<QGraphicsProxyWidget*>(ptr)->widget();
}

class MyQGraphicsRectItem: public QGraphicsRectItem
{
public:
	MyQGraphicsRectItem(QGraphicsItem *parent = Q_NULLPTR) : QGraphicsRectItem(parent) {QGraphicsRectItem_QGraphicsRectItem_QRegisterMetaType();};
	MyQGraphicsRectItem(const QRectF &rect, QGraphicsItem *parent = Q_NULLPTR) : QGraphicsRectItem(rect, parent) {QGraphicsRectItem_QGraphicsRectItem_QRegisterMetaType();};
	MyQGraphicsRectItem(qreal x, qreal y, qreal width, qreal height, QGraphicsItem *parent = Q_NULLPTR) : QGraphicsRectItem(x, y, width, height, parent) {QGraphicsRectItem_QGraphicsRectItem_QRegisterMetaType();};
	void paint(QPainter * painter, const QStyleOptionGraphicsItem * option, QWidget * widget) { callbackQGraphicsRectItem_Paint(this, painter, const_cast<QStyleOptionGraphicsItem*>(option), widget); };
	 ~MyQGraphicsRectItem() { callbackQGraphicsRectItem_DestroyQGraphicsRectItem(this); };
	QPainterPath opaqueArea() const { return *static_cast<QPainterPath*>(callbackQGraphicsItem_OpaqueArea(const_cast<void*>(static_cast<const void*>(this)))); };
	QPainterPath shape() const { return *static_cast<QPainterPath*>(callbackQGraphicsItem_Shape(const_cast<void*>(static_cast<const void*>(this)))); };
	QRectF boundingRect() const { return *static_cast<QRectF*>(callbackQGraphicsRectItem_BoundingRect(const_cast<void*>(static_cast<const void*>(this)))); };
	bool contains(const QPointF & point) const { return callbackQGraphicsItem_Contains(const_cast<void*>(static_cast<const void*>(this)), const_cast<QPointF*>(&point)) != 0; };
	bool isObscuredBy(const QGraphicsItem * item) const { return callbackQGraphicsItem_IsObscuredBy(const_cast<void*>(static_cast<const void*>(this)), const_cast<QGraphicsItem*>(item)) != 0; };
	int type() const { return callbackQGraphicsItem_Type(const_cast<void*>(static_cast<const void*>(this))); };
	QVariant itemChange(QGraphicsItem::GraphicsItemChange change, const QVariant & value) { return *static_cast<QVariant*>(callbackQGraphicsItem_ItemChange(this, change, const_cast<QVariant*>(&value))); };
	bool sceneEvent(QEvent * event) { return callbackQGraphicsItem_SceneEvent(this, event) != 0; };
	bool sceneEventFilter(QGraphicsItem * watched, QEvent * event) { return callbackQGraphicsItem_SceneEventFilter(this, watched, event) != 0; };
	void advance(int phase) { callbackQGraphicsItem_Advance(this, phase); };
	void contextMenuEvent(QGraphicsSceneContextMenuEvent * event) { callbackQGraphicsItem_ContextMenuEvent(this, event); };
	void dragEnterEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DragEnterEvent(this, event); };
	void dragLeaveEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DragLeaveEvent(this, event); };
	void dragMoveEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DragMoveEvent(this, event); };
	void dropEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DropEvent(this, event); };
	void focusInEvent(QFocusEvent * event) { callbackQGraphicsItem_FocusInEvent(this, event); };
	void focusOutEvent(QFocusEvent * event) { callbackQGraphicsItem_FocusOutEvent(this, event); };
	void hoverEnterEvent(QGraphicsSceneHoverEvent * event) { callbackQGraphicsItem_HoverEnterEvent(this, event); };
	void hoverLeaveEvent(QGraphicsSceneHoverEvent * event) { callbackQGraphicsItem_HoverLeaveEvent(this, event); };
	void hoverMoveEvent(QGraphicsSceneHoverEvent * event) { callbackQGraphicsItem_HoverMoveEvent(this, event); };
	void inputMethodEvent(QInputMethodEvent * event) { callbackQGraphicsItem_InputMethodEvent(this, event); };
	void keyPressEvent(QKeyEvent * event) { callbackQGraphicsItem_KeyPressEvent(this, event); };
	void keyReleaseEvent(QKeyEvent * event) { callbackQGraphicsItem_KeyReleaseEvent(this, event); };
	void mouseDoubleClickEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MouseDoubleClickEvent(this, event); };
	void mouseMoveEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MouseMoveEvent(this, event); };
	void mousePressEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MousePressEvent(this, event); };
	void mouseReleaseEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MouseReleaseEvent(this, event); };
	void wheelEvent(QGraphicsSceneWheelEvent * event) { callbackQGraphicsItem_WheelEvent(this, event); };
	QVariant inputMethodQuery(Qt::InputMethodQuery query) const { return *static_cast<QVariant*>(callbackQGraphicsItem_InputMethodQuery(const_cast<void*>(static_cast<const void*>(this)), query)); };
	bool collidesWithItem(const QGraphicsItem * other, Qt::ItemSelectionMode mode) const { return callbackQGraphicsItem_CollidesWithItem(const_cast<void*>(static_cast<const void*>(this)), const_cast<QGraphicsItem*>(other), mode) != 0; };
	bool collidesWithPath(const QPainterPath & path, Qt::ItemSelectionMode mode) const { return callbackQGraphicsItem_CollidesWithPath(const_cast<void*>(static_cast<const void*>(this)), const_cast<QPainterPath*>(&path), mode) != 0; };
};

Q_DECLARE_METATYPE(QGraphicsRectItem*)
Q_DECLARE_METATYPE(MyQGraphicsRectItem*)

int QGraphicsRectItem_QGraphicsRectItem_QRegisterMetaType(){qRegisterMetaType<QGraphicsRectItem*>(); return qRegisterMetaType<MyQGraphicsRectItem*>();}

void* QGraphicsRectItem_NewQGraphicsRectItem(void* parent)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsRectItem(static_cast<QGraphicsObject*>(parent));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsRectItem(static_cast<QGraphicsWidget*>(parent));
	} else {
		return new MyQGraphicsRectItem(static_cast<QGraphicsItem*>(parent));
	}
}

void* QGraphicsRectItem_NewQGraphicsRectItem2(void* rect, void* parent)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsRectItem(*static_cast<QRectF*>(rect), static_cast<QGraphicsObject*>(parent));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsRectItem(*static_cast<QRectF*>(rect), static_cast<QGraphicsWidget*>(parent));
	} else {
		return new MyQGraphicsRectItem(*static_cast<QRectF*>(rect), static_cast<QGraphicsItem*>(parent));
	}
}

void* QGraphicsRectItem_NewQGraphicsRectItem3(double x, double y, double width, double height, void* parent)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsRectItem(x, y, width, height, static_cast<QGraphicsObject*>(parent));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsRectItem(x, y, width, height, static_cast<QGraphicsWidget*>(parent));
	} else {
		return new MyQGraphicsRectItem(x, y, width, height, static_cast<QGraphicsItem*>(parent));
	}
}

void QGraphicsRectItem_Paint(void* ptr, void* painter, void* option, void* widget)
{
		static_cast<QGraphicsRectItem*>(ptr)->paint(static_cast<QPainter*>(painter), static_cast<QStyleOptionGraphicsItem*>(option), static_cast<QWidget*>(widget));
}

void QGraphicsRectItem_PaintDefault(void* ptr, void* painter, void* option, void* widget)
{
		static_cast<QGraphicsRectItem*>(ptr)->QGraphicsRectItem::paint(static_cast<QPainter*>(painter), static_cast<QStyleOptionGraphicsItem*>(option), static_cast<QWidget*>(widget));
}

void QGraphicsRectItem_SetRect(void* ptr, void* rectangle)
{
	static_cast<QGraphicsRectItem*>(ptr)->setRect(*static_cast<QRectF*>(rectangle));
}

void QGraphicsRectItem_SetRect2(void* ptr, double x, double y, double width, double height)
{
	static_cast<QGraphicsRectItem*>(ptr)->setRect(x, y, width, height);
}

void QGraphicsRectItem_DestroyQGraphicsRectItem(void* ptr)
{
	static_cast<QGraphicsRectItem*>(ptr)->~QGraphicsRectItem();
}

void QGraphicsRectItem_DestroyQGraphicsRectItemDefault(void* ptr)
{
	Q_UNUSED(ptr);

}

void* QGraphicsRectItem_BoundingRect(void* ptr)
{
	return ({ QRectF tmpValue = static_cast<QGraphicsRectItem*>(ptr)->boundingRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QGraphicsRectItem_BoundingRectDefault(void* ptr)
{
		return ({ QRectF tmpValue = static_cast<QGraphicsRectItem*>(ptr)->QGraphicsRectItem::boundingRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QGraphicsRectItem_Rect(void* ptr)
{
	return ({ QRectF tmpValue = static_cast<QGraphicsRectItem*>(ptr)->rect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

class MyQGraphicsScene: public QGraphicsScene
{
public:
	MyQGraphicsScene(QObject *parent = Q_NULLPTR) : QGraphicsScene(parent) {QGraphicsScene_QGraphicsScene_QRegisterMetaType();};
	MyQGraphicsScene(const QRectF &sceneRect, QObject *parent = Q_NULLPTR) : QGraphicsScene(sceneRect, parent) {QGraphicsScene_QGraphicsScene_QRegisterMetaType();};
	MyQGraphicsScene(qreal x, qreal y, qreal width, qreal height, QObject *parent = Q_NULLPTR) : QGraphicsScene(x, y, width, height, parent) {QGraphicsScene_QGraphicsScene_QRegisterMetaType();};
	bool event(QEvent * event) { return callbackQGraphicsScene_Event(this, event) != 0; };
	bool eventFilter(QObject * watched, QEvent * event) { return callbackQGraphicsScene_EventFilter(this, watched, event) != 0; };
	bool focusNextPrevChild(bool next) { return callbackQGraphicsScene_FocusNextPrevChild(this, next) != 0; };
	void advance() { callbackQGraphicsScene_Advance(this); };
	void Signal_Changed(const QList<QRectF> & region) { callbackQGraphicsScene_Changed(this, ({ QList<QRectF>* tmpValuea94a58 = new QList<QRectF>(region); QtWidgets_PackedList { tmpValuea94a58, tmpValuea94a58->size() }; })); };
	void clear() { callbackQGraphicsScene_Clear(this); };
	void clearSelection() { callbackQGraphicsScene_ClearSelection(this); };
	void contextMenuEvent(QGraphicsSceneContextMenuEvent * contextMenuEvent) { callbackQGraphicsScene_ContextMenuEvent(this, contextMenuEvent); };
	void dragEnterEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsScene_DragEnterEvent(this, event); };
	void dragLeaveEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsScene_DragLeaveEvent(this, event); };
	void dragMoveEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsScene_DragMoveEvent(this, event); };
	void drawBackground(QPainter * painter, const QRectF & rect) { callbackQGraphicsScene_DrawBackground(this, painter, const_cast<QRectF*>(&rect)); };
	void drawForeground(QPainter * painter, const QRectF & rect) { callbackQGraphicsScene_DrawForeground(this, painter, const_cast<QRectF*>(&rect)); };
	void dropEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsScene_DropEvent(this, event); };
	void focusInEvent(QFocusEvent * focusEvent) { callbackQGraphicsScene_FocusInEvent(this, focusEvent); };
	void Signal_FocusItemChanged(QGraphicsItem * newFocusItem, QGraphicsItem * oldFocusItem, Qt::FocusReason reason) { callbackQGraphicsScene_FocusItemChanged(this, newFocusItem, oldFocusItem, reason); };
	void focusOutEvent(QFocusEvent * focusEvent) { callbackQGraphicsScene_FocusOutEvent(this, focusEvent); };
	void helpEvent(QGraphicsSceneHelpEvent * helpEvent) { callbackQGraphicsScene_HelpEvent(this, helpEvent); };
	void inputMethodEvent(QInputMethodEvent * event) { callbackQGraphicsScene_InputMethodEvent(this, event); };
	void invalidate(const QRectF & rect, QGraphicsScene::SceneLayers layers) { callbackQGraphicsScene_Invalidate(this, const_cast<QRectF*>(&rect), layers); };
	void keyPressEvent(QKeyEvent * keyEvent) { callbackQGraphicsScene_KeyPressEvent(this, keyEvent); };
	void keyReleaseEvent(QKeyEvent * keyEvent) { callbackQGraphicsScene_KeyReleaseEvent(this, keyEvent); };
	void mouseDoubleClickEvent(QGraphicsSceneMouseEvent * mouseEvent) { callbackQGraphicsScene_MouseDoubleClickEvent(this, mouseEvent); };
	void mouseMoveEvent(QGraphicsSceneMouseEvent * mouseEvent) { callbackQGraphicsScene_MouseMoveEvent(this, mouseEvent); };
	void mousePressEvent(QGraphicsSceneMouseEvent * mouseEvent) { callbackQGraphicsScene_MousePressEvent(this, mouseEvent); };
	void mouseReleaseEvent(QGraphicsSceneMouseEvent * mouseEvent) { callbackQGraphicsScene_MouseReleaseEvent(this, mouseEvent); };
	void Signal_SceneRectChanged(const QRectF & rect) { callbackQGraphicsScene_SceneRectChanged(this, const_cast<QRectF*>(&rect)); };
	void Signal_SelectionChanged() { callbackQGraphicsScene_SelectionChanged(this); };
	void update(const QRectF & rect) { callbackQGraphicsScene_Update(this, const_cast<QRectF*>(&rect)); };
	void wheelEvent(QGraphicsSceneWheelEvent * wheelEvent) { callbackQGraphicsScene_WheelEvent(this, wheelEvent); };
	 ~MyQGraphicsScene() { callbackQGraphicsScene_DestroyQGraphicsScene(this); };
	QVariant inputMethodQuery(Qt::InputMethodQuery query) const { return *static_cast<QVariant*>(callbackQGraphicsScene_InputMethodQuery(const_cast<void*>(static_cast<const void*>(this)), query)); };
	const QMetaObject * metaObject() const { return static_cast<QMetaObject*>(callbackQGraphicsScene_MetaObject(const_cast<void*>(static_cast<const void*>(this)))); };
	void childEvent(QChildEvent * event) { callbackQGraphicsScene_ChildEvent(this, event); };
	void connectNotify(const QMetaMethod & sign) { callbackQGraphicsScene_ConnectNotify(this, const_cast<QMetaMethod*>(&sign)); };
	void customEvent(QEvent * event) { callbackQGraphicsScene_CustomEvent(this, event); };
	void deleteLater() { callbackQGraphicsScene_DeleteLater(this); };
	void Signal_Destroyed(QObject * obj) { callbackQGraphicsScene_Destroyed(this, obj); };
	void disconnectNotify(const QMetaMethod & sign) { callbackQGraphicsScene_DisconnectNotify(this, const_cast<QMetaMethod*>(&sign)); };
	void Signal_ObjectNameChanged(const QString & objectName) { QByteArray taa2c4f = objectName.toUtf8(); QtWidgets_PackedString objectNamePacked = { const_cast<char*>(taa2c4f.prepend("WHITESPACE").constData()+10), taa2c4f.size()-10 };callbackQGraphicsScene_ObjectNameChanged(this, objectNamePacked); };
	void timerEvent(QTimerEvent * event) { callbackQGraphicsScene_TimerEvent(this, event); };
};

Q_DECLARE_METATYPE(QGraphicsScene*)
Q_DECLARE_METATYPE(MyQGraphicsScene*)

int QGraphicsScene_QGraphicsScene_QRegisterMetaType(){qRegisterMetaType<QGraphicsScene*>(); return qRegisterMetaType<MyQGraphicsScene*>();}

void* QGraphicsScene_AddEllipse(void* ptr, void* rect, void* pen, void* brush)
{
	return static_cast<QGraphicsScene*>(ptr)->addEllipse(*static_cast<QRectF*>(rect), *static_cast<QPen*>(pen), *static_cast<QBrush*>(brush));
}

void* QGraphicsScene_AddEllipse2(void* ptr, double x, double y, double w, double h, void* pen, void* brush)
{
	return static_cast<QGraphicsScene*>(ptr)->addEllipse(x, y, w, h, *static_cast<QPen*>(pen), *static_cast<QBrush*>(brush));
}

void* QGraphicsScene_CreateItemGroup(void* ptr, void* items)
{
	return static_cast<QGraphicsScene*>(ptr)->createItemGroup(*static_cast<QList<QGraphicsItem *>*>(items));
}

void* QGraphicsScene_AddLine(void* ptr, void* line, void* pen)
{
	return static_cast<QGraphicsScene*>(ptr)->addLine(*static_cast<QLineF*>(line), *static_cast<QPen*>(pen));
}

void* QGraphicsScene_AddLine2(void* ptr, double x1, double y1, double x2, double y2, void* pen)
{
	return static_cast<QGraphicsScene*>(ptr)->addLine(x1, y1, x2, y2, *static_cast<QPen*>(pen));
}

void* QGraphicsScene_AddPath(void* ptr, void* path, void* pen, void* brush)
{
	return static_cast<QGraphicsScene*>(ptr)->addPath(*static_cast<QPainterPath*>(path), *static_cast<QPen*>(pen), *static_cast<QBrush*>(brush));
}

void* QGraphicsScene_AddPixmap(void* ptr, void* pixmap)
{
	return static_cast<QGraphicsScene*>(ptr)->addPixmap(*static_cast<QPixmap*>(pixmap));
}

void* QGraphicsScene_AddPolygon(void* ptr, void* polygon, void* pen, void* brush)
{
	return static_cast<QGraphicsScene*>(ptr)->addPolygon(*static_cast<QPolygonF*>(polygon), *static_cast<QPen*>(pen), *static_cast<QBrush*>(brush));
}

void* QGraphicsScene_AddWidget(void* ptr, void* widget, long long wFlags)
{
		return static_cast<QGraphicsScene*>(ptr)->addWidget(static_cast<QWidget*>(widget), static_cast<Qt::WindowType>(wFlags));
}

void* QGraphicsScene_AddRect(void* ptr, void* rect, void* pen, void* brush)
{
	return static_cast<QGraphicsScene*>(ptr)->addRect(*static_cast<QRectF*>(rect), *static_cast<QPen*>(pen), *static_cast<QBrush*>(brush));
}

void* QGraphicsScene_AddRect2(void* ptr, double x, double y, double w, double h, void* pen, void* brush)
{
	return static_cast<QGraphicsScene*>(ptr)->addRect(x, y, w, h, *static_cast<QPen*>(pen), *static_cast<QBrush*>(brush));
}

void* QGraphicsScene_NewQGraphicsScene(void* parent)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsScene(static_cast<QGraphicsObject*>(parent));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsScene(static_cast<QGraphicsWidget*>(parent));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsScene(static_cast<QLayout*>(parent));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsScene(static_cast<QWidget*>(parent));
	} else if (dynamic_cast<QWindow*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsScene(static_cast<QWindow*>(parent));
	} else {
		return new MyQGraphicsScene(static_cast<QObject*>(parent));
	}
}

void* QGraphicsScene_NewQGraphicsScene2(void* sceneRect, void* parent)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsScene(*static_cast<QRectF*>(sceneRect), static_cast<QGraphicsObject*>(parent));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsScene(*static_cast<QRectF*>(sceneRect), static_cast<QGraphicsWidget*>(parent));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsScene(*static_cast<QRectF*>(sceneRect), static_cast<QLayout*>(parent));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsScene(*static_cast<QRectF*>(sceneRect), static_cast<QWidget*>(parent));
	} else if (dynamic_cast<QWindow*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsScene(*static_cast<QRectF*>(sceneRect), static_cast<QWindow*>(parent));
	} else {
		return new MyQGraphicsScene(*static_cast<QRectF*>(sceneRect), static_cast<QObject*>(parent));
	}
}

void* QGraphicsScene_NewQGraphicsScene3(double x, double y, double width, double height, void* parent)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsScene(x, y, width, height, static_cast<QGraphicsObject*>(parent));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsScene(x, y, width, height, static_cast<QGraphicsWidget*>(parent));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsScene(x, y, width, height, static_cast<QLayout*>(parent));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsScene(x, y, width, height, static_cast<QWidget*>(parent));
	} else if (dynamic_cast<QWindow*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsScene(x, y, width, height, static_cast<QWindow*>(parent));
	} else {
		return new MyQGraphicsScene(x, y, width, height, static_cast<QObject*>(parent));
	}
}

void* QGraphicsScene_AddSimpleText(void* ptr, struct QtWidgets_PackedString text, void* font)
{
	return static_cast<QGraphicsScene*>(ptr)->addSimpleText(QString::fromUtf8(text.data, text.len), *static_cast<QFont*>(font));
}

void* QGraphicsScene_AddText(void* ptr, struct QtWidgets_PackedString text, void* font)
{
	return static_cast<QGraphicsScene*>(ptr)->addText(QString::fromUtf8(text.data, text.len), *static_cast<QFont*>(font));
}

struct QtWidgets_PackedString QGraphicsScene_QGraphicsScene_Tr(char* s, char* c, int n)
{
	return ({ QByteArray tc8e410 = QGraphicsScene::tr(const_cast<const char*>(s), const_cast<const char*>(c), n).toUtf8(); QtWidgets_PackedString { const_cast<char*>(tc8e410.prepend("WHITESPACE").constData()+10), tc8e410.size()-10 }; });
}

char QGraphicsScene_EventDefault(void* ptr, void* event)
{
		return static_cast<QGraphicsScene*>(ptr)->QGraphicsScene::event(static_cast<QEvent*>(event));
}

char QGraphicsScene_EventFilterDefault(void* ptr, void* watched, void* event)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(watched))) {
		return static_cast<QGraphicsScene*>(ptr)->QGraphicsScene::eventFilter(static_cast<QGraphicsObject*>(watched), static_cast<QEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(watched))) {
		return static_cast<QGraphicsScene*>(ptr)->QGraphicsScene::eventFilter(static_cast<QGraphicsWidget*>(watched), static_cast<QEvent*>(event));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(watched))) {
		return static_cast<QGraphicsScene*>(ptr)->QGraphicsScene::eventFilter(static_cast<QLayout*>(watched), static_cast<QEvent*>(event));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(watched))) {
		return static_cast<QGraphicsScene*>(ptr)->QGraphicsScene::eventFilter(static_cast<QWidget*>(watched), static_cast<QEvent*>(event));
	} else {
		return static_cast<QGraphicsScene*>(ptr)->QGraphicsScene::eventFilter(static_cast<QObject*>(watched), static_cast<QEvent*>(event));
	}
}

char QGraphicsScene_FocusNextPrevChild(void* ptr, char next)
{
	bool returnArg;
	QMetaObject::invokeMethod(static_cast<QGraphicsScene*>(ptr), "focusNextPrevChild", Q_RETURN_ARG(bool, returnArg), Q_ARG(bool, next != 0));
	return returnArg;
}

char QGraphicsScene_FocusNextPrevChildDefault(void* ptr, char next)
{
		return static_cast<QGraphicsScene*>(ptr)->QGraphicsScene::focusNextPrevChild(next != 0);
}

char QGraphicsScene_SendEvent(void* ptr, void* item, void* event)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
		return static_cast<QGraphicsScene*>(ptr)->sendEvent(static_cast<QGraphicsObject*>(item), static_cast<QEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
		return static_cast<QGraphicsScene*>(ptr)->sendEvent(static_cast<QGraphicsWidget*>(item), static_cast<QEvent*>(event));
	} else {
		return static_cast<QGraphicsScene*>(ptr)->sendEvent(static_cast<QGraphicsItem*>(item), static_cast<QEvent*>(event));
	}
}

void QGraphicsScene_AddItem(void* ptr, void* item)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
		static_cast<QGraphicsScene*>(ptr)->addItem(static_cast<QGraphicsObject*>(item));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
		static_cast<QGraphicsScene*>(ptr)->addItem(static_cast<QGraphicsWidget*>(item));
	} else {
		static_cast<QGraphicsScene*>(ptr)->addItem(static_cast<QGraphicsItem*>(item));
	}
}

void QGraphicsScene_Advance(void* ptr)
{
	QMetaObject::invokeMethod(static_cast<QGraphicsScene*>(ptr), "advance");
}

void QGraphicsScene_AdvanceDefault(void* ptr)
{
		static_cast<QGraphicsScene*>(ptr)->QGraphicsScene::advance();
}

void QGraphicsScene_ConnectChanged(void* ptr, long long t)
{
	QObject::connect(static_cast<QGraphicsScene*>(ptr), static_cast<void (QGraphicsScene::*)(const QList<QRectF> &)>(&QGraphicsScene::changed), static_cast<MyQGraphicsScene*>(ptr), static_cast<void (MyQGraphicsScene::*)(const QList<QRectF> &)>(&MyQGraphicsScene::Signal_Changed), static_cast<Qt::ConnectionType>(t));
}

void QGraphicsScene_DisconnectChanged(void* ptr)
{
	QObject::disconnect(static_cast<QGraphicsScene*>(ptr), static_cast<void (QGraphicsScene::*)(const QList<QRectF> &)>(&QGraphicsScene::changed), static_cast<MyQGraphicsScene*>(ptr), static_cast<void (MyQGraphicsScene::*)(const QList<QRectF> &)>(&MyQGraphicsScene::Signal_Changed));
}

void QGraphicsScene_Changed(void* ptr, void* region)
{
	static_cast<QGraphicsScene*>(ptr)->changed(*static_cast<QList<QRectF>*>(region));
}

void QGraphicsScene_Clear(void* ptr)
{
	QMetaObject::invokeMethod(static_cast<QGraphicsScene*>(ptr), "clear");
}

void QGraphicsScene_ClearDefault(void* ptr)
{
		static_cast<QGraphicsScene*>(ptr)->QGraphicsScene::clear();
}

void QGraphicsScene_ClearFocus(void* ptr)
{
	static_cast<QGraphicsScene*>(ptr)->clearFocus();
}

void QGraphicsScene_ClearSelection(void* ptr)
{
	QMetaObject::invokeMethod(static_cast<QGraphicsScene*>(ptr), "clearSelection");
}

void QGraphicsScene_ClearSelectionDefault(void* ptr)
{
		static_cast<QGraphicsScene*>(ptr)->QGraphicsScene::clearSelection();
}

void QGraphicsScene_ContextMenuEvent(void* ptr, void* contextMenuEvent)
{
	static_cast<QGraphicsScene*>(ptr)->contextMenuEvent(static_cast<QGraphicsSceneContextMenuEvent*>(contextMenuEvent));
}

void QGraphicsScene_ContextMenuEventDefault(void* ptr, void* contextMenuEvent)
{
		static_cast<QGraphicsScene*>(ptr)->QGraphicsScene::contextMenuEvent(static_cast<QGraphicsSceneContextMenuEvent*>(contextMenuEvent));
}

void QGraphicsScene_DestroyItemGroup(void* ptr, void* group)
{
	static_cast<QGraphicsScene*>(ptr)->destroyItemGroup(static_cast<QGraphicsItemGroup*>(group));
}

void QGraphicsScene_DragEnterEvent(void* ptr, void* event)
{
	static_cast<QGraphicsScene*>(ptr)->dragEnterEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
}

void QGraphicsScene_DragEnterEventDefault(void* ptr, void* event)
{
		static_cast<QGraphicsScene*>(ptr)->QGraphicsScene::dragEnterEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
}

void QGraphicsScene_DragLeaveEvent(void* ptr, void* event)
{
	static_cast<QGraphicsScene*>(ptr)->dragLeaveEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
}

void QGraphicsScene_DragLeaveEventDefault(void* ptr, void* event)
{
		static_cast<QGraphicsScene*>(ptr)->QGraphicsScene::dragLeaveEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
}

void QGraphicsScene_DragMoveEvent(void* ptr, void* event)
{
	static_cast<QGraphicsScene*>(ptr)->dragMoveEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
}

void QGraphicsScene_DragMoveEventDefault(void* ptr, void* event)
{
		static_cast<QGraphicsScene*>(ptr)->QGraphicsScene::dragMoveEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
}

void QGraphicsScene_DrawBackground(void* ptr, void* painter, void* rect)
{
	static_cast<QGraphicsScene*>(ptr)->drawBackground(static_cast<QPainter*>(painter), *static_cast<QRectF*>(rect));
}

void QGraphicsScene_DrawBackgroundDefault(void* ptr, void* painter, void* rect)
{
		static_cast<QGraphicsScene*>(ptr)->QGraphicsScene::drawBackground(static_cast<QPainter*>(painter), *static_cast<QRectF*>(rect));
}

void QGraphicsScene_DrawForeground(void* ptr, void* painter, void* rect)
{
	static_cast<QGraphicsScene*>(ptr)->drawForeground(static_cast<QPainter*>(painter), *static_cast<QRectF*>(rect));
}

void QGraphicsScene_DrawForegroundDefault(void* ptr, void* painter, void* rect)
{
		static_cast<QGraphicsScene*>(ptr)->QGraphicsScene::drawForeground(static_cast<QPainter*>(painter), *static_cast<QRectF*>(rect));
}

void QGraphicsScene_DropEvent(void* ptr, void* event)
{
	static_cast<QGraphicsScene*>(ptr)->dropEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
}

void QGraphicsScene_DropEventDefault(void* ptr, void* event)
{
		static_cast<QGraphicsScene*>(ptr)->QGraphicsScene::dropEvent(static_cast<QGraphicsSceneDragDropEvent*>(event));
}

void QGraphicsScene_FocusInEvent(void* ptr, void* focusEvent)
{
	static_cast<QGraphicsScene*>(ptr)->focusInEvent(static_cast<QFocusEvent*>(focusEvent));
}

void QGraphicsScene_FocusInEventDefault(void* ptr, void* focusEvent)
{
		static_cast<QGraphicsScene*>(ptr)->QGraphicsScene::focusInEvent(static_cast<QFocusEvent*>(focusEvent));
}

void QGraphicsScene_ConnectFocusItemChanged(void* ptr, long long t)
{
	qRegisterMetaType<Qt::FocusReason>();
	QObject::connect(static_cast<QGraphicsScene*>(ptr), static_cast<void (QGraphicsScene::*)(QGraphicsItem *, QGraphicsItem *, Qt::FocusReason)>(&QGraphicsScene::focusItemChanged), static_cast<MyQGraphicsScene*>(ptr), static_cast<void (MyQGraphicsScene::*)(QGraphicsItem *, QGraphicsItem *, Qt::FocusReason)>(&MyQGraphicsScene::Signal_FocusItemChanged), static_cast<Qt::ConnectionType>(t));
}

void QGraphicsScene_DisconnectFocusItemChanged(void* ptr)
{
	QObject::disconnect(static_cast<QGraphicsScene*>(ptr), static_cast<void (QGraphicsScene::*)(QGraphicsItem *, QGraphicsItem *, Qt::FocusReason)>(&QGraphicsScene::focusItemChanged), static_cast<MyQGraphicsScene*>(ptr), static_cast<void (MyQGraphicsScene::*)(QGraphicsItem *, QGraphicsItem *, Qt::FocusReason)>(&MyQGraphicsScene::Signal_FocusItemChanged));
}

void QGraphicsScene_FocusItemChanged(void* ptr, void* newFocusItem, void* oldFocusItem, long long reason)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(newFocusItem))) {
		static_cast<QGraphicsScene*>(ptr)->focusItemChanged(static_cast<QGraphicsObject*>(newFocusItem), static_cast<QGraphicsItem*>(oldFocusItem), static_cast<Qt::FocusReason>(reason));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(newFocusItem))) {
		static_cast<QGraphicsScene*>(ptr)->focusItemChanged(static_cast<QGraphicsWidget*>(newFocusItem), static_cast<QGraphicsItem*>(oldFocusItem), static_cast<Qt::FocusReason>(reason));
	} else {
		static_cast<QGraphicsScene*>(ptr)->focusItemChanged(static_cast<QGraphicsItem*>(newFocusItem), static_cast<QGraphicsItem*>(oldFocusItem), static_cast<Qt::FocusReason>(reason));
	}
}

void QGraphicsScene_FocusOutEvent(void* ptr, void* focusEvent)
{
	static_cast<QGraphicsScene*>(ptr)->focusOutEvent(static_cast<QFocusEvent*>(focusEvent));
}

void QGraphicsScene_FocusOutEventDefault(void* ptr, void* focusEvent)
{
		static_cast<QGraphicsScene*>(ptr)->QGraphicsScene::focusOutEvent(static_cast<QFocusEvent*>(focusEvent));
}

void QGraphicsScene_HelpEvent(void* ptr, void* helpEvent)
{
	static_cast<QGraphicsScene*>(ptr)->helpEvent(static_cast<QGraphicsSceneHelpEvent*>(helpEvent));
}

void QGraphicsScene_HelpEventDefault(void* ptr, void* helpEvent)
{
		static_cast<QGraphicsScene*>(ptr)->QGraphicsScene::helpEvent(static_cast<QGraphicsSceneHelpEvent*>(helpEvent));
}

void QGraphicsScene_InputMethodEvent(void* ptr, void* event)
{
	static_cast<QGraphicsScene*>(ptr)->inputMethodEvent(static_cast<QInputMethodEvent*>(event));
}

void QGraphicsScene_InputMethodEventDefault(void* ptr, void* event)
{
		static_cast<QGraphicsScene*>(ptr)->QGraphicsScene::inputMethodEvent(static_cast<QInputMethodEvent*>(event));
}

void QGraphicsScene_Invalidate(void* ptr, void* rect, long long layers)
{
	QMetaObject::invokeMethod(static_cast<QGraphicsScene*>(ptr), "invalidate", Q_ARG(const QRectF, *static_cast<QRectF*>(rect)), Q_ARG(QGraphicsScene::SceneLayers, static_cast<QGraphicsScene::SceneLayer>(layers)));
}

void QGraphicsScene_InvalidateDefault(void* ptr, void* rect, long long layers)
{
		static_cast<QGraphicsScene*>(ptr)->QGraphicsScene::invalidate(*static_cast<QRectF*>(rect), static_cast<QGraphicsScene::SceneLayer>(layers));
}

void QGraphicsScene_Invalidate2(void* ptr, double x, double y, double w, double h, long long layers)
{
	static_cast<QGraphicsScene*>(ptr)->invalidate(x, y, w, h, static_cast<QGraphicsScene::SceneLayer>(layers));
}

void QGraphicsScene_KeyPressEvent(void* ptr, void* keyEvent)
{
	static_cast<QGraphicsScene*>(ptr)->keyPressEvent(static_cast<QKeyEvent*>(keyEvent));
}

void QGraphicsScene_KeyPressEventDefault(void* ptr, void* keyEvent)
{
		static_cast<QGraphicsScene*>(ptr)->QGraphicsScene::keyPressEvent(static_cast<QKeyEvent*>(keyEvent));
}

void QGraphicsScene_KeyReleaseEvent(void* ptr, void* keyEvent)
{
	static_cast<QGraphicsScene*>(ptr)->keyReleaseEvent(static_cast<QKeyEvent*>(keyEvent));
}

void QGraphicsScene_KeyReleaseEventDefault(void* ptr, void* keyEvent)
{
		static_cast<QGraphicsScene*>(ptr)->QGraphicsScene::keyReleaseEvent(static_cast<QKeyEvent*>(keyEvent));
}

void QGraphicsScene_MouseDoubleClickEvent(void* ptr, void* mouseEvent)
{
	static_cast<QGraphicsScene*>(ptr)->mouseDoubleClickEvent(static_cast<QGraphicsSceneMouseEvent*>(mouseEvent));
}

void QGraphicsScene_MouseDoubleClickEventDefault(void* ptr, void* mouseEvent)
{
		static_cast<QGraphicsScene*>(ptr)->QGraphicsScene::mouseDoubleClickEvent(static_cast<QGraphicsSceneMouseEvent*>(mouseEvent));
}

void QGraphicsScene_MouseMoveEvent(void* ptr, void* mouseEvent)
{
	static_cast<QGraphicsScene*>(ptr)->mouseMoveEvent(static_cast<QGraphicsSceneMouseEvent*>(mouseEvent));
}

void QGraphicsScene_MouseMoveEventDefault(void* ptr, void* mouseEvent)
{
		static_cast<QGraphicsScene*>(ptr)->QGraphicsScene::mouseMoveEvent(static_cast<QGraphicsSceneMouseEvent*>(mouseEvent));
}

void QGraphicsScene_MousePressEvent(void* ptr, void* mouseEvent)
{
	static_cast<QGraphicsScene*>(ptr)->mousePressEvent(static_cast<QGraphicsSceneMouseEvent*>(mouseEvent));
}

void QGraphicsScene_MousePressEventDefault(void* ptr, void* mouseEvent)
{
		static_cast<QGraphicsScene*>(ptr)->QGraphicsScene::mousePressEvent(static_cast<QGraphicsSceneMouseEvent*>(mouseEvent));
}

void QGraphicsScene_MouseReleaseEvent(void* ptr, void* mouseEvent)
{
	static_cast<QGraphicsScene*>(ptr)->mouseReleaseEvent(static_cast<QGraphicsSceneMouseEvent*>(mouseEvent));
}

void QGraphicsScene_MouseReleaseEventDefault(void* ptr, void* mouseEvent)
{
		static_cast<QGraphicsScene*>(ptr)->QGraphicsScene::mouseReleaseEvent(static_cast<QGraphicsSceneMouseEvent*>(mouseEvent));
}

void QGraphicsScene_RemoveItem(void* ptr, void* item)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
		static_cast<QGraphicsScene*>(ptr)->removeItem(static_cast<QGraphicsObject*>(item));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
		static_cast<QGraphicsScene*>(ptr)->removeItem(static_cast<QGraphicsWidget*>(item));
	} else {
		static_cast<QGraphicsScene*>(ptr)->removeItem(static_cast<QGraphicsItem*>(item));
	}
}

void QGraphicsScene_Render(void* ptr, void* painter, void* target, void* source, long long aspectRatioMode)
{
	static_cast<QGraphicsScene*>(ptr)->render(static_cast<QPainter*>(painter), *static_cast<QRectF*>(target), *static_cast<QRectF*>(source), static_cast<Qt::AspectRatioMode>(aspectRatioMode));
}

void QGraphicsScene_ConnectSceneRectChanged(void* ptr, long long t)
{
	QObject::connect(static_cast<QGraphicsScene*>(ptr), static_cast<void (QGraphicsScene::*)(const QRectF &)>(&QGraphicsScene::sceneRectChanged), static_cast<MyQGraphicsScene*>(ptr), static_cast<void (MyQGraphicsScene::*)(const QRectF &)>(&MyQGraphicsScene::Signal_SceneRectChanged), static_cast<Qt::ConnectionType>(t));
}

void QGraphicsScene_DisconnectSceneRectChanged(void* ptr)
{
	QObject::disconnect(static_cast<QGraphicsScene*>(ptr), static_cast<void (QGraphicsScene::*)(const QRectF &)>(&QGraphicsScene::sceneRectChanged), static_cast<MyQGraphicsScene*>(ptr), static_cast<void (MyQGraphicsScene::*)(const QRectF &)>(&MyQGraphicsScene::Signal_SceneRectChanged));
}

void QGraphicsScene_SceneRectChanged(void* ptr, void* rect)
{
	static_cast<QGraphicsScene*>(ptr)->sceneRectChanged(*static_cast<QRectF*>(rect));
}

void QGraphicsScene_ConnectSelectionChanged(void* ptr, long long t)
{
	QObject::connect(static_cast<QGraphicsScene*>(ptr), static_cast<void (QGraphicsScene::*)()>(&QGraphicsScene::selectionChanged), static_cast<MyQGraphicsScene*>(ptr), static_cast<void (MyQGraphicsScene::*)()>(&MyQGraphicsScene::Signal_SelectionChanged), static_cast<Qt::ConnectionType>(t));
}

void QGraphicsScene_DisconnectSelectionChanged(void* ptr)
{
	QObject::disconnect(static_cast<QGraphicsScene*>(ptr), static_cast<void (QGraphicsScene::*)()>(&QGraphicsScene::selectionChanged), static_cast<MyQGraphicsScene*>(ptr), static_cast<void (MyQGraphicsScene::*)()>(&MyQGraphicsScene::Signal_SelectionChanged));
}

void QGraphicsScene_SelectionChanged(void* ptr)
{
	static_cast<QGraphicsScene*>(ptr)->selectionChanged();
}

void QGraphicsScene_SetActivePanel(void* ptr, void* item)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
		static_cast<QGraphicsScene*>(ptr)->setActivePanel(static_cast<QGraphicsObject*>(item));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
		static_cast<QGraphicsScene*>(ptr)->setActivePanel(static_cast<QGraphicsWidget*>(item));
	} else {
		static_cast<QGraphicsScene*>(ptr)->setActivePanel(static_cast<QGraphicsItem*>(item));
	}
}

void QGraphicsScene_SetActiveWindow(void* ptr, void* widget)
{
		static_cast<QGraphicsScene*>(ptr)->setActiveWindow(static_cast<QGraphicsWidget*>(widget));
}

void QGraphicsScene_SetBackgroundBrush(void* ptr, void* brush)
{
	static_cast<QGraphicsScene*>(ptr)->setBackgroundBrush(*static_cast<QBrush*>(brush));
}

void QGraphicsScene_SetBspTreeDepth(void* ptr, int depth)
{
	static_cast<QGraphicsScene*>(ptr)->setBspTreeDepth(depth);
}

void QGraphicsScene_SetFocus(void* ptr, long long focusReason)
{
	static_cast<QGraphicsScene*>(ptr)->setFocus(static_cast<Qt::FocusReason>(focusReason));
}

void QGraphicsScene_SetFocusItem(void* ptr, void* item, long long focusReason)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
		static_cast<QGraphicsScene*>(ptr)->setFocusItem(static_cast<QGraphicsObject*>(item), static_cast<Qt::FocusReason>(focusReason));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
		static_cast<QGraphicsScene*>(ptr)->setFocusItem(static_cast<QGraphicsWidget*>(item), static_cast<Qt::FocusReason>(focusReason));
	} else {
		static_cast<QGraphicsScene*>(ptr)->setFocusItem(static_cast<QGraphicsItem*>(item), static_cast<Qt::FocusReason>(focusReason));
	}
}

void QGraphicsScene_SetFocusOnTouch(void* ptr, char enabled)
{
	static_cast<QGraphicsScene*>(ptr)->setFocusOnTouch(enabled != 0);
}

void QGraphicsScene_SetFont(void* ptr, void* font)
{
	static_cast<QGraphicsScene*>(ptr)->setFont(*static_cast<QFont*>(font));
}

void QGraphicsScene_SetForegroundBrush(void* ptr, void* brush)
{
	static_cast<QGraphicsScene*>(ptr)->setForegroundBrush(*static_cast<QBrush*>(brush));
}

void QGraphicsScene_SetItemIndexMethod(void* ptr, long long method)
{
	static_cast<QGraphicsScene*>(ptr)->setItemIndexMethod(static_cast<QGraphicsScene::ItemIndexMethod>(method));
}

void QGraphicsScene_SetMinimumRenderSize(void* ptr, double minSize)
{
	static_cast<QGraphicsScene*>(ptr)->setMinimumRenderSize(minSize);
}

void QGraphicsScene_SetPalette(void* ptr, void* palette)
{
	static_cast<QGraphicsScene*>(ptr)->setPalette(*static_cast<QPalette*>(palette));
}

void QGraphicsScene_SetSceneRect(void* ptr, void* rect)
{
	static_cast<QGraphicsScene*>(ptr)->setSceneRect(*static_cast<QRectF*>(rect));
}

void QGraphicsScene_SetSceneRect2(void* ptr, double x, double y, double w, double h)
{
	static_cast<QGraphicsScene*>(ptr)->setSceneRect(x, y, w, h);
}

void QGraphicsScene_SetSelectionArea2(void* ptr, void* path, long long mode, void* deviceTransform)
{
	static_cast<QGraphicsScene*>(ptr)->setSelectionArea(*static_cast<QPainterPath*>(path), static_cast<Qt::ItemSelectionMode>(mode), *static_cast<QTransform*>(deviceTransform));
}

void QGraphicsScene_SetSelectionArea3(void* ptr, void* path, long long selectionOperation, long long mode, void* deviceTransform)
{
	static_cast<QGraphicsScene*>(ptr)->setSelectionArea(*static_cast<QPainterPath*>(path), static_cast<Qt::ItemSelectionOperation>(selectionOperation), static_cast<Qt::ItemSelectionMode>(mode), *static_cast<QTransform*>(deviceTransform));
}

void QGraphicsScene_SetSelectionArea(void* ptr, void* path, void* deviceTransform)
{
	static_cast<QGraphicsScene*>(ptr)->setSelectionArea(*static_cast<QPainterPath*>(path), *static_cast<QTransform*>(deviceTransform));
}

void QGraphicsScene_SetSortCacheEnabled(void* ptr, char enabled)
{
	static_cast<QGraphicsScene*>(ptr)->setSortCacheEnabled(enabled != 0);
}

void QGraphicsScene_SetStickyFocus(void* ptr, char enabled)
{
	static_cast<QGraphicsScene*>(ptr)->setStickyFocus(enabled != 0);
}

void QGraphicsScene_SetStyle(void* ptr, void* style)
{
	static_cast<QGraphicsScene*>(ptr)->setStyle(static_cast<QStyle*>(style));
}

void QGraphicsScene_Update(void* ptr, void* rect)
{
	QMetaObject::invokeMethod(static_cast<QGraphicsScene*>(ptr), "update", Q_ARG(const QRectF, *static_cast<QRectF*>(rect)));
}

void QGraphicsScene_UpdateDefault(void* ptr, void* rect)
{
		static_cast<QGraphicsScene*>(ptr)->QGraphicsScene::update(*static_cast<QRectF*>(rect));
}

void QGraphicsScene_Update2(void* ptr, double x, double y, double w, double h)
{
	static_cast<QGraphicsScene*>(ptr)->update(x, y, w, h);
}

void QGraphicsScene_WheelEvent(void* ptr, void* wheelEvent)
{
	static_cast<QGraphicsScene*>(ptr)->wheelEvent(static_cast<QGraphicsSceneWheelEvent*>(wheelEvent));
}

void QGraphicsScene_WheelEventDefault(void* ptr, void* wheelEvent)
{
		static_cast<QGraphicsScene*>(ptr)->QGraphicsScene::wheelEvent(static_cast<QGraphicsSceneWheelEvent*>(wheelEvent));
}

void QGraphicsScene_DestroyQGraphicsScene(void* ptr)
{
	static_cast<QGraphicsScene*>(ptr)->~QGraphicsScene();
}

void QGraphicsScene_DestroyQGraphicsSceneDefault(void* ptr)
{
	Q_UNUSED(ptr);

}

void* QGraphicsScene_BackgroundBrush(void* ptr)
{
	return new QBrush(static_cast<QGraphicsScene*>(ptr)->backgroundBrush());
}

void* QGraphicsScene_ForegroundBrush(void* ptr)
{
	return new QBrush(static_cast<QGraphicsScene*>(ptr)->foregroundBrush());
}

void* QGraphicsScene_Font(void* ptr)
{
	return new QFont(static_cast<QGraphicsScene*>(ptr)->font());
}

void* QGraphicsScene_ActivePanel(void* ptr)
{
	return static_cast<QGraphicsScene*>(ptr)->activePanel();
}

void* QGraphicsScene_FocusItem(void* ptr)
{
	return static_cast<QGraphicsScene*>(ptr)->focusItem();
}

void* QGraphicsScene_ItemAt(void* ptr, void* position, void* deviceTransform)
{
	return static_cast<QGraphicsScene*>(ptr)->itemAt(*static_cast<QPointF*>(position), *static_cast<QTransform*>(deviceTransform));
}

void* QGraphicsScene_ItemAt4(void* ptr, double x, double y, void* deviceTransform)
{
	return static_cast<QGraphicsScene*>(ptr)->itemAt(x, y, *static_cast<QTransform*>(deviceTransform));
}

void* QGraphicsScene_MouseGrabberItem(void* ptr)
{
	return static_cast<QGraphicsScene*>(ptr)->mouseGrabberItem();
}

long long QGraphicsScene_ItemIndexMethod(void* ptr)
{
	return static_cast<QGraphicsScene*>(ptr)->itemIndexMethod();
}

void* QGraphicsScene_ActiveWindow(void* ptr)
{
	return static_cast<QGraphicsScene*>(ptr)->activeWindow();
}

struct QtWidgets_PackedList QGraphicsScene_CollidingItems(void* ptr, void* item, long long mode)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
		return ({ QList<QGraphicsItem *>* tmpValue394039 = new QList<QGraphicsItem *>(static_cast<QGraphicsScene*>(ptr)->collidingItems(static_cast<QGraphicsObject*>(item), static_cast<Qt::ItemSelectionMode>(mode))); QtWidgets_PackedList { tmpValue394039, tmpValue394039->size() }; });
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
		return ({ QList<QGraphicsItem *>* tmpValue394039 = new QList<QGraphicsItem *>(static_cast<QGraphicsScene*>(ptr)->collidingItems(static_cast<QGraphicsWidget*>(item), static_cast<Qt::ItemSelectionMode>(mode))); QtWidgets_PackedList { tmpValue394039, tmpValue394039->size() }; });
	} else {
		return ({ QList<QGraphicsItem *>* tmpValue394039 = new QList<QGraphicsItem *>(static_cast<QGraphicsScene*>(ptr)->collidingItems(static_cast<QGraphicsItem*>(item), static_cast<Qt::ItemSelectionMode>(mode))); QtWidgets_PackedList { tmpValue394039, tmpValue394039->size() }; });
	}
}

struct QtWidgets_PackedList QGraphicsScene_Items(void* ptr, long long order)
{
	return ({ QList<QGraphicsItem *>* tmpValuea79113 = new QList<QGraphicsItem *>(static_cast<QGraphicsScene*>(ptr)->items(static_cast<Qt::SortOrder>(order))); QtWidgets_PackedList { tmpValuea79113, tmpValuea79113->size() }; });
}

struct QtWidgets_PackedList QGraphicsScene_Items5(void* ptr, void* path, long long mode, long long order, void* deviceTransform)
{
	return ({ QList<QGraphicsItem *>* tmpValue0a280c = new QList<QGraphicsItem *>(static_cast<QGraphicsScene*>(ptr)->items(*static_cast<QPainterPath*>(path), static_cast<Qt::ItemSelectionMode>(mode), static_cast<Qt::SortOrder>(order), *static_cast<QTransform*>(deviceTransform))); QtWidgets_PackedList { tmpValue0a280c, tmpValue0a280c->size() }; });
}

struct QtWidgets_PackedList QGraphicsScene_Items2(void* ptr, void* pos, long long mode, long long order, void* deviceTransform)
{
	return ({ QList<QGraphicsItem *>* tmpValue68679d = new QList<QGraphicsItem *>(static_cast<QGraphicsScene*>(ptr)->items(*static_cast<QPointF*>(pos), static_cast<Qt::ItemSelectionMode>(mode), static_cast<Qt::SortOrder>(order), *static_cast<QTransform*>(deviceTransform))); QtWidgets_PackedList { tmpValue68679d, tmpValue68679d->size() }; });
}

struct QtWidgets_PackedList QGraphicsScene_Items4(void* ptr, void* polygon, long long mode, long long order, void* deviceTransform)
{
	return ({ QList<QGraphicsItem *>* tmpValue73aac6 = new QList<QGraphicsItem *>(static_cast<QGraphicsScene*>(ptr)->items(*static_cast<QPolygonF*>(polygon), static_cast<Qt::ItemSelectionMode>(mode), static_cast<Qt::SortOrder>(order), *static_cast<QTransform*>(deviceTransform))); QtWidgets_PackedList { tmpValue73aac6, tmpValue73aac6->size() }; });
}

struct QtWidgets_PackedList QGraphicsScene_Items3(void* ptr, void* rect, long long mode, long long order, void* deviceTransform)
{
	return ({ QList<QGraphicsItem *>* tmpValuec23b67 = new QList<QGraphicsItem *>(static_cast<QGraphicsScene*>(ptr)->items(*static_cast<QRectF*>(rect), static_cast<Qt::ItemSelectionMode>(mode), static_cast<Qt::SortOrder>(order), *static_cast<QTransform*>(deviceTransform))); QtWidgets_PackedList { tmpValuec23b67, tmpValuec23b67->size() }; });
}

struct QtWidgets_PackedList QGraphicsScene_Items7(void* ptr, double x, double y, double w, double h, long long mode, long long order, void* deviceTransform)
{
	return ({ QList<QGraphicsItem *>* tmpValuee3277d = new QList<QGraphicsItem *>(static_cast<QGraphicsScene*>(ptr)->items(x, y, w, h, static_cast<Qt::ItemSelectionMode>(mode), static_cast<Qt::SortOrder>(order), *static_cast<QTransform*>(deviceTransform))); QtWidgets_PackedList { tmpValuee3277d, tmpValuee3277d->size() }; });
}

struct QtWidgets_PackedList QGraphicsScene_SelectedItems(void* ptr)
{
	return ({ QList<QGraphicsItem *>* tmpValue591fec = new QList<QGraphicsItem *>(static_cast<QGraphicsScene*>(ptr)->selectedItems()); QtWidgets_PackedList { tmpValue591fec, tmpValue591fec->size() }; });
}

struct QtWidgets_PackedList QGraphicsScene_Views(void* ptr)
{
	return ({ QList<QGraphicsView *>* tmpValuec79e3c = new QList<QGraphicsView *>(static_cast<QGraphicsScene*>(ptr)->views()); QtWidgets_PackedList { tmpValuec79e3c, tmpValuec79e3c->size() }; });
}

void* QGraphicsScene_SelectionArea(void* ptr)
{
	return new QPainterPath(static_cast<QGraphicsScene*>(ptr)->selectionArea());
}

void* QGraphicsScene_Palette(void* ptr)
{
	return new QPalette(static_cast<QGraphicsScene*>(ptr)->palette());
}

void* QGraphicsScene_ItemsBoundingRect(void* ptr)
{
	return ({ QRectF tmpValue = static_cast<QGraphicsScene*>(ptr)->itemsBoundingRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QGraphicsScene_SceneRect(void* ptr)
{
	return ({ QRectF tmpValue = static_cast<QGraphicsScene*>(ptr)->sceneRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QGraphicsScene_Style(void* ptr)
{
	return static_cast<QGraphicsScene*>(ptr)->style();
}

void* QGraphicsScene_InputMethodQuery(void* ptr, long long query)
{
	return new QVariant(static_cast<QGraphicsScene*>(ptr)->inputMethodQuery(static_cast<Qt::InputMethodQuery>(query)));
}

void* QGraphicsScene_InputMethodQueryDefault(void* ptr, long long query)
{
		return new QVariant(static_cast<QGraphicsScene*>(ptr)->QGraphicsScene::inputMethodQuery(static_cast<Qt::InputMethodQuery>(query)));
}

char QGraphicsScene_FocusOnTouch(void* ptr)
{
	return static_cast<QGraphicsScene*>(ptr)->focusOnTouch();
}

char QGraphicsScene_HasFocus(void* ptr)
{
	return static_cast<QGraphicsScene*>(ptr)->hasFocus();
}

char QGraphicsScene_IsActive(void* ptr)
{
	return static_cast<QGraphicsScene*>(ptr)->isActive();
}

char QGraphicsScene_IsSortCacheEnabled(void* ptr)
{
	return static_cast<QGraphicsScene*>(ptr)->isSortCacheEnabled();
}

char QGraphicsScene_StickyFocus(void* ptr)
{
	return static_cast<QGraphicsScene*>(ptr)->stickyFocus();
}

void* QGraphicsScene_MetaObjectDefault(void* ptr)
{
		return const_cast<QMetaObject*>(static_cast<QGraphicsScene*>(ptr)->QGraphicsScene::metaObject());
}

int QGraphicsScene_BspTreeDepth(void* ptr)
{
	return static_cast<QGraphicsScene*>(ptr)->bspTreeDepth();
}

double QGraphicsScene_Height(void* ptr)
{
	return static_cast<QGraphicsScene*>(ptr)->height();
}

double QGraphicsScene_MinimumRenderSize(void* ptr)
{
	return static_cast<QGraphicsScene*>(ptr)->minimumRenderSize();
}

double QGraphicsScene_Width(void* ptr)
{
	return static_cast<QGraphicsScene*>(ptr)->width();
}

void* QGraphicsScene___createItemGroup_items_atList(void* ptr, int i)
{
	return ({QGraphicsItem * tmp = static_cast<QList<QGraphicsItem *>*>(ptr)->at(i); if (i == static_cast<QList<QGraphicsItem *>*>(ptr)->size()-1) { static_cast<QList<QGraphicsItem *>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QGraphicsScene___createItemGroup_items_setList(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsItem*>(i));
	}
}

void* QGraphicsScene___createItemGroup_items_newList(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QGraphicsItem *>();
}

void* QGraphicsScene___changed_region_atList(void* ptr, int i)
{
	return ({ QRectF tmpValue = ({QRectF tmp = static_cast<QList<QRectF>*>(ptr)->at(i); if (i == static_cast<QList<QRectF>*>(ptr)->size()-1) { static_cast<QList<QRectF>*>(ptr)->~QList(); free(ptr); }; tmp; }); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void QGraphicsScene___changed_region_setList(void* ptr, void* i)
{
	static_cast<QList<QRectF>*>(ptr)->append(*static_cast<QRectF*>(i));
}

void* QGraphicsScene___changed_region_newList(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QRectF>();
}

void* QGraphicsScene___collidingItems_atList(void* ptr, int i)
{
	return ({QGraphicsItem * tmp = static_cast<QList<QGraphicsItem *>*>(ptr)->at(i); if (i == static_cast<QList<QGraphicsItem *>*>(ptr)->size()-1) { static_cast<QList<QGraphicsItem *>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QGraphicsScene___collidingItems_setList(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsItem*>(i));
	}
}

void* QGraphicsScene___collidingItems_newList(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QGraphicsItem *>();
}

void* QGraphicsScene___items_atList(void* ptr, int i)
{
	return ({QGraphicsItem * tmp = static_cast<QList<QGraphicsItem *>*>(ptr)->at(i); if (i == static_cast<QList<QGraphicsItem *>*>(ptr)->size()-1) { static_cast<QList<QGraphicsItem *>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QGraphicsScene___items_setList(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsItem*>(i));
	}
}

void* QGraphicsScene___items_newList(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QGraphicsItem *>();
}

void* QGraphicsScene___items_atList5(void* ptr, int i)
{
	return ({QGraphicsItem * tmp = static_cast<QList<QGraphicsItem *>*>(ptr)->at(i); if (i == static_cast<QList<QGraphicsItem *>*>(ptr)->size()-1) { static_cast<QList<QGraphicsItem *>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QGraphicsScene___items_setList5(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsItem*>(i));
	}
}

void* QGraphicsScene___items_newList5(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QGraphicsItem *>();
}

void* QGraphicsScene___items_atList2(void* ptr, int i)
{
	return ({QGraphicsItem * tmp = static_cast<QList<QGraphicsItem *>*>(ptr)->at(i); if (i == static_cast<QList<QGraphicsItem *>*>(ptr)->size()-1) { static_cast<QList<QGraphicsItem *>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QGraphicsScene___items_setList2(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsItem*>(i));
	}
}

void* QGraphicsScene___items_newList2(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QGraphicsItem *>();
}

void* QGraphicsScene___items_atList4(void* ptr, int i)
{
	return ({QGraphicsItem * tmp = static_cast<QList<QGraphicsItem *>*>(ptr)->at(i); if (i == static_cast<QList<QGraphicsItem *>*>(ptr)->size()-1) { static_cast<QList<QGraphicsItem *>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QGraphicsScene___items_setList4(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsItem*>(i));
	}
}

void* QGraphicsScene___items_newList4(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QGraphicsItem *>();
}

void* QGraphicsScene___items_atList3(void* ptr, int i)
{
	return ({QGraphicsItem * tmp = static_cast<QList<QGraphicsItem *>*>(ptr)->at(i); if (i == static_cast<QList<QGraphicsItem *>*>(ptr)->size()-1) { static_cast<QList<QGraphicsItem *>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QGraphicsScene___items_setList3(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsItem*>(i));
	}
}

void* QGraphicsScene___items_newList3(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QGraphicsItem *>();
}

void* QGraphicsScene___items_atList7(void* ptr, int i)
{
	return ({QGraphicsItem * tmp = static_cast<QList<QGraphicsItem *>*>(ptr)->at(i); if (i == static_cast<QList<QGraphicsItem *>*>(ptr)->size()-1) { static_cast<QList<QGraphicsItem *>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QGraphicsScene___items_setList7(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsItem*>(i));
	}
}

void* QGraphicsScene___items_newList7(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QGraphicsItem *>();
}

void* QGraphicsScene___selectedItems_atList(void* ptr, int i)
{
	return ({QGraphicsItem * tmp = static_cast<QList<QGraphicsItem *>*>(ptr)->at(i); if (i == static_cast<QList<QGraphicsItem *>*>(ptr)->size()-1) { static_cast<QList<QGraphicsItem *>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QGraphicsScene___selectedItems_setList(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsItem*>(i));
	}
}

void* QGraphicsScene___selectedItems_newList(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QGraphicsItem *>();
}

void* QGraphicsScene___views_atList(void* ptr, int i)
{
	return ({QGraphicsView * tmp = static_cast<QList<QGraphicsView *>*>(ptr)->at(i); if (i == static_cast<QList<QGraphicsView *>*>(ptr)->size()-1) { static_cast<QList<QGraphicsView *>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QGraphicsScene___views_setList(void* ptr, void* i)
{
	static_cast<QList<QGraphicsView *>*>(ptr)->append(static_cast<QGraphicsView*>(i));
}

void* QGraphicsScene___views_newList(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QGraphicsView *>();
}

void* QGraphicsScene___dynamicPropertyNames_atList(void* ptr, int i)
{
	return new QByteArray(({QByteArray tmp = static_cast<QList<QByteArray>*>(ptr)->at(i); if (i == static_cast<QList<QByteArray>*>(ptr)->size()-1) { static_cast<QList<QByteArray>*>(ptr)->~QList(); free(ptr); }; tmp; }));
}

void QGraphicsScene___dynamicPropertyNames_setList(void* ptr, void* i)
{
	static_cast<QList<QByteArray>*>(ptr)->append(*static_cast<QByteArray*>(i));
}

void* QGraphicsScene___dynamicPropertyNames_newList(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QByteArray>();
}

void* QGraphicsScene___findChildren_atList2(void* ptr, int i)
{
	return ({QObject* tmp = static_cast<QList<QObject*>*>(ptr)->at(i); if (i == static_cast<QList<QObject*>*>(ptr)->size()-1) { static_cast<QList<QObject*>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QGraphicsScene___findChildren_setList2(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QLayout*>(i));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QWidget*>(i));
	} else {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QObject*>(i));
	}
}

void* QGraphicsScene___findChildren_newList2(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QObject*>();
}

void* QGraphicsScene___findChildren_atList3(void* ptr, int i)
{
	return ({QObject* tmp = static_cast<QList<QObject*>*>(ptr)->at(i); if (i == static_cast<QList<QObject*>*>(ptr)->size()-1) { static_cast<QList<QObject*>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QGraphicsScene___findChildren_setList3(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QLayout*>(i));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QWidget*>(i));
	} else {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QObject*>(i));
	}
}

void* QGraphicsScene___findChildren_newList3(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QObject*>();
}

void* QGraphicsScene___findChildren_atList(void* ptr, int i)
{
	return ({QObject* tmp = static_cast<QList<QObject*>*>(ptr)->at(i); if (i == static_cast<QList<QObject*>*>(ptr)->size()-1) { static_cast<QList<QObject*>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QGraphicsScene___findChildren_setList(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QLayout*>(i));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QWidget*>(i));
	} else {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QObject*>(i));
	}
}

void* QGraphicsScene___findChildren_newList(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QObject*>();
}

void* QGraphicsScene___children_atList(void* ptr, int i)
{
	return ({QObject * tmp = static_cast<QList<QObject *>*>(ptr)->at(i); if (i == static_cast<QList<QObject *>*>(ptr)->size()-1) { static_cast<QList<QObject *>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QGraphicsScene___children_setList(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject *>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject *>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject *>*>(ptr)->append(static_cast<QLayout*>(i));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject *>*>(ptr)->append(static_cast<QWidget*>(i));
	} else {
		static_cast<QList<QObject *>*>(ptr)->append(static_cast<QObject*>(i));
	}
}

void* QGraphicsScene___children_newList(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QObject *>();
}

void QGraphicsScene_ChildEventDefault(void* ptr, void* event)
{
		static_cast<QGraphicsScene*>(ptr)->QGraphicsScene::childEvent(static_cast<QChildEvent*>(event));
}

void QGraphicsScene_ConnectNotifyDefault(void* ptr, void* sign)
{
		static_cast<QGraphicsScene*>(ptr)->QGraphicsScene::connectNotify(*static_cast<QMetaMethod*>(sign));
}

void QGraphicsScene_CustomEventDefault(void* ptr, void* event)
{
		static_cast<QGraphicsScene*>(ptr)->QGraphicsScene::customEvent(static_cast<QEvent*>(event));
}

void QGraphicsScene_DeleteLaterDefault(void* ptr)
{
		static_cast<QGraphicsScene*>(ptr)->QGraphicsScene::deleteLater();
}

void QGraphicsScene_DisconnectNotifyDefault(void* ptr, void* sign)
{
		static_cast<QGraphicsScene*>(ptr)->QGraphicsScene::disconnectNotify(*static_cast<QMetaMethod*>(sign));
}

void QGraphicsScene_TimerEventDefault(void* ptr, void* event)
{
		static_cast<QGraphicsScene*>(ptr)->QGraphicsScene::timerEvent(static_cast<QTimerEvent*>(event));
}

class MyQGraphicsSceneContextMenuEvent: public QGraphicsSceneContextMenuEvent
{
public:
	 ~MyQGraphicsSceneContextMenuEvent() { callbackQGraphicsSceneContextMenuEvent_DestroyQGraphicsSceneContextMenuEvent(this); };
};

Q_DECLARE_METATYPE(QGraphicsSceneContextMenuEvent*)
Q_DECLARE_METATYPE(MyQGraphicsSceneContextMenuEvent*)

int QGraphicsSceneContextMenuEvent_QGraphicsSceneContextMenuEvent_QRegisterMetaType(){qRegisterMetaType<QGraphicsSceneContextMenuEvent*>(); return qRegisterMetaType<MyQGraphicsSceneContextMenuEvent*>();}

void QGraphicsSceneContextMenuEvent_DestroyQGraphicsSceneContextMenuEvent(void* ptr)
{
	static_cast<QGraphicsSceneContextMenuEvent*>(ptr)->~QGraphicsSceneContextMenuEvent();
}

void QGraphicsSceneContextMenuEvent_DestroyQGraphicsSceneContextMenuEventDefault(void* ptr)
{
	Q_UNUSED(ptr);

}

long long QGraphicsSceneContextMenuEvent_Reason(void* ptr)
{
	return static_cast<QGraphicsSceneContextMenuEvent*>(ptr)->reason();
}

void* QGraphicsSceneContextMenuEvent_ScreenPos(void* ptr)
{
	return ({ QPoint tmpValue = static_cast<QGraphicsSceneContextMenuEvent*>(ptr)->screenPos(); new QPoint(tmpValue.x(), tmpValue.y()); });
}

void* QGraphicsSceneContextMenuEvent_Pos(void* ptr)
{
	return ({ QPointF tmpValue = static_cast<QGraphicsSceneContextMenuEvent*>(ptr)->pos(); new QPointF(tmpValue.x(), tmpValue.y()); });
}

void* QGraphicsSceneContextMenuEvent_ScenePos(void* ptr)
{
	return ({ QPointF tmpValue = static_cast<QGraphicsSceneContextMenuEvent*>(ptr)->scenePos(); new QPointF(tmpValue.x(), tmpValue.y()); });
}

long long QGraphicsSceneContextMenuEvent_Modifiers(void* ptr)
{
	return static_cast<QGraphicsSceneContextMenuEvent*>(ptr)->modifiers();
}

class MyQGraphicsSceneDragDropEvent: public QGraphicsSceneDragDropEvent
{
public:
	 ~MyQGraphicsSceneDragDropEvent() { callbackQGraphicsSceneDragDropEvent_DestroyQGraphicsSceneDragDropEvent(this); };
};

Q_DECLARE_METATYPE(QGraphicsSceneDragDropEvent*)
Q_DECLARE_METATYPE(MyQGraphicsSceneDragDropEvent*)

int QGraphicsSceneDragDropEvent_QGraphicsSceneDragDropEvent_QRegisterMetaType(){qRegisterMetaType<QGraphicsSceneDragDropEvent*>(); return qRegisterMetaType<MyQGraphicsSceneDragDropEvent*>();}

void QGraphicsSceneDragDropEvent_AcceptProposedAction(void* ptr)
{
	static_cast<QGraphicsSceneDragDropEvent*>(ptr)->acceptProposedAction();
}

void QGraphicsSceneDragDropEvent_SetDropAction(void* ptr, long long action)
{
	static_cast<QGraphicsSceneDragDropEvent*>(ptr)->setDropAction(static_cast<Qt::DropAction>(action));
}

void QGraphicsSceneDragDropEvent_DestroyQGraphicsSceneDragDropEvent(void* ptr)
{
	static_cast<QGraphicsSceneDragDropEvent*>(ptr)->~QGraphicsSceneDragDropEvent();
}

void QGraphicsSceneDragDropEvent_DestroyQGraphicsSceneDragDropEventDefault(void* ptr)
{
	Q_UNUSED(ptr);

}

void* QGraphicsSceneDragDropEvent_ScreenPos(void* ptr)
{
	return ({ QPoint tmpValue = static_cast<QGraphicsSceneDragDropEvent*>(ptr)->screenPos(); new QPoint(tmpValue.x(), tmpValue.y()); });
}

void* QGraphicsSceneDragDropEvent_Pos(void* ptr)
{
	return ({ QPointF tmpValue = static_cast<QGraphicsSceneDragDropEvent*>(ptr)->pos(); new QPointF(tmpValue.x(), tmpValue.y()); });
}

void* QGraphicsSceneDragDropEvent_ScenePos(void* ptr)
{
	return ({ QPointF tmpValue = static_cast<QGraphicsSceneDragDropEvent*>(ptr)->scenePos(); new QPointF(tmpValue.x(), tmpValue.y()); });
}

void* QGraphicsSceneDragDropEvent_Source(void* ptr)
{
	return static_cast<QGraphicsSceneDragDropEvent*>(ptr)->source();
}

long long QGraphicsSceneDragDropEvent_DropAction(void* ptr)
{
	return static_cast<QGraphicsSceneDragDropEvent*>(ptr)->dropAction();
}

long long QGraphicsSceneDragDropEvent_ProposedAction(void* ptr)
{
	return static_cast<QGraphicsSceneDragDropEvent*>(ptr)->proposedAction();
}

long long QGraphicsSceneDragDropEvent_PossibleActions(void* ptr)
{
	return static_cast<QGraphicsSceneDragDropEvent*>(ptr)->possibleActions();
}

long long QGraphicsSceneDragDropEvent_Modifiers(void* ptr)
{
	return static_cast<QGraphicsSceneDragDropEvent*>(ptr)->modifiers();
}

long long QGraphicsSceneDragDropEvent_Buttons(void* ptr)
{
	return static_cast<QGraphicsSceneDragDropEvent*>(ptr)->buttons();
}

void* QGraphicsSceneDragDropEvent_MimeData(void* ptr)
{
	return const_cast<QMimeData*>(static_cast<QGraphicsSceneDragDropEvent*>(ptr)->mimeData());
}

class MyQGraphicsSceneEvent: public QGraphicsSceneEvent
{
public:
	 ~MyQGraphicsSceneEvent() { callbackQGraphicsSceneEvent_DestroyQGraphicsSceneEvent(this); };
};

Q_DECLARE_METATYPE(QGraphicsSceneEvent*)
Q_DECLARE_METATYPE(MyQGraphicsSceneEvent*)

int QGraphicsSceneEvent_QGraphicsSceneEvent_QRegisterMetaType(){qRegisterMetaType<QGraphicsSceneEvent*>(); return qRegisterMetaType<MyQGraphicsSceneEvent*>();}

void QGraphicsSceneEvent_DestroyQGraphicsSceneEvent(void* ptr)
{
	static_cast<QGraphicsSceneEvent*>(ptr)->~QGraphicsSceneEvent();
}

void QGraphicsSceneEvent_DestroyQGraphicsSceneEventDefault(void* ptr)
{
	Q_UNUSED(ptr);

}

void* QGraphicsSceneEvent_Widget(void* ptr)
{
	return static_cast<QGraphicsSceneEvent*>(ptr)->widget();
}

class MyQGraphicsSceneHelpEvent: public QGraphicsSceneHelpEvent
{
public:
	 ~MyQGraphicsSceneHelpEvent() { callbackQGraphicsSceneHelpEvent_DestroyQGraphicsSceneHelpEvent(this); };
};

Q_DECLARE_METATYPE(QGraphicsSceneHelpEvent*)
Q_DECLARE_METATYPE(MyQGraphicsSceneHelpEvent*)

int QGraphicsSceneHelpEvent_QGraphicsSceneHelpEvent_QRegisterMetaType(){qRegisterMetaType<QGraphicsSceneHelpEvent*>(); return qRegisterMetaType<MyQGraphicsSceneHelpEvent*>();}

void QGraphicsSceneHelpEvent_DestroyQGraphicsSceneHelpEvent(void* ptr)
{
	static_cast<QGraphicsSceneHelpEvent*>(ptr)->~QGraphicsSceneHelpEvent();
}

void QGraphicsSceneHelpEvent_DestroyQGraphicsSceneHelpEventDefault(void* ptr)
{
	Q_UNUSED(ptr);

}

void* QGraphicsSceneHelpEvent_ScreenPos(void* ptr)
{
	return ({ QPoint tmpValue = static_cast<QGraphicsSceneHelpEvent*>(ptr)->screenPos(); new QPoint(tmpValue.x(), tmpValue.y()); });
}

void* QGraphicsSceneHelpEvent_ScenePos(void* ptr)
{
	return ({ QPointF tmpValue = static_cast<QGraphicsSceneHelpEvent*>(ptr)->scenePos(); new QPointF(tmpValue.x(), tmpValue.y()); });
}

class MyQGraphicsSceneHoverEvent: public QGraphicsSceneHoverEvent
{
public:
	 ~MyQGraphicsSceneHoverEvent() { callbackQGraphicsSceneHoverEvent_DestroyQGraphicsSceneHoverEvent(this); };
};

Q_DECLARE_METATYPE(QGraphicsSceneHoverEvent*)
Q_DECLARE_METATYPE(MyQGraphicsSceneHoverEvent*)

int QGraphicsSceneHoverEvent_QGraphicsSceneHoverEvent_QRegisterMetaType(){qRegisterMetaType<QGraphicsSceneHoverEvent*>(); return qRegisterMetaType<MyQGraphicsSceneHoverEvent*>();}

void QGraphicsSceneHoverEvent_DestroyQGraphicsSceneHoverEvent(void* ptr)
{
	static_cast<QGraphicsSceneHoverEvent*>(ptr)->~QGraphicsSceneHoverEvent();
}

void QGraphicsSceneHoverEvent_DestroyQGraphicsSceneHoverEventDefault(void* ptr)
{
	Q_UNUSED(ptr);

}

void* QGraphicsSceneHoverEvent_LastScreenPos(void* ptr)
{
	return ({ QPoint tmpValue = static_cast<QGraphicsSceneHoverEvent*>(ptr)->lastScreenPos(); new QPoint(tmpValue.x(), tmpValue.y()); });
}

void* QGraphicsSceneHoverEvent_ScreenPos(void* ptr)
{
	return ({ QPoint tmpValue = static_cast<QGraphicsSceneHoverEvent*>(ptr)->screenPos(); new QPoint(tmpValue.x(), tmpValue.y()); });
}

void* QGraphicsSceneHoverEvent_LastPos(void* ptr)
{
	return ({ QPointF tmpValue = static_cast<QGraphicsSceneHoverEvent*>(ptr)->lastPos(); new QPointF(tmpValue.x(), tmpValue.y()); });
}

void* QGraphicsSceneHoverEvent_LastScenePos(void* ptr)
{
	return ({ QPointF tmpValue = static_cast<QGraphicsSceneHoverEvent*>(ptr)->lastScenePos(); new QPointF(tmpValue.x(), tmpValue.y()); });
}

void* QGraphicsSceneHoverEvent_Pos(void* ptr)
{
	return ({ QPointF tmpValue = static_cast<QGraphicsSceneHoverEvent*>(ptr)->pos(); new QPointF(tmpValue.x(), tmpValue.y()); });
}

void* QGraphicsSceneHoverEvent_ScenePos(void* ptr)
{
	return ({ QPointF tmpValue = static_cast<QGraphicsSceneHoverEvent*>(ptr)->scenePos(); new QPointF(tmpValue.x(), tmpValue.y()); });
}

long long QGraphicsSceneHoverEvent_Modifiers(void* ptr)
{
	return static_cast<QGraphicsSceneHoverEvent*>(ptr)->modifiers();
}

class MyQGraphicsSceneMouseEvent: public QGraphicsSceneMouseEvent
{
public:
	 ~MyQGraphicsSceneMouseEvent() { callbackQGraphicsSceneMouseEvent_DestroyQGraphicsSceneMouseEvent(this); };
};

Q_DECLARE_METATYPE(QGraphicsSceneMouseEvent*)
Q_DECLARE_METATYPE(MyQGraphicsSceneMouseEvent*)

int QGraphicsSceneMouseEvent_QGraphicsSceneMouseEvent_QRegisterMetaType(){qRegisterMetaType<QGraphicsSceneMouseEvent*>(); return qRegisterMetaType<MyQGraphicsSceneMouseEvent*>();}

void QGraphicsSceneMouseEvent_DestroyQGraphicsSceneMouseEvent(void* ptr)
{
	static_cast<QGraphicsSceneMouseEvent*>(ptr)->~QGraphicsSceneMouseEvent();
}

void QGraphicsSceneMouseEvent_DestroyQGraphicsSceneMouseEventDefault(void* ptr)
{
	Q_UNUSED(ptr);

}

void* QGraphicsSceneMouseEvent_ButtonDownScreenPos(void* ptr, long long button)
{
	return ({ QPoint tmpValue = static_cast<QGraphicsSceneMouseEvent*>(ptr)->buttonDownScreenPos(static_cast<Qt::MouseButton>(button)); new QPoint(tmpValue.x(), tmpValue.y()); });
}

void* QGraphicsSceneMouseEvent_LastScreenPos(void* ptr)
{
	return ({ QPoint tmpValue = static_cast<QGraphicsSceneMouseEvent*>(ptr)->lastScreenPos(); new QPoint(tmpValue.x(), tmpValue.y()); });
}

void* QGraphicsSceneMouseEvent_ScreenPos(void* ptr)
{
	return ({ QPoint tmpValue = static_cast<QGraphicsSceneMouseEvent*>(ptr)->screenPos(); new QPoint(tmpValue.x(), tmpValue.y()); });
}

void* QGraphicsSceneMouseEvent_ButtonDownPos(void* ptr, long long button)
{
	return ({ QPointF tmpValue = static_cast<QGraphicsSceneMouseEvent*>(ptr)->buttonDownPos(static_cast<Qt::MouseButton>(button)); new QPointF(tmpValue.x(), tmpValue.y()); });
}

void* QGraphicsSceneMouseEvent_ButtonDownScenePos(void* ptr, long long button)
{
	return ({ QPointF tmpValue = static_cast<QGraphicsSceneMouseEvent*>(ptr)->buttonDownScenePos(static_cast<Qt::MouseButton>(button)); new QPointF(tmpValue.x(), tmpValue.y()); });
}

void* QGraphicsSceneMouseEvent_LastPos(void* ptr)
{
	return ({ QPointF tmpValue = static_cast<QGraphicsSceneMouseEvent*>(ptr)->lastPos(); new QPointF(tmpValue.x(), tmpValue.y()); });
}

void* QGraphicsSceneMouseEvent_LastScenePos(void* ptr)
{
	return ({ QPointF tmpValue = static_cast<QGraphicsSceneMouseEvent*>(ptr)->lastScenePos(); new QPointF(tmpValue.x(), tmpValue.y()); });
}

void* QGraphicsSceneMouseEvent_Pos(void* ptr)
{
	return ({ QPointF tmpValue = static_cast<QGraphicsSceneMouseEvent*>(ptr)->pos(); new QPointF(tmpValue.x(), tmpValue.y()); });
}

void* QGraphicsSceneMouseEvent_ScenePos(void* ptr)
{
	return ({ QPointF tmpValue = static_cast<QGraphicsSceneMouseEvent*>(ptr)->scenePos(); new QPointF(tmpValue.x(), tmpValue.y()); });
}

long long QGraphicsSceneMouseEvent_Modifiers(void* ptr)
{
	return static_cast<QGraphicsSceneMouseEvent*>(ptr)->modifiers();
}

long long QGraphicsSceneMouseEvent_Button(void* ptr)
{
	return static_cast<QGraphicsSceneMouseEvent*>(ptr)->button();
}

long long QGraphicsSceneMouseEvent_Buttons(void* ptr)
{
	return static_cast<QGraphicsSceneMouseEvent*>(ptr)->buttons();
}

long long QGraphicsSceneMouseEvent_Flags(void* ptr)
{
	return static_cast<QGraphicsSceneMouseEvent*>(ptr)->flags();
}

long long QGraphicsSceneMouseEvent_Source(void* ptr)
{
	return static_cast<QGraphicsSceneMouseEvent*>(ptr)->source();
}

class MyQGraphicsSceneMoveEvent: public QGraphicsSceneMoveEvent
{
public:
	MyQGraphicsSceneMoveEvent() : QGraphicsSceneMoveEvent() {QGraphicsSceneMoveEvent_QGraphicsSceneMoveEvent_QRegisterMetaType();};
	 ~MyQGraphicsSceneMoveEvent() { callbackQGraphicsSceneMoveEvent_DestroyQGraphicsSceneMoveEvent(this); };
};

Q_DECLARE_METATYPE(QGraphicsSceneMoveEvent*)
Q_DECLARE_METATYPE(MyQGraphicsSceneMoveEvent*)

int QGraphicsSceneMoveEvent_QGraphicsSceneMoveEvent_QRegisterMetaType(){qRegisterMetaType<QGraphicsSceneMoveEvent*>(); return qRegisterMetaType<MyQGraphicsSceneMoveEvent*>();}

void* QGraphicsSceneMoveEvent_NewQGraphicsSceneMoveEvent()
{
	return new MyQGraphicsSceneMoveEvent();
}

void QGraphicsSceneMoveEvent_DestroyQGraphicsSceneMoveEvent(void* ptr)
{
	static_cast<QGraphicsSceneMoveEvent*>(ptr)->~QGraphicsSceneMoveEvent();
}

void QGraphicsSceneMoveEvent_DestroyQGraphicsSceneMoveEventDefault(void* ptr)
{
	Q_UNUSED(ptr);

}

void* QGraphicsSceneMoveEvent_NewPos(void* ptr)
{
	return ({ QPointF tmpValue = static_cast<QGraphicsSceneMoveEvent*>(ptr)->newPos(); new QPointF(tmpValue.x(), tmpValue.y()); });
}

void* QGraphicsSceneMoveEvent_OldPos(void* ptr)
{
	return ({ QPointF tmpValue = static_cast<QGraphicsSceneMoveEvent*>(ptr)->oldPos(); new QPointF(tmpValue.x(), tmpValue.y()); });
}

class MyQGraphicsSceneResizeEvent: public QGraphicsSceneResizeEvent
{
public:
	MyQGraphicsSceneResizeEvent() : QGraphicsSceneResizeEvent() {QGraphicsSceneResizeEvent_QGraphicsSceneResizeEvent_QRegisterMetaType();};
	 ~MyQGraphicsSceneResizeEvent() { callbackQGraphicsSceneResizeEvent_DestroyQGraphicsSceneResizeEvent(this); };
};

Q_DECLARE_METATYPE(QGraphicsSceneResizeEvent*)
Q_DECLARE_METATYPE(MyQGraphicsSceneResizeEvent*)

int QGraphicsSceneResizeEvent_QGraphicsSceneResizeEvent_QRegisterMetaType(){qRegisterMetaType<QGraphicsSceneResizeEvent*>(); return qRegisterMetaType<MyQGraphicsSceneResizeEvent*>();}

void* QGraphicsSceneResizeEvent_NewQGraphicsSceneResizeEvent()
{
	return new MyQGraphicsSceneResizeEvent();
}

void QGraphicsSceneResizeEvent_DestroyQGraphicsSceneResizeEvent(void* ptr)
{
	static_cast<QGraphicsSceneResizeEvent*>(ptr)->~QGraphicsSceneResizeEvent();
}

void QGraphicsSceneResizeEvent_DestroyQGraphicsSceneResizeEventDefault(void* ptr)
{
	Q_UNUSED(ptr);

}

void* QGraphicsSceneResizeEvent_NewSize(void* ptr)
{
	return ({ QSizeF tmpValue = static_cast<QGraphicsSceneResizeEvent*>(ptr)->newSize(); new QSizeF(tmpValue.width(), tmpValue.height()); });
}

void* QGraphicsSceneResizeEvent_OldSize(void* ptr)
{
	return ({ QSizeF tmpValue = static_cast<QGraphicsSceneResizeEvent*>(ptr)->oldSize(); new QSizeF(tmpValue.width(), tmpValue.height()); });
}

class MyQGraphicsSceneWheelEvent: public QGraphicsSceneWheelEvent
{
public:
	 ~MyQGraphicsSceneWheelEvent() { callbackQGraphicsSceneWheelEvent_DestroyQGraphicsSceneWheelEvent(this); };
};

Q_DECLARE_METATYPE(QGraphicsSceneWheelEvent*)
Q_DECLARE_METATYPE(MyQGraphicsSceneWheelEvent*)

int QGraphicsSceneWheelEvent_QGraphicsSceneWheelEvent_QRegisterMetaType(){qRegisterMetaType<QGraphicsSceneWheelEvent*>(); return qRegisterMetaType<MyQGraphicsSceneWheelEvent*>();}

void QGraphicsSceneWheelEvent_DestroyQGraphicsSceneWheelEvent(void* ptr)
{
	static_cast<QGraphicsSceneWheelEvent*>(ptr)->~QGraphicsSceneWheelEvent();
}

void QGraphicsSceneWheelEvent_DestroyQGraphicsSceneWheelEventDefault(void* ptr)
{
	Q_UNUSED(ptr);

}

void* QGraphicsSceneWheelEvent_ScreenPos(void* ptr)
{
	return ({ QPoint tmpValue = static_cast<QGraphicsSceneWheelEvent*>(ptr)->screenPos(); new QPoint(tmpValue.x(), tmpValue.y()); });
}

void* QGraphicsSceneWheelEvent_Pos(void* ptr)
{
	return ({ QPointF tmpValue = static_cast<QGraphicsSceneWheelEvent*>(ptr)->pos(); new QPointF(tmpValue.x(), tmpValue.y()); });
}

void* QGraphicsSceneWheelEvent_ScenePos(void* ptr)
{
	return ({ QPointF tmpValue = static_cast<QGraphicsSceneWheelEvent*>(ptr)->scenePos(); new QPointF(tmpValue.x(), tmpValue.y()); });
}

long long QGraphicsSceneWheelEvent_Modifiers(void* ptr)
{
	return static_cast<QGraphicsSceneWheelEvent*>(ptr)->modifiers();
}

long long QGraphicsSceneWheelEvent_Buttons(void* ptr)
{
	return static_cast<QGraphicsSceneWheelEvent*>(ptr)->buttons();
}

long long QGraphicsSceneWheelEvent_Orientation(void* ptr)
{
	return static_cast<QGraphicsSceneWheelEvent*>(ptr)->orientation();
}

int QGraphicsSceneWheelEvent_Delta(void* ptr)
{
	return static_cast<QGraphicsSceneWheelEvent*>(ptr)->delta();
}

class MyQGraphicsSimpleTextItem: public QGraphicsSimpleTextItem
{
public:
	MyQGraphicsSimpleTextItem(QGraphicsItem *parent = Q_NULLPTR) : QGraphicsSimpleTextItem(parent) {QGraphicsSimpleTextItem_QGraphicsSimpleTextItem_QRegisterMetaType();};
	MyQGraphicsSimpleTextItem(const QString &text, QGraphicsItem *parent = Q_NULLPTR) : QGraphicsSimpleTextItem(text, parent) {QGraphicsSimpleTextItem_QGraphicsSimpleTextItem_QRegisterMetaType();};
	void paint(QPainter * painter, const QStyleOptionGraphicsItem * option, QWidget * widget) { callbackQGraphicsSimpleTextItem_Paint(this, painter, const_cast<QStyleOptionGraphicsItem*>(option), widget); };
	 ~MyQGraphicsSimpleTextItem() { callbackQGraphicsSimpleTextItem_DestroyQGraphicsSimpleTextItem(this); };
	QPainterPath opaqueArea() const { return *static_cast<QPainterPath*>(callbackQGraphicsItem_OpaqueArea(const_cast<void*>(static_cast<const void*>(this)))); };
	QPainterPath shape() const { return *static_cast<QPainterPath*>(callbackQGraphicsItem_Shape(const_cast<void*>(static_cast<const void*>(this)))); };
	QRectF boundingRect() const { return *static_cast<QRectF*>(callbackQGraphicsSimpleTextItem_BoundingRect(const_cast<void*>(static_cast<const void*>(this)))); };
	bool contains(const QPointF & point) const { return callbackQGraphicsItem_Contains(const_cast<void*>(static_cast<const void*>(this)), const_cast<QPointF*>(&point)) != 0; };
	bool isObscuredBy(const QGraphicsItem * item) const { return callbackQGraphicsItem_IsObscuredBy(const_cast<void*>(static_cast<const void*>(this)), const_cast<QGraphicsItem*>(item)) != 0; };
	int type() const { return callbackQGraphicsItem_Type(const_cast<void*>(static_cast<const void*>(this))); };
	QVariant itemChange(QGraphicsItem::GraphicsItemChange change, const QVariant & value) { return *static_cast<QVariant*>(callbackQGraphicsItem_ItemChange(this, change, const_cast<QVariant*>(&value))); };
	bool sceneEvent(QEvent * event) { return callbackQGraphicsItem_SceneEvent(this, event) != 0; };
	bool sceneEventFilter(QGraphicsItem * watched, QEvent * event) { return callbackQGraphicsItem_SceneEventFilter(this, watched, event) != 0; };
	void advance(int phase) { callbackQGraphicsItem_Advance(this, phase); };
	void contextMenuEvent(QGraphicsSceneContextMenuEvent * event) { callbackQGraphicsItem_ContextMenuEvent(this, event); };
	void dragEnterEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DragEnterEvent(this, event); };
	void dragLeaveEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DragLeaveEvent(this, event); };
	void dragMoveEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DragMoveEvent(this, event); };
	void dropEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DropEvent(this, event); };
	void focusInEvent(QFocusEvent * event) { callbackQGraphicsItem_FocusInEvent(this, event); };
	void focusOutEvent(QFocusEvent * event) { callbackQGraphicsItem_FocusOutEvent(this, event); };
	void hoverEnterEvent(QGraphicsSceneHoverEvent * event) { callbackQGraphicsItem_HoverEnterEvent(this, event); };
	void hoverLeaveEvent(QGraphicsSceneHoverEvent * event) { callbackQGraphicsItem_HoverLeaveEvent(this, event); };
	void hoverMoveEvent(QGraphicsSceneHoverEvent * event) { callbackQGraphicsItem_HoverMoveEvent(this, event); };
	void inputMethodEvent(QInputMethodEvent * event) { callbackQGraphicsItem_InputMethodEvent(this, event); };
	void keyPressEvent(QKeyEvent * event) { callbackQGraphicsItem_KeyPressEvent(this, event); };
	void keyReleaseEvent(QKeyEvent * event) { callbackQGraphicsItem_KeyReleaseEvent(this, event); };
	void mouseDoubleClickEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MouseDoubleClickEvent(this, event); };
	void mouseMoveEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MouseMoveEvent(this, event); };
	void mousePressEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MousePressEvent(this, event); };
	void mouseReleaseEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MouseReleaseEvent(this, event); };
	void wheelEvent(QGraphicsSceneWheelEvent * event) { callbackQGraphicsItem_WheelEvent(this, event); };
	QVariant inputMethodQuery(Qt::InputMethodQuery query) const { return *static_cast<QVariant*>(callbackQGraphicsItem_InputMethodQuery(const_cast<void*>(static_cast<const void*>(this)), query)); };
	bool collidesWithItem(const QGraphicsItem * other, Qt::ItemSelectionMode mode) const { return callbackQGraphicsItem_CollidesWithItem(const_cast<void*>(static_cast<const void*>(this)), const_cast<QGraphicsItem*>(other), mode) != 0; };
	bool collidesWithPath(const QPainterPath & path, Qt::ItemSelectionMode mode) const { return callbackQGraphicsItem_CollidesWithPath(const_cast<void*>(static_cast<const void*>(this)), const_cast<QPainterPath*>(&path), mode) != 0; };
};

Q_DECLARE_METATYPE(QGraphicsSimpleTextItem*)
Q_DECLARE_METATYPE(MyQGraphicsSimpleTextItem*)

int QGraphicsSimpleTextItem_QGraphicsSimpleTextItem_QRegisterMetaType(){qRegisterMetaType<QGraphicsSimpleTextItem*>(); return qRegisterMetaType<MyQGraphicsSimpleTextItem*>();}

void* QGraphicsSimpleTextItem_NewQGraphicsSimpleTextItem(void* parent)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsSimpleTextItem(static_cast<QGraphicsObject*>(parent));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsSimpleTextItem(static_cast<QGraphicsWidget*>(parent));
	} else {
		return new MyQGraphicsSimpleTextItem(static_cast<QGraphicsItem*>(parent));
	}
}

void* QGraphicsSimpleTextItem_NewQGraphicsSimpleTextItem2(struct QtWidgets_PackedString text, void* parent)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsSimpleTextItem(QString::fromUtf8(text.data, text.len), static_cast<QGraphicsObject*>(parent));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsSimpleTextItem(QString::fromUtf8(text.data, text.len), static_cast<QGraphicsWidget*>(parent));
	} else {
		return new MyQGraphicsSimpleTextItem(QString::fromUtf8(text.data, text.len), static_cast<QGraphicsItem*>(parent));
	}
}

void QGraphicsSimpleTextItem_Paint(void* ptr, void* painter, void* option, void* widget)
{
		static_cast<QGraphicsSimpleTextItem*>(ptr)->paint(static_cast<QPainter*>(painter), static_cast<QStyleOptionGraphicsItem*>(option), static_cast<QWidget*>(widget));
}

void QGraphicsSimpleTextItem_PaintDefault(void* ptr, void* painter, void* option, void* widget)
{
		static_cast<QGraphicsSimpleTextItem*>(ptr)->QGraphicsSimpleTextItem::paint(static_cast<QPainter*>(painter), static_cast<QStyleOptionGraphicsItem*>(option), static_cast<QWidget*>(widget));
}

void QGraphicsSimpleTextItem_SetFont(void* ptr, void* font)
{
	static_cast<QGraphicsSimpleTextItem*>(ptr)->setFont(*static_cast<QFont*>(font));
}

void QGraphicsSimpleTextItem_SetText(void* ptr, struct QtWidgets_PackedString text)
{
	static_cast<QGraphicsSimpleTextItem*>(ptr)->setText(QString::fromUtf8(text.data, text.len));
}

void QGraphicsSimpleTextItem_DestroyQGraphicsSimpleTextItem(void* ptr)
{
	static_cast<QGraphicsSimpleTextItem*>(ptr)->~QGraphicsSimpleTextItem();
}

void QGraphicsSimpleTextItem_DestroyQGraphicsSimpleTextItemDefault(void* ptr)
{
	Q_UNUSED(ptr);

}

void* QGraphicsSimpleTextItem_Font(void* ptr)
{
	return new QFont(static_cast<QGraphicsSimpleTextItem*>(ptr)->font());
}

void* QGraphicsSimpleTextItem_BoundingRect(void* ptr)
{
	return ({ QRectF tmpValue = static_cast<QGraphicsSimpleTextItem*>(ptr)->boundingRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QGraphicsSimpleTextItem_BoundingRectDefault(void* ptr)
{
		return ({ QRectF tmpValue = static_cast<QGraphicsSimpleTextItem*>(ptr)->QGraphicsSimpleTextItem::boundingRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

struct QtWidgets_PackedString QGraphicsSimpleTextItem_Text(void* ptr)
{
	return ({ QByteArray tb2ceed = static_cast<QGraphicsSimpleTextItem*>(ptr)->text().toUtf8(); QtWidgets_PackedString { const_cast<char*>(tb2ceed.prepend("WHITESPACE").constData()+10), tb2ceed.size()-10 }; });
}

class MyQGraphicsTextItem: public QGraphicsTextItem
{
public:
	MyQGraphicsTextItem(QGraphicsItem *parent = Q_NULLPTR) : QGraphicsTextItem(parent) {QGraphicsTextItem_QGraphicsTextItem_QRegisterMetaType();};
	MyQGraphicsTextItem(const QString &text, QGraphicsItem *parent = Q_NULLPTR) : QGraphicsTextItem(text, parent) {QGraphicsTextItem_QGraphicsTextItem_QRegisterMetaType();};
	bool sceneEvent(QEvent * event) { return callbackQGraphicsItem_SceneEvent(this, event) != 0; };
	void contextMenuEvent(QGraphicsSceneContextMenuEvent * event) { callbackQGraphicsItem_ContextMenuEvent(this, event); };
	void dragEnterEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DragEnterEvent(this, event); };
	void dragLeaveEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DragLeaveEvent(this, event); };
	void dragMoveEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DragMoveEvent(this, event); };
	void dropEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DropEvent(this, event); };
	void focusInEvent(QFocusEvent * event) { callbackQGraphicsItem_FocusInEvent(this, event); };
	void focusOutEvent(QFocusEvent * event) { callbackQGraphicsItem_FocusOutEvent(this, event); };
	void hoverEnterEvent(QGraphicsSceneHoverEvent * event) { callbackQGraphicsItem_HoverEnterEvent(this, event); };
	void hoverLeaveEvent(QGraphicsSceneHoverEvent * event) { callbackQGraphicsItem_HoverLeaveEvent(this, event); };
	void hoverMoveEvent(QGraphicsSceneHoverEvent * event) { callbackQGraphicsItem_HoverMoveEvent(this, event); };
	void inputMethodEvent(QInputMethodEvent * event) { callbackQGraphicsItem_InputMethodEvent(this, event); };
	void keyPressEvent(QKeyEvent * event) { callbackQGraphicsItem_KeyPressEvent(this, event); };
	void keyReleaseEvent(QKeyEvent * event) { callbackQGraphicsItem_KeyReleaseEvent(this, event); };
	void Signal_LinkActivated(const QString & link) { QByteArray t4f0aa5 = link.toUtf8(); QtWidgets_PackedString linkPacked = { const_cast<char*>(t4f0aa5.prepend("WHITESPACE").constData()+10), t4f0aa5.size()-10 };callbackQGraphicsTextItem_LinkActivated(this, linkPacked); };
	void Signal_LinkHovered(const QString & link) { QByteArray t4f0aa5 = link.toUtf8(); QtWidgets_PackedString linkPacked = { const_cast<char*>(t4f0aa5.prepend("WHITESPACE").constData()+10), t4f0aa5.size()-10 };callbackQGraphicsTextItem_LinkHovered(this, linkPacked); };
	void mouseDoubleClickEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MouseDoubleClickEvent(this, event); };
	void mouseMoveEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MouseMoveEvent(this, event); };
	void mousePressEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MousePressEvent(this, event); };
	void mouseReleaseEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MouseReleaseEvent(this, event); };
	void paint(QPainter * painter, const QStyleOptionGraphicsItem * option, QWidget * widget) { callbackQGraphicsTextItem_Paint(this, painter, const_cast<QStyleOptionGraphicsItem*>(option), widget); };
	 ~MyQGraphicsTextItem() { callbackQGraphicsTextItem_DestroyQGraphicsTextItem(this); };
	QPainterPath opaqueArea() const { return *static_cast<QPainterPath*>(callbackQGraphicsItem_OpaqueArea(const_cast<void*>(static_cast<const void*>(this)))); };
	QPainterPath shape() const { return *static_cast<QPainterPath*>(callbackQGraphicsItem_Shape(const_cast<void*>(static_cast<const void*>(this)))); };
	QRectF boundingRect() const { return *static_cast<QRectF*>(callbackQGraphicsTextItem_BoundingRect(const_cast<void*>(static_cast<const void*>(this)))); };
	QVariant inputMethodQuery(Qt::InputMethodQuery query) const { return *static_cast<QVariant*>(callbackQGraphicsItem_InputMethodQuery(const_cast<void*>(static_cast<const void*>(this)), query)); };
	bool contains(const QPointF & point) const { return callbackQGraphicsItem_Contains(const_cast<void*>(static_cast<const void*>(this)), const_cast<QPointF*>(&point)) != 0; };
	bool isObscuredBy(const QGraphicsItem * item) const { return callbackQGraphicsItem_IsObscuredBy(const_cast<void*>(static_cast<const void*>(this)), const_cast<QGraphicsItem*>(item)) != 0; };
	const QMetaObject * metaObject() const { return static_cast<QMetaObject*>(callbackQGraphicsObject_MetaObject(const_cast<void*>(static_cast<const void*>(this)))); };
	int type() const { return callbackQGraphicsItem_Type(const_cast<void*>(static_cast<const void*>(this))); };
	bool event(QEvent * ev) { return callbackQGraphicsObject_Event(this, ev) != 0; };
	void Signal_EnabledChanged() { callbackQGraphicsObject_EnabledChanged(this); };
	void Signal_OpacityChanged() { callbackQGraphicsObject_OpacityChanged(this); };
	void Signal_ParentChanged() { callbackQGraphicsObject_ParentChanged(this); };
	void Signal_RotationChanged() { callbackQGraphicsObject_RotationChanged(this); };
	void Signal_ScaleChanged() { callbackQGraphicsObject_ScaleChanged(this); };
	void updateMicroFocus() { callbackQGraphicsObject_UpdateMicroFocus(this); };
	void Signal_VisibleChanged() { callbackQGraphicsObject_VisibleChanged(this); };
	void Signal_XChanged() { callbackQGraphicsObject_XChanged(this); };
	void Signal_YChanged() { callbackQGraphicsObject_YChanged(this); };
	void Signal_ZChanged() { callbackQGraphicsObject_ZChanged(this); };
	bool eventFilter(QObject * watched, QEvent * event) { return callbackQGraphicsObject_EventFilter(this, watched, event) != 0; };
	void childEvent(QChildEvent * event) { callbackQGraphicsObject_ChildEvent(this, event); };
	void connectNotify(const QMetaMethod & sign) { callbackQGraphicsObject_ConnectNotify(this, const_cast<QMetaMethod*>(&sign)); };
	void customEvent(QEvent * event) { callbackQGraphicsObject_CustomEvent(this, event); };
	void deleteLater() { callbackQGraphicsObject_DeleteLater(this); };
	void Signal_Destroyed(QObject * obj) { callbackQGraphicsObject_Destroyed(this, obj); };
	void disconnectNotify(const QMetaMethod & sign) { callbackQGraphicsObject_DisconnectNotify(this, const_cast<QMetaMethod*>(&sign)); };
	void Signal_ObjectNameChanged(const QString & objectName) { QByteArray taa2c4f = objectName.toUtf8(); QtWidgets_PackedString objectNamePacked = { const_cast<char*>(taa2c4f.prepend("WHITESPACE").constData()+10), taa2c4f.size()-10 };callbackQGraphicsObject_ObjectNameChanged(this, objectNamePacked); };
	void timerEvent(QTimerEvent * event) { callbackQGraphicsObject_TimerEvent(this, event); };
	QVariant itemChange(QGraphicsItem::GraphicsItemChange change, const QVariant & value) { return *static_cast<QVariant*>(callbackQGraphicsItem_ItemChange(this, change, const_cast<QVariant*>(&value))); };
	bool sceneEventFilter(QGraphicsItem * watched, QEvent * event) { return callbackQGraphicsItem_SceneEventFilter(this, watched, event) != 0; };
	void advance(int phase) { callbackQGraphicsItem_Advance(this, phase); };
	void wheelEvent(QGraphicsSceneWheelEvent * event) { callbackQGraphicsItem_WheelEvent(this, event); };
	bool collidesWithItem(const QGraphicsItem * other, Qt::ItemSelectionMode mode) const { return callbackQGraphicsItem_CollidesWithItem(const_cast<void*>(static_cast<const void*>(this)), const_cast<QGraphicsItem*>(other), mode) != 0; };
	bool collidesWithPath(const QPainterPath & path, Qt::ItemSelectionMode mode) const { return callbackQGraphicsItem_CollidesWithPath(const_cast<void*>(static_cast<const void*>(this)), const_cast<QPainterPath*>(&path), mode) != 0; };
};

Q_DECLARE_METATYPE(QGraphicsTextItem*)
Q_DECLARE_METATYPE(MyQGraphicsTextItem*)

int QGraphicsTextItem_QGraphicsTextItem_QRegisterMetaType(){qRegisterMetaType<QGraphicsTextItem*>(); return qRegisterMetaType<MyQGraphicsTextItem*>();}

void* QGraphicsTextItem_NewQGraphicsTextItem(void* parent)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsTextItem(static_cast<QGraphicsObject*>(parent));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsTextItem(static_cast<QGraphicsWidget*>(parent));
	} else {
		return new MyQGraphicsTextItem(static_cast<QGraphicsItem*>(parent));
	}
}

void* QGraphicsTextItem_NewQGraphicsTextItem2(struct QtWidgets_PackedString text, void* parent)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsTextItem(QString::fromUtf8(text.data, text.len), static_cast<QGraphicsObject*>(parent));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsTextItem(QString::fromUtf8(text.data, text.len), static_cast<QGraphicsWidget*>(parent));
	} else {
		return new MyQGraphicsTextItem(QString::fromUtf8(text.data, text.len), static_cast<QGraphicsItem*>(parent));
	}
}

void QGraphicsTextItem_AdjustSize(void* ptr)
{
	static_cast<QGraphicsTextItem*>(ptr)->adjustSize();
}

void QGraphicsTextItem_ConnectLinkActivated(void* ptr, long long t)
{
	QObject::connect(static_cast<QGraphicsTextItem*>(ptr), static_cast<void (QGraphicsTextItem::*)(const QString &)>(&QGraphicsTextItem::linkActivated), static_cast<MyQGraphicsTextItem*>(ptr), static_cast<void (MyQGraphicsTextItem::*)(const QString &)>(&MyQGraphicsTextItem::Signal_LinkActivated), static_cast<Qt::ConnectionType>(t));
}

void QGraphicsTextItem_DisconnectLinkActivated(void* ptr)
{
	QObject::disconnect(static_cast<QGraphicsTextItem*>(ptr), static_cast<void (QGraphicsTextItem::*)(const QString &)>(&QGraphicsTextItem::linkActivated), static_cast<MyQGraphicsTextItem*>(ptr), static_cast<void (MyQGraphicsTextItem::*)(const QString &)>(&MyQGraphicsTextItem::Signal_LinkActivated));
}

void QGraphicsTextItem_LinkActivated(void* ptr, struct QtWidgets_PackedString link)
{
	static_cast<QGraphicsTextItem*>(ptr)->linkActivated(QString::fromUtf8(link.data, link.len));
}

void QGraphicsTextItem_ConnectLinkHovered(void* ptr, long long t)
{
	QObject::connect(static_cast<QGraphicsTextItem*>(ptr), static_cast<void (QGraphicsTextItem::*)(const QString &)>(&QGraphicsTextItem::linkHovered), static_cast<MyQGraphicsTextItem*>(ptr), static_cast<void (MyQGraphicsTextItem::*)(const QString &)>(&MyQGraphicsTextItem::Signal_LinkHovered), static_cast<Qt::ConnectionType>(t));
}

void QGraphicsTextItem_DisconnectLinkHovered(void* ptr)
{
	QObject::disconnect(static_cast<QGraphicsTextItem*>(ptr), static_cast<void (QGraphicsTextItem::*)(const QString &)>(&QGraphicsTextItem::linkHovered), static_cast<MyQGraphicsTextItem*>(ptr), static_cast<void (MyQGraphicsTextItem::*)(const QString &)>(&MyQGraphicsTextItem::Signal_LinkHovered));
}

void QGraphicsTextItem_LinkHovered(void* ptr, struct QtWidgets_PackedString link)
{
	static_cast<QGraphicsTextItem*>(ptr)->linkHovered(QString::fromUtf8(link.data, link.len));
}

void QGraphicsTextItem_Paint(void* ptr, void* painter, void* option, void* widget)
{
		static_cast<QGraphicsTextItem*>(ptr)->paint(static_cast<QPainter*>(painter), static_cast<QStyleOptionGraphicsItem*>(option), static_cast<QWidget*>(widget));
}

void QGraphicsTextItem_PaintDefault(void* ptr, void* painter, void* option, void* widget)
{
		static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::paint(static_cast<QPainter*>(painter), static_cast<QStyleOptionGraphicsItem*>(option), static_cast<QWidget*>(widget));
}

void QGraphicsTextItem_SetDefaultTextColor(void* ptr, void* col)
{
	static_cast<QGraphicsTextItem*>(ptr)->setDefaultTextColor(*static_cast<QColor*>(col));
}

void QGraphicsTextItem_SetDocument(void* ptr, void* document)
{
	static_cast<QGraphicsTextItem*>(ptr)->setDocument(static_cast<QTextDocument*>(document));
}

void QGraphicsTextItem_SetFont(void* ptr, void* font)
{
	static_cast<QGraphicsTextItem*>(ptr)->setFont(*static_cast<QFont*>(font));
}

void QGraphicsTextItem_SetHtml(void* ptr, struct QtWidgets_PackedString text)
{
	static_cast<QGraphicsTextItem*>(ptr)->setHtml(QString::fromUtf8(text.data, text.len));
}

void QGraphicsTextItem_SetOpenExternalLinks(void* ptr, char open)
{
	static_cast<QGraphicsTextItem*>(ptr)->setOpenExternalLinks(open != 0);
}

void QGraphicsTextItem_SetPlainText(void* ptr, struct QtWidgets_PackedString text)
{
	static_cast<QGraphicsTextItem*>(ptr)->setPlainText(QString::fromUtf8(text.data, text.len));
}

void QGraphicsTextItem_SetTabChangesFocus(void* ptr, char b)
{
	static_cast<QGraphicsTextItem*>(ptr)->setTabChangesFocus(b != 0);
}

void QGraphicsTextItem_SetTextCursor(void* ptr, void* cursor)
{
	static_cast<QGraphicsTextItem*>(ptr)->setTextCursor(*static_cast<QTextCursor*>(cursor));
}

void QGraphicsTextItem_SetTextInteractionFlags(void* ptr, long long flags)
{
	static_cast<QGraphicsTextItem*>(ptr)->setTextInteractionFlags(static_cast<Qt::TextInteractionFlag>(flags));
}

void QGraphicsTextItem_SetTextWidth(void* ptr, double width)
{
	static_cast<QGraphicsTextItem*>(ptr)->setTextWidth(width);
}

void QGraphicsTextItem_DestroyQGraphicsTextItem(void* ptr)
{
	static_cast<QGraphicsTextItem*>(ptr)->~QGraphicsTextItem();
}

void QGraphicsTextItem_DestroyQGraphicsTextItemDefault(void* ptr)
{
	Q_UNUSED(ptr);

}

void* QGraphicsTextItem_DefaultTextColor(void* ptr)
{
	return new QColor(static_cast<QGraphicsTextItem*>(ptr)->defaultTextColor());
}

void* QGraphicsTextItem_Font(void* ptr)
{
	return new QFont(static_cast<QGraphicsTextItem*>(ptr)->font());
}

void* QGraphicsTextItem_BoundingRect(void* ptr)
{
	return ({ QRectF tmpValue = static_cast<QGraphicsTextItem*>(ptr)->boundingRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QGraphicsTextItem_BoundingRectDefault(void* ptr)
{
		return ({ QRectF tmpValue = static_cast<QGraphicsTextItem*>(ptr)->QGraphicsTextItem::boundingRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

struct QtWidgets_PackedString QGraphicsTextItem_ToHtml(void* ptr)
{
	return ({ QByteArray t880d4e = static_cast<QGraphicsTextItem*>(ptr)->toHtml().toUtf8(); QtWidgets_PackedString { const_cast<char*>(t880d4e.prepend("WHITESPACE").constData()+10), t880d4e.size()-10 }; });
}

struct QtWidgets_PackedString QGraphicsTextItem_ToPlainText(void* ptr)
{
	return ({ QByteArray t3e9441 = static_cast<QGraphicsTextItem*>(ptr)->toPlainText().toUtf8(); QtWidgets_PackedString { const_cast<char*>(t3e9441.prepend("WHITESPACE").constData()+10), t3e9441.size()-10 }; });
}

void* QGraphicsTextItem_TextCursor(void* ptr)
{
	return new QTextCursor(static_cast<QGraphicsTextItem*>(ptr)->textCursor());
}

void* QGraphicsTextItem_Document(void* ptr)
{
	return static_cast<QGraphicsTextItem*>(ptr)->document();
}

long long QGraphicsTextItem_TextInteractionFlags(void* ptr)
{
	return static_cast<QGraphicsTextItem*>(ptr)->textInteractionFlags();
}

char QGraphicsTextItem_OpenExternalLinks(void* ptr)
{
	return static_cast<QGraphicsTextItem*>(ptr)->openExternalLinks();
}

char QGraphicsTextItem_TabChangesFocus(void* ptr)
{
	return static_cast<QGraphicsTextItem*>(ptr)->tabChangesFocus();
}

double QGraphicsTextItem_TextWidth(void* ptr)
{
	return static_cast<QGraphicsTextItem*>(ptr)->textWidth();
}

class MyQGraphicsTransform: public QGraphicsTransform
{
public:
	MyQGraphicsTransform(QObject *parent = Q_NULLPTR) : QGraphicsTransform(parent) {QGraphicsTransform_QGraphicsTransform_QRegisterMetaType();};
	void update() { callbackQGraphicsTransform_Update(this); };
	 ~MyQGraphicsTransform() { callbackQGraphicsTransform_DestroyQGraphicsTransform(this); };
	const QMetaObject * metaObject() const { return static_cast<QMetaObject*>(callbackQGraphicsTransform_MetaObject(const_cast<void*>(static_cast<const void*>(this)))); };
	void applyTo(QMatrix4x4 * matrix) const { callbackQGraphicsTransform_ApplyTo(const_cast<void*>(static_cast<const void*>(this)), matrix); };
	bool event(QEvent * e) { return callbackQGraphicsTransform_Event(this, e) != 0; };
	bool eventFilter(QObject * watched, QEvent * event) { return callbackQGraphicsTransform_EventFilter(this, watched, event) != 0; };
	void childEvent(QChildEvent * event) { callbackQGraphicsTransform_ChildEvent(this, event); };
	void connectNotify(const QMetaMethod & sign) { callbackQGraphicsTransform_ConnectNotify(this, const_cast<QMetaMethod*>(&sign)); };
	void customEvent(QEvent * event) { callbackQGraphicsTransform_CustomEvent(this, event); };
	void deleteLater() { callbackQGraphicsTransform_DeleteLater(this); };
	void Signal_Destroyed(QObject * obj) { callbackQGraphicsTransform_Destroyed(this, obj); };
	void disconnectNotify(const QMetaMethod & sign) { callbackQGraphicsTransform_DisconnectNotify(this, const_cast<QMetaMethod*>(&sign)); };
	void Signal_ObjectNameChanged(const QString & objectName) { QByteArray taa2c4f = objectName.toUtf8(); QtWidgets_PackedString objectNamePacked = { const_cast<char*>(taa2c4f.prepend("WHITESPACE").constData()+10), taa2c4f.size()-10 };callbackQGraphicsTransform_ObjectNameChanged(this, objectNamePacked); };
	void timerEvent(QTimerEvent * event) { callbackQGraphicsTransform_TimerEvent(this, event); };
};

Q_DECLARE_METATYPE(QGraphicsTransform*)
Q_DECLARE_METATYPE(MyQGraphicsTransform*)

int QGraphicsTransform_QGraphicsTransform_QRegisterMetaType(){qRegisterMetaType<QGraphicsTransform*>(); return qRegisterMetaType<MyQGraphicsTransform*>();}

void* QGraphicsTransform_NewQGraphicsTransform(void* parent)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsTransform(static_cast<QGraphicsObject*>(parent));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsTransform(static_cast<QGraphicsWidget*>(parent));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsTransform(static_cast<QLayout*>(parent));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsTransform(static_cast<QWidget*>(parent));
	} else if (dynamic_cast<QWindow*>(static_cast<QObject*>(parent))) {
		return new MyQGraphicsTransform(static_cast<QWindow*>(parent));
	} else {
		return new MyQGraphicsTransform(static_cast<QObject*>(parent));
	}
}

struct QtWidgets_PackedString QGraphicsTransform_QGraphicsTransform_Tr(char* s, char* c, int n)
{
	return ({ QByteArray t9ac480 = QGraphicsTransform::tr(const_cast<const char*>(s), const_cast<const char*>(c), n).toUtf8(); QtWidgets_PackedString { const_cast<char*>(t9ac480.prepend("WHITESPACE").constData()+10), t9ac480.size()-10 }; });
}

void QGraphicsTransform_Update(void* ptr)
{
	QMetaObject::invokeMethod(static_cast<QGraphicsTransform*>(ptr), "update");
}

void QGraphicsTransform_UpdateDefault(void* ptr)
{
		static_cast<QGraphicsTransform*>(ptr)->QGraphicsTransform::update();
}

void QGraphicsTransform_DestroyQGraphicsTransform(void* ptr)
{
	static_cast<QGraphicsTransform*>(ptr)->~QGraphicsTransform();
}

void QGraphicsTransform_DestroyQGraphicsTransformDefault(void* ptr)
{
	Q_UNUSED(ptr);

}

void* QGraphicsTransform_MetaObjectDefault(void* ptr)
{
		return const_cast<QMetaObject*>(static_cast<QGraphicsTransform*>(ptr)->QGraphicsTransform::metaObject());
}

void QGraphicsTransform_ApplyTo(void* ptr, void* matrix)
{
	static_cast<QGraphicsTransform*>(ptr)->applyTo(static_cast<QMatrix4x4*>(matrix));
}

void* QGraphicsTransform___dynamicPropertyNames_atList(void* ptr, int i)
{
	return new QByteArray(({QByteArray tmp = static_cast<QList<QByteArray>*>(ptr)->at(i); if (i == static_cast<QList<QByteArray>*>(ptr)->size()-1) { static_cast<QList<QByteArray>*>(ptr)->~QList(); free(ptr); }; tmp; }));
}

void QGraphicsTransform___dynamicPropertyNames_setList(void* ptr, void* i)
{
	static_cast<QList<QByteArray>*>(ptr)->append(*static_cast<QByteArray*>(i));
}

void* QGraphicsTransform___dynamicPropertyNames_newList(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QByteArray>();
}

void* QGraphicsTransform___findChildren_atList2(void* ptr, int i)
{
	return ({QObject* tmp = static_cast<QList<QObject*>*>(ptr)->at(i); if (i == static_cast<QList<QObject*>*>(ptr)->size()-1) { static_cast<QList<QObject*>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QGraphicsTransform___findChildren_setList2(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QLayout*>(i));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QWidget*>(i));
	} else {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QObject*>(i));
	}
}

void* QGraphicsTransform___findChildren_newList2(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QObject*>();
}

void* QGraphicsTransform___findChildren_atList3(void* ptr, int i)
{
	return ({QObject* tmp = static_cast<QList<QObject*>*>(ptr)->at(i); if (i == static_cast<QList<QObject*>*>(ptr)->size()-1) { static_cast<QList<QObject*>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QGraphicsTransform___findChildren_setList3(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QLayout*>(i));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QWidget*>(i));
	} else {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QObject*>(i));
	}
}

void* QGraphicsTransform___findChildren_newList3(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QObject*>();
}

void* QGraphicsTransform___findChildren_atList(void* ptr, int i)
{
	return ({QObject* tmp = static_cast<QList<QObject*>*>(ptr)->at(i); if (i == static_cast<QList<QObject*>*>(ptr)->size()-1) { static_cast<QList<QObject*>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QGraphicsTransform___findChildren_setList(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QLayout*>(i));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QWidget*>(i));
	} else {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QObject*>(i));
	}
}

void* QGraphicsTransform___findChildren_newList(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QObject*>();
}

void* QGraphicsTransform___children_atList(void* ptr, int i)
{
	return ({QObject * tmp = static_cast<QList<QObject *>*>(ptr)->at(i); if (i == static_cast<QList<QObject *>*>(ptr)->size()-1) { static_cast<QList<QObject *>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QGraphicsTransform___children_setList(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject *>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject *>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject *>*>(ptr)->append(static_cast<QLayout*>(i));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject *>*>(ptr)->append(static_cast<QWidget*>(i));
	} else {
		static_cast<QList<QObject *>*>(ptr)->append(static_cast<QObject*>(i));
	}
}

void* QGraphicsTransform___children_newList(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QObject *>();
}

char QGraphicsTransform_EventDefault(void* ptr, void* e)
{
		return static_cast<QGraphicsTransform*>(ptr)->QGraphicsTransform::event(static_cast<QEvent*>(e));
}

char QGraphicsTransform_EventFilterDefault(void* ptr, void* watched, void* event)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(watched))) {
		return static_cast<QGraphicsTransform*>(ptr)->QGraphicsTransform::eventFilter(static_cast<QGraphicsObject*>(watched), static_cast<QEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(watched))) {
		return static_cast<QGraphicsTransform*>(ptr)->QGraphicsTransform::eventFilter(static_cast<QGraphicsWidget*>(watched), static_cast<QEvent*>(event));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(watched))) {
		return static_cast<QGraphicsTransform*>(ptr)->QGraphicsTransform::eventFilter(static_cast<QLayout*>(watched), static_cast<QEvent*>(event));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(watched))) {
		return static_cast<QGraphicsTransform*>(ptr)->QGraphicsTransform::eventFilter(static_cast<QWidget*>(watched), static_cast<QEvent*>(event));
	} else {
		return static_cast<QGraphicsTransform*>(ptr)->QGraphicsTransform::eventFilter(static_cast<QObject*>(watched), static_cast<QEvent*>(event));
	}
}

void QGraphicsTransform_ChildEventDefault(void* ptr, void* event)
{
		static_cast<QGraphicsTransform*>(ptr)->QGraphicsTransform::childEvent(static_cast<QChildEvent*>(event));
}

void QGraphicsTransform_ConnectNotifyDefault(void* ptr, void* sign)
{
		static_cast<QGraphicsTransform*>(ptr)->QGraphicsTransform::connectNotify(*static_cast<QMetaMethod*>(sign));
}

void QGraphicsTransform_CustomEventDefault(void* ptr, void* event)
{
		static_cast<QGraphicsTransform*>(ptr)->QGraphicsTransform::customEvent(static_cast<QEvent*>(event));
}

void QGraphicsTransform_DeleteLaterDefault(void* ptr)
{
		static_cast<QGraphicsTransform*>(ptr)->QGraphicsTransform::deleteLater();
}

void QGraphicsTransform_DisconnectNotifyDefault(void* ptr, void* sign)
{
		static_cast<QGraphicsTransform*>(ptr)->QGraphicsTransform::disconnectNotify(*static_cast<QMetaMethod*>(sign));
}

void QGraphicsTransform_TimerEventDefault(void* ptr, void* event)
{
		static_cast<QGraphicsTransform*>(ptr)->QGraphicsTransform::timerEvent(static_cast<QTimerEvent*>(event));
}

class MyQGraphicsView: public QGraphicsView
{
public:
	MyQGraphicsView(QGraphicsScene *scene, QWidget *parent = Q_NULLPTR) : QGraphicsView(scene, parent) {QGraphicsView_QGraphicsView_QRegisterMetaType();};
	MyQGraphicsView(QWidget *parent = Q_NULLPTR) : QGraphicsView(parent) {QGraphicsView_QGraphicsView_QRegisterMetaType();};
	bool event(QEvent * event) { return callbackQWidget_Event(this, event) != 0; };
	bool focusNextPrevChild(bool next) { return callbackQWidget_FocusNextPrevChild(this, next) != 0; };
	bool viewportEvent(QEvent * event) { return callbackQAbstractScrollArea_ViewportEvent(this, event) != 0; };
	void contextMenuEvent(QContextMenuEvent * event) { callbackQWidget_ContextMenuEvent(this, event); };
	void dragEnterEvent(QDragEnterEvent * event) { callbackQWidget_DragEnterEvent(this, event); };
	void dragLeaveEvent(QDragLeaveEvent * event) { callbackQWidget_DragLeaveEvent(this, event); };
	void dragMoveEvent(QDragMoveEvent * event) { callbackQWidget_DragMoveEvent(this, event); };
	void drawBackground(QPainter * painter, const QRectF & rect) { callbackQGraphicsView_DrawBackground(this, painter, const_cast<QRectF*>(&rect)); };
	void drawForeground(QPainter * painter, const QRectF & rect) { callbackQGraphicsView_DrawForeground(this, painter, const_cast<QRectF*>(&rect)); };
	void dropEvent(QDropEvent * event) { callbackQWidget_DropEvent(this, event); };
	void focusInEvent(QFocusEvent * event) { callbackQWidget_FocusInEvent(this, event); };
	void focusOutEvent(QFocusEvent * event) { callbackQWidget_FocusOutEvent(this, event); };
	void inputMethodEvent(QInputMethodEvent * event) { callbackQWidget_InputMethodEvent(this, event); };
	void invalidateScene(const QRectF & rect, QGraphicsScene::SceneLayers layers) { callbackQGraphicsView_InvalidateScene(this, const_cast<QRectF*>(&rect), layers); };
	void keyPressEvent(QKeyEvent * event) { callbackQWidget_KeyPressEvent(this, event); };
	void keyReleaseEvent(QKeyEvent * event) { callbackQWidget_KeyReleaseEvent(this, event); };
	void mouseDoubleClickEvent(QMouseEvent * event) { callbackQWidget_MouseDoubleClickEvent(this, event); };
	void mouseMoveEvent(QMouseEvent * event) { callbackQWidget_MouseMoveEvent(this, event); };
	void mousePressEvent(QMouseEvent * event) { callbackQWidget_MousePressEvent(this, event); };
	void mouseReleaseEvent(QMouseEvent * event) { callbackQWidget_MouseReleaseEvent(this, event); };
	void paintEvent(QPaintEvent * event) { callbackQWidget_PaintEvent(this, event); };
	void resizeEvent(QResizeEvent * event) { callbackQWidget_ResizeEvent(this, event); };
	void Signal_RubberBandChanged(QRect rubberBandRect, QPointF fromScenePoint, QPointF toScenePoint) { callbackQGraphicsView_RubberBandChanged(this, ({ QRect tmpValue = rubberBandRect; new QRect(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); }), ({ QPointF tmpValue = fromScenePoint; new QPointF(tmpValue.x(), tmpValue.y()); }), ({ QPointF tmpValue = toScenePoint; new QPointF(tmpValue.x(), tmpValue.y()); })); };
	void scrollContentsBy(int dx, int dy) { callbackQAbstractScrollArea_ScrollContentsBy(this, dx, dy); };
	void setupViewport(QWidget * widget) { callbackQGraphicsView_SetupViewport(this, widget); };
	void showEvent(QShowEvent * event) { callbackQWidget_ShowEvent(this, event); };
	void updateScene(const QList<QRectF> & rects) { callbackQGraphicsView_UpdateScene(this, ({ QList<QRectF>* tmpValueb7a09e = new QList<QRectF>(rects); QtWidgets_PackedList { tmpValueb7a09e, tmpValueb7a09e->size() }; })); };
	void updateSceneRect(const QRectF & rect) { callbackQGraphicsView_UpdateSceneRect(this, const_cast<QRectF*>(&rect)); };
	void wheelEvent(QWheelEvent * event) { callbackQWidget_WheelEvent(this, event); };
	 ~MyQGraphicsView() { callbackQGraphicsView_DestroyQGraphicsView(this); };
	QSize sizeHint() const { return *static_cast<QSize*>(callbackQWidget_SizeHint(const_cast<void*>(static_cast<const void*>(this)))); };
	QVariant inputMethodQuery(Qt::InputMethodQuery query) const { return *static_cast<QVariant*>(callbackQWidget_InputMethodQuery(const_cast<void*>(static_cast<const void*>(this)), query)); };
	const QMetaObject * metaObject() const { return static_cast<QMetaObject*>(callbackQWidget_MetaObject(const_cast<void*>(static_cast<const void*>(this)))); };
	QSize minimumSizeHint() const { return *static_cast<QSize*>(callbackQWidget_MinimumSizeHint(const_cast<void*>(static_cast<const void*>(this)))); };
	QSize viewportSizeHint() const { return *static_cast<QSize*>(callbackQAbstractScrollArea_ViewportSizeHint(const_cast<void*>(static_cast<const void*>(this)))); };
	void changeEvent(QEvent * ev) { callbackQWidget_ChangeEvent(this, ev); };
	bool close() { return callbackQWidget_Close(this) != 0; };
	bool nativeEvent(const QByteArray & eventType, void * message, long * result) { return callbackQWidget_NativeEvent(this, const_cast<QByteArray*>(&eventType), message, result) != 0; };
	void actionEvent(QActionEvent * event) { callbackQWidget_ActionEvent(this, event); };
	void closeEvent(QCloseEvent * event) { callbackQWidget_CloseEvent(this, event); };
	void Signal_CustomContextMenuRequested(const QPoint & pos) { callbackQWidget_CustomContextMenuRequested(this, const_cast<QPoint*>(&pos)); };
	void enterEvent(QEvent * event) { callbackQWidget_EnterEvent(this, event); };
	void hide() { callbackQWidget_Hide(this); };
	void hideEvent(QHideEvent * event) { callbackQWidget_HideEvent(this, event); };
	void leaveEvent(QEvent * event) { callbackQWidget_LeaveEvent(this, event); };
	void lower() { callbackQWidget_Lower(this); };
	void moveEvent(QMoveEvent * event) { callbackQWidget_MoveEvent(this, event); };
	void raise() { callbackQWidget_Raise(this); };
	void repaint() { callbackQWidget_Repaint(this); };
	void setDisabled(bool disable) { callbackQWidget_SetDisabled(this, disable); };
	void setEnabled(bool vbo) { callbackQWidget_SetEnabled(this, vbo); };
	void setFocus() { callbackQWidget_SetFocus2(this); };
	void setHidden(bool hidden) { callbackQWidget_SetHidden(this, hidden); };
	void setStyleSheet(const QString & styleSheet) { QByteArray t728ae7 = styleSheet.toUtf8(); QtWidgets_PackedString styleSheetPacked = { const_cast<char*>(t728ae7.prepend("WHITESPACE").constData()+10), t728ae7.size()-10 };callbackQWidget_SetStyleSheet(this, styleSheetPacked); };
	void setVisible(bool visible) { callbackQWidget_SetVisible(this, visible); };
	void setWindowModified(bool vbo) { callbackQWidget_SetWindowModified(this, vbo); };
	void setWindowTitle(const QString & vqs) { QByteArray tda39a3 = vqs.toUtf8(); QtWidgets_PackedString vqsPacked = { const_cast<char*>(tda39a3.prepend("WHITESPACE").constData()+10), tda39a3.size()-10 };callbackQWidget_SetWindowTitle(this, vqsPacked); };
	void show() { callbackQWidget_Show(this); };
	void showFullScreen() { callbackQWidget_ShowFullScreen(this); };
	void showMaximized() { callbackQWidget_ShowMaximized(this); };
	void showMinimized() { callbackQWidget_ShowMinimized(this); };
	void showNormal() { callbackQWidget_ShowNormal(this); };
	void tabletEvent(QTabletEvent * event) { callbackQWidget_TabletEvent(this, event); };
	void update() { callbackQWidget_Update(this); };
	void updateMicroFocus() { callbackQWidget_UpdateMicroFocus(this); };
	void Signal_WindowIconChanged(const QIcon & icon) { callbackQWidget_WindowIconChanged(this, const_cast<QIcon*>(&icon)); };
	void Signal_WindowTitleChanged(const QString & title) { QByteArray t3c6de1 = title.toUtf8(); QtWidgets_PackedString titlePacked = { const_cast<char*>(t3c6de1.prepend("WHITESPACE").constData()+10), t3c6de1.size()-10 };callbackQWidget_WindowTitleChanged(this, titlePacked); };
	QPaintEngine * paintEngine() const { return static_cast<QPaintEngine*>(callbackQWidget_PaintEngine(const_cast<void*>(static_cast<const void*>(this)))); };
	bool hasHeightForWidth() const { return callbackQWidget_HasHeightForWidth(const_cast<void*>(static_cast<const void*>(this))) != 0; };
	int heightForWidth(int w) const { return callbackQWidget_HeightForWidth(const_cast<void*>(static_cast<const void*>(this)), w); };
	int metric(QPaintDevice::PaintDeviceMetric m) const { return callbackQWidget_Metric(const_cast<void*>(static_cast<const void*>(this)), m); };
	void initPainter(QPainter * painter) const { callbackQWidget_InitPainter(const_cast<void*>(static_cast<const void*>(this)), painter); };
	bool eventFilter(QObject * watched, QEvent * event) { return callbackQWidget_EventFilter(this, watched, event) != 0; };
	void childEvent(QChildEvent * event) { callbackQWidget_ChildEvent(this, event); };
	void connectNotify(const QMetaMethod & sign) { callbackQWidget_ConnectNotify(this, const_cast<QMetaMethod*>(&sign)); };
	void customEvent(QEvent * event) { callbackQWidget_CustomEvent(this, event); };
	void deleteLater() { callbackQWidget_DeleteLater(this); };
	void Signal_Destroyed(QObject * obj) { callbackQWidget_Destroyed(this, obj); };
	void disconnectNotify(const QMetaMethod & sign) { callbackQWidget_DisconnectNotify(this, const_cast<QMetaMethod*>(&sign)); };
	void Signal_ObjectNameChanged(const QString & objectName) { QByteArray taa2c4f = objectName.toUtf8(); QtWidgets_PackedString objectNamePacked = { const_cast<char*>(taa2c4f.prepend("WHITESPACE").constData()+10), taa2c4f.size()-10 };callbackQWidget_ObjectNameChanged(this, objectNamePacked); };
	void timerEvent(QTimerEvent * event) { callbackQWidget_TimerEvent(this, event); };
};

Q_DECLARE_METATYPE(QGraphicsView*)
Q_DECLARE_METATYPE(MyQGraphicsView*)

int QGraphicsView_QGraphicsView_QRegisterMetaType(){qRegisterMetaType<QGraphicsView*>(); return qRegisterMetaType<MyQGraphicsView*>();}

void* QGraphicsView_NewQGraphicsView2(void* scene, void* parent)
{
		return new MyQGraphicsView(static_cast<QGraphicsScene*>(scene), static_cast<QWidget*>(parent));
}

void* QGraphicsView_NewQGraphicsView(void* parent)
{
		return new MyQGraphicsView(static_cast<QWidget*>(parent));
}

void QGraphicsView_CenterOn3(void* ptr, void* item)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
		static_cast<QGraphicsView*>(ptr)->centerOn(static_cast<QGraphicsObject*>(item));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
		static_cast<QGraphicsView*>(ptr)->centerOn(static_cast<QGraphicsWidget*>(item));
	} else {
		static_cast<QGraphicsView*>(ptr)->centerOn(static_cast<QGraphicsItem*>(item));
	}
}

void QGraphicsView_CenterOn(void* ptr, void* pos)
{
	static_cast<QGraphicsView*>(ptr)->centerOn(*static_cast<QPointF*>(pos));
}

void QGraphicsView_CenterOn2(void* ptr, double x, double y)
{
	static_cast<QGraphicsView*>(ptr)->centerOn(x, y);
}

void QGraphicsView_DrawBackground(void* ptr, void* painter, void* rect)
{
	static_cast<QGraphicsView*>(ptr)->drawBackground(static_cast<QPainter*>(painter), *static_cast<QRectF*>(rect));
}

void QGraphicsView_DrawBackgroundDefault(void* ptr, void* painter, void* rect)
{
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::drawBackground(static_cast<QPainter*>(painter), *static_cast<QRectF*>(rect));
}

void QGraphicsView_DrawForeground(void* ptr, void* painter, void* rect)
{
	static_cast<QGraphicsView*>(ptr)->drawForeground(static_cast<QPainter*>(painter), *static_cast<QRectF*>(rect));
}

void QGraphicsView_DrawForegroundDefault(void* ptr, void* painter, void* rect)
{
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::drawForeground(static_cast<QPainter*>(painter), *static_cast<QRectF*>(rect));
}

void QGraphicsView_EnsureVisible3(void* ptr, void* item, int xmargin, int ymargin)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
		static_cast<QGraphicsView*>(ptr)->ensureVisible(static_cast<QGraphicsObject*>(item), xmargin, ymargin);
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
		static_cast<QGraphicsView*>(ptr)->ensureVisible(static_cast<QGraphicsWidget*>(item), xmargin, ymargin);
	} else {
		static_cast<QGraphicsView*>(ptr)->ensureVisible(static_cast<QGraphicsItem*>(item), xmargin, ymargin);
	}
}

void QGraphicsView_EnsureVisible(void* ptr, void* rect, int xmargin, int ymargin)
{
	static_cast<QGraphicsView*>(ptr)->ensureVisible(*static_cast<QRectF*>(rect), xmargin, ymargin);
}

void QGraphicsView_EnsureVisible2(void* ptr, double x, double y, double w, double h, int xmargin, int ymargin)
{
	static_cast<QGraphicsView*>(ptr)->ensureVisible(x, y, w, h, xmargin, ymargin);
}

void QGraphicsView_FitInView3(void* ptr, void* item, long long aspectRatioMode)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(item))) {
		static_cast<QGraphicsView*>(ptr)->fitInView(static_cast<QGraphicsObject*>(item), static_cast<Qt::AspectRatioMode>(aspectRatioMode));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(item))) {
		static_cast<QGraphicsView*>(ptr)->fitInView(static_cast<QGraphicsWidget*>(item), static_cast<Qt::AspectRatioMode>(aspectRatioMode));
	} else {
		static_cast<QGraphicsView*>(ptr)->fitInView(static_cast<QGraphicsItem*>(item), static_cast<Qt::AspectRatioMode>(aspectRatioMode));
	}
}

void QGraphicsView_FitInView(void* ptr, void* rect, long long aspectRatioMode)
{
	static_cast<QGraphicsView*>(ptr)->fitInView(*static_cast<QRectF*>(rect), static_cast<Qt::AspectRatioMode>(aspectRatioMode));
}

void QGraphicsView_FitInView2(void* ptr, double x, double y, double w, double h, long long aspectRatioMode)
{
	static_cast<QGraphicsView*>(ptr)->fitInView(x, y, w, h, static_cast<Qt::AspectRatioMode>(aspectRatioMode));
}

void QGraphicsView_InvalidateScene(void* ptr, void* rect, long long layers)
{
	QMetaObject::invokeMethod(static_cast<QGraphicsView*>(ptr), "invalidateScene", Q_ARG(const QRectF, *static_cast<QRectF*>(rect)), Q_ARG(QGraphicsScene::SceneLayers, static_cast<QGraphicsScene::SceneLayer>(layers)));
}

void QGraphicsView_InvalidateSceneDefault(void* ptr, void* rect, long long layers)
{
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::invalidateScene(*static_cast<QRectF*>(rect), static_cast<QGraphicsScene::SceneLayer>(layers));
}

void QGraphicsView_Render(void* ptr, void* painter, void* target, void* source, long long aspectRatioMode)
{
	static_cast<QGraphicsView*>(ptr)->render(static_cast<QPainter*>(painter), *static_cast<QRectF*>(target), *static_cast<QRect*>(source), static_cast<Qt::AspectRatioMode>(aspectRatioMode));
}

void QGraphicsView_ResetCachedContent(void* ptr)
{
	static_cast<QGraphicsView*>(ptr)->resetCachedContent();
}

void QGraphicsView_ResetMatrix(void* ptr)
{
	static_cast<QGraphicsView*>(ptr)->resetMatrix();
}

void QGraphicsView_ResetTransform(void* ptr)
{
	static_cast<QGraphicsView*>(ptr)->resetTransform();
}

void QGraphicsView_Rotate(void* ptr, double angle)
{
	static_cast<QGraphicsView*>(ptr)->rotate(angle);
}

void QGraphicsView_ConnectRubberBandChanged(void* ptr, long long t)
{
	QObject::connect(static_cast<QGraphicsView*>(ptr), static_cast<void (QGraphicsView::*)(QRect, QPointF, QPointF)>(&QGraphicsView::rubberBandChanged), static_cast<MyQGraphicsView*>(ptr), static_cast<void (MyQGraphicsView::*)(QRect, QPointF, QPointF)>(&MyQGraphicsView::Signal_RubberBandChanged), static_cast<Qt::ConnectionType>(t));
}

void QGraphicsView_DisconnectRubberBandChanged(void* ptr)
{
	QObject::disconnect(static_cast<QGraphicsView*>(ptr), static_cast<void (QGraphicsView::*)(QRect, QPointF, QPointF)>(&QGraphicsView::rubberBandChanged), static_cast<MyQGraphicsView*>(ptr), static_cast<void (MyQGraphicsView::*)(QRect, QPointF, QPointF)>(&MyQGraphicsView::Signal_RubberBandChanged));
}

void QGraphicsView_RubberBandChanged(void* ptr, void* rubberBandRect, void* fromScenePoint, void* toScenePoint)
{
	static_cast<QGraphicsView*>(ptr)->rubberBandChanged(*static_cast<QRect*>(rubberBandRect), *static_cast<QPointF*>(fromScenePoint), *static_cast<QPointF*>(toScenePoint));
}

void QGraphicsView_Scale(void* ptr, double sx, double sy)
{
	static_cast<QGraphicsView*>(ptr)->scale(sx, sy);
}

void QGraphicsView_SetAlignment(void* ptr, long long alignment)
{
	static_cast<QGraphicsView*>(ptr)->setAlignment(static_cast<Qt::AlignmentFlag>(alignment));
}

void QGraphicsView_SetBackgroundBrush(void* ptr, void* brush)
{
	static_cast<QGraphicsView*>(ptr)->setBackgroundBrush(*static_cast<QBrush*>(brush));
}

void QGraphicsView_SetCacheMode(void* ptr, long long mode)
{
	static_cast<QGraphicsView*>(ptr)->setCacheMode(static_cast<QGraphicsView::CacheModeFlag>(mode));
}

void QGraphicsView_SetDragMode(void* ptr, long long mode)
{
	static_cast<QGraphicsView*>(ptr)->setDragMode(static_cast<QGraphicsView::DragMode>(mode));
}

void QGraphicsView_SetForegroundBrush(void* ptr, void* brush)
{
	static_cast<QGraphicsView*>(ptr)->setForegroundBrush(*static_cast<QBrush*>(brush));
}

void QGraphicsView_SetInteractive(void* ptr, char allowed)
{
	static_cast<QGraphicsView*>(ptr)->setInteractive(allowed != 0);
}

void QGraphicsView_SetMatrix(void* ptr, void* matrix, char combine)
{
	static_cast<QGraphicsView*>(ptr)->setMatrix(*static_cast<QMatrix*>(matrix), combine != 0);
}

void QGraphicsView_SetOptimizationFlag(void* ptr, long long flag, char enabled)
{
	static_cast<QGraphicsView*>(ptr)->setOptimizationFlag(static_cast<QGraphicsView::OptimizationFlag>(flag), enabled != 0);
}

void QGraphicsView_SetOptimizationFlags(void* ptr, long long flags)
{
	static_cast<QGraphicsView*>(ptr)->setOptimizationFlags(static_cast<QGraphicsView::OptimizationFlag>(flags));
}

void QGraphicsView_SetRenderHint(void* ptr, long long hint, char enabled)
{
	static_cast<QGraphicsView*>(ptr)->setRenderHint(static_cast<QPainter::RenderHint>(hint), enabled != 0);
}

void QGraphicsView_SetRenderHints(void* ptr, long long hints)
{
	static_cast<QGraphicsView*>(ptr)->setRenderHints(static_cast<QPainter::RenderHint>(hints));
}

void QGraphicsView_SetResizeAnchor(void* ptr, long long anchor)
{
	static_cast<QGraphicsView*>(ptr)->setResizeAnchor(static_cast<QGraphicsView::ViewportAnchor>(anchor));
}

void QGraphicsView_SetRubberBandSelectionMode(void* ptr, long long mode)
{
	static_cast<QGraphicsView*>(ptr)->setRubberBandSelectionMode(static_cast<Qt::ItemSelectionMode>(mode));
}

void QGraphicsView_SetScene(void* ptr, void* scene)
{
	static_cast<QGraphicsView*>(ptr)->setScene(static_cast<QGraphicsScene*>(scene));
}

void QGraphicsView_SetSceneRect(void* ptr, void* rect)
{
	static_cast<QGraphicsView*>(ptr)->setSceneRect(*static_cast<QRectF*>(rect));
}

void QGraphicsView_SetSceneRect2(void* ptr, double x, double y, double w, double h)
{
	static_cast<QGraphicsView*>(ptr)->setSceneRect(x, y, w, h);
}

void QGraphicsView_SetTransform(void* ptr, void* matrix, char combine)
{
	static_cast<QGraphicsView*>(ptr)->setTransform(*static_cast<QTransform*>(matrix), combine != 0);
}

void QGraphicsView_SetTransformationAnchor(void* ptr, long long anchor)
{
	static_cast<QGraphicsView*>(ptr)->setTransformationAnchor(static_cast<QGraphicsView::ViewportAnchor>(anchor));
}

void QGraphicsView_SetViewportUpdateMode(void* ptr, long long mode)
{
	static_cast<QGraphicsView*>(ptr)->setViewportUpdateMode(static_cast<QGraphicsView::ViewportUpdateMode>(mode));
}

void QGraphicsView_SetupViewport(void* ptr, void* widget)
{
		QMetaObject::invokeMethod(static_cast<QGraphicsView*>(ptr), "setupViewport", Q_ARG(QWidget*, static_cast<QWidget*>(widget)));
}

void QGraphicsView_SetupViewportDefault(void* ptr, void* widget)
{
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::setupViewport(static_cast<QWidget*>(widget));
}

void QGraphicsView_Shear(void* ptr, double sh, double sv)
{
	static_cast<QGraphicsView*>(ptr)->shear(sh, sv);
}

void QGraphicsView_Translate(void* ptr, double dx, double dy)
{
	static_cast<QGraphicsView*>(ptr)->translate(dx, dy);
}

void QGraphicsView_UpdateScene(void* ptr, void* rects)
{
	QMetaObject::invokeMethod(static_cast<QGraphicsView*>(ptr), "updateScene", Q_ARG(const QList<QRectF>, *static_cast<QList<QRectF>*>(rects)));
}

void QGraphicsView_UpdateSceneDefault(void* ptr, void* rects)
{
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::updateScene(*static_cast<QList<QRectF>*>(rects));
}

void QGraphicsView_UpdateSceneRect(void* ptr, void* rect)
{
	QMetaObject::invokeMethod(static_cast<QGraphicsView*>(ptr), "updateSceneRect", Q_ARG(const QRectF, *static_cast<QRectF*>(rect)));
}

void QGraphicsView_UpdateSceneRectDefault(void* ptr, void* rect)
{
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::updateSceneRect(*static_cast<QRectF*>(rect));
}

void QGraphicsView_DestroyQGraphicsView(void* ptr)
{
	static_cast<QGraphicsView*>(ptr)->~QGraphicsView();
}

void QGraphicsView_DestroyQGraphicsViewDefault(void* ptr)
{
	Q_UNUSED(ptr);

}

void* QGraphicsView_BackgroundBrush(void* ptr)
{
	return new QBrush(static_cast<QGraphicsView*>(ptr)->backgroundBrush());
}

void* QGraphicsView_ForegroundBrush(void* ptr)
{
	return new QBrush(static_cast<QGraphicsView*>(ptr)->foregroundBrush());
}

void* QGraphicsView_ItemAt(void* ptr, void* pos)
{
	return static_cast<QGraphicsView*>(ptr)->itemAt(*static_cast<QPoint*>(pos));
}

void* QGraphicsView_ItemAt2(void* ptr, int x, int y)
{
	return static_cast<QGraphicsView*>(ptr)->itemAt(x, y);
}

void* QGraphicsView_Scene(void* ptr)
{
	return static_cast<QGraphicsView*>(ptr)->scene();
}

long long QGraphicsView_CacheMode(void* ptr)
{
	return static_cast<QGraphicsView*>(ptr)->cacheMode();
}

long long QGraphicsView_DragMode(void* ptr)
{
	return static_cast<QGraphicsView*>(ptr)->dragMode();
}

long long QGraphicsView_OptimizationFlags(void* ptr)
{
	return static_cast<QGraphicsView*>(ptr)->optimizationFlags();
}

long long QGraphicsView_ResizeAnchor(void* ptr)
{
	return static_cast<QGraphicsView*>(ptr)->resizeAnchor();
}

long long QGraphicsView_TransformationAnchor(void* ptr)
{
	return static_cast<QGraphicsView*>(ptr)->transformationAnchor();
}

long long QGraphicsView_ViewportUpdateMode(void* ptr)
{
	return static_cast<QGraphicsView*>(ptr)->viewportUpdateMode();
}

struct QtWidgets_PackedList QGraphicsView_Items(void* ptr)
{
	return ({ QList<QGraphicsItem *>* tmpValued1f47c = new QList<QGraphicsItem *>(static_cast<QGraphicsView*>(ptr)->items()); QtWidgets_PackedList { tmpValued1f47c, tmpValued1f47c->size() }; });
}

struct QtWidgets_PackedList QGraphicsView_Items7(void* ptr, void* path, long long mode)
{
	return ({ QList<QGraphicsItem *>* tmpValuef9fae0 = new QList<QGraphicsItem *>(static_cast<QGraphicsView*>(ptr)->items(*static_cast<QPainterPath*>(path), static_cast<Qt::ItemSelectionMode>(mode))); QtWidgets_PackedList { tmpValuef9fae0, tmpValuef9fae0->size() }; });
}

struct QtWidgets_PackedList QGraphicsView_Items2(void* ptr, void* pos)
{
	return ({ QList<QGraphicsItem *>* tmpValuea914ba = new QList<QGraphicsItem *>(static_cast<QGraphicsView*>(ptr)->items(*static_cast<QPoint*>(pos))); QtWidgets_PackedList { tmpValuea914ba, tmpValuea914ba->size() }; });
}

struct QtWidgets_PackedList QGraphicsView_Items6(void* ptr, void* polygon, long long mode)
{
	return ({ QList<QGraphicsItem *>* tmpValuec2e68e = new QList<QGraphicsItem *>(static_cast<QGraphicsView*>(ptr)->items(*static_cast<QPolygon*>(polygon), static_cast<Qt::ItemSelectionMode>(mode))); QtWidgets_PackedList { tmpValuec2e68e, tmpValuec2e68e->size() }; });
}

struct QtWidgets_PackedList QGraphicsView_Items4(void* ptr, void* rect, long long mode)
{
	return ({ QList<QGraphicsItem *>* tmpValue4b93fb = new QList<QGraphicsItem *>(static_cast<QGraphicsView*>(ptr)->items(*static_cast<QRect*>(rect), static_cast<Qt::ItemSelectionMode>(mode))); QtWidgets_PackedList { tmpValue4b93fb, tmpValue4b93fb->size() }; });
}

struct QtWidgets_PackedList QGraphicsView_Items3(void* ptr, int x, int y)
{
	return ({ QList<QGraphicsItem *>* tmpValue429885 = new QList<QGraphicsItem *>(static_cast<QGraphicsView*>(ptr)->items(x, y)); QtWidgets_PackedList { tmpValue429885, tmpValue429885->size() }; });
}

struct QtWidgets_PackedList QGraphicsView_Items5(void* ptr, int x, int y, int w, int h, long long mode)
{
	return ({ QList<QGraphicsItem *>* tmpValue02e509 = new QList<QGraphicsItem *>(static_cast<QGraphicsView*>(ptr)->items(x, y, w, h, static_cast<Qt::ItemSelectionMode>(mode))); QtWidgets_PackedList { tmpValue02e509, tmpValue02e509->size() }; });
}

void* QGraphicsView_Matrix(void* ptr)
{
	return new QMatrix(static_cast<QGraphicsView*>(ptr)->matrix());
}

long long QGraphicsView_RenderHints(void* ptr)
{
	return static_cast<QGraphicsView*>(ptr)->renderHints();
}

void* QGraphicsView_MapFromScene4(void* ptr, void* path)
{
	return new QPainterPath(static_cast<QGraphicsView*>(ptr)->mapFromScene(*static_cast<QPainterPath*>(path)));
}

void* QGraphicsView_MapToScene4(void* ptr, void* path)
{
	return new QPainterPath(static_cast<QGraphicsView*>(ptr)->mapToScene(*static_cast<QPainterPath*>(path)));
}

void* QGraphicsView_MapFromScene(void* ptr, void* point)
{
	return ({ QPoint tmpValue = static_cast<QGraphicsView*>(ptr)->mapFromScene(*static_cast<QPointF*>(point)); new QPoint(tmpValue.x(), tmpValue.y()); });
}

void* QGraphicsView_MapFromScene5(void* ptr, double x, double y)
{
	return ({ QPoint tmpValue = static_cast<QGraphicsView*>(ptr)->mapFromScene(x, y); new QPoint(tmpValue.x(), tmpValue.y()); });
}

void* QGraphicsView_MapToScene(void* ptr, void* point)
{
	return ({ QPointF tmpValue = static_cast<QGraphicsView*>(ptr)->mapToScene(*static_cast<QPoint*>(point)); new QPointF(tmpValue.x(), tmpValue.y()); });
}

void* QGraphicsView_MapToScene5(void* ptr, int x, int y)
{
	return ({ QPointF tmpValue = static_cast<QGraphicsView*>(ptr)->mapToScene(x, y); new QPointF(tmpValue.x(), tmpValue.y()); });
}

void* QGraphicsView_MapFromScene3(void* ptr, void* polygon)
{
	return new QPolygon(static_cast<QGraphicsView*>(ptr)->mapFromScene(*static_cast<QPolygonF*>(polygon)));
}

void* QGraphicsView_MapFromScene2(void* ptr, void* rect)
{
	return new QPolygon(static_cast<QGraphicsView*>(ptr)->mapFromScene(*static_cast<QRectF*>(rect)));
}

void* QGraphicsView_MapFromScene6(void* ptr, double x, double y, double w, double h)
{
	return new QPolygon(static_cast<QGraphicsView*>(ptr)->mapFromScene(x, y, w, h));
}

void* QGraphicsView_MapToScene3(void* ptr, void* polygon)
{
	return new QPolygonF(static_cast<QGraphicsView*>(ptr)->mapToScene(*static_cast<QPolygon*>(polygon)));
}

void* QGraphicsView_MapToScene2(void* ptr, void* rect)
{
	return new QPolygonF(static_cast<QGraphicsView*>(ptr)->mapToScene(*static_cast<QRect*>(rect)));
}

void* QGraphicsView_MapToScene6(void* ptr, int x, int y, int w, int h)
{
	return new QPolygonF(static_cast<QGraphicsView*>(ptr)->mapToScene(x, y, w, h));
}

void* QGraphicsView_RubberBandRect(void* ptr)
{
	return ({ QRect tmpValue = static_cast<QGraphicsView*>(ptr)->rubberBandRect(); new QRect(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QGraphicsView_SceneRect(void* ptr)
{
	return ({ QRectF tmpValue = static_cast<QGraphicsView*>(ptr)->sceneRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QGraphicsView_Transform(void* ptr)
{
	return new QTransform(static_cast<QGraphicsView*>(ptr)->transform());
}

void* QGraphicsView_ViewportTransform(void* ptr)
{
	return new QTransform(static_cast<QGraphicsView*>(ptr)->viewportTransform());
}

long long QGraphicsView_Alignment(void* ptr)
{
	return static_cast<QGraphicsView*>(ptr)->alignment();
}

long long QGraphicsView_RubberBandSelectionMode(void* ptr)
{
	return static_cast<QGraphicsView*>(ptr)->rubberBandSelectionMode();
}

char QGraphicsView_IsInteractive(void* ptr)
{
	return static_cast<QGraphicsView*>(ptr)->isInteractive();
}

char QGraphicsView_IsTransformed(void* ptr)
{
	return static_cast<QGraphicsView*>(ptr)->isTransformed();
}

void* QGraphicsView___updateScene_rects_atList(void* ptr, int i)
{
	return ({ QRectF tmpValue = ({QRectF tmp = static_cast<QList<QRectF>*>(ptr)->at(i); if (i == static_cast<QList<QRectF>*>(ptr)->size()-1) { static_cast<QList<QRectF>*>(ptr)->~QList(); free(ptr); }; tmp; }); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void QGraphicsView___updateScene_rects_setList(void* ptr, void* i)
{
	static_cast<QList<QRectF>*>(ptr)->append(*static_cast<QRectF*>(i));
}

void* QGraphicsView___updateScene_rects_newList(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QRectF>();
}

void* QGraphicsView___items_atList(void* ptr, int i)
{
	return ({QGraphicsItem * tmp = static_cast<QList<QGraphicsItem *>*>(ptr)->at(i); if (i == static_cast<QList<QGraphicsItem *>*>(ptr)->size()-1) { static_cast<QList<QGraphicsItem *>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QGraphicsView___items_setList(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsItem*>(i));
	}
}

void* QGraphicsView___items_newList(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QGraphicsItem *>();
}

void* QGraphicsView___items_atList7(void* ptr, int i)
{
	return ({QGraphicsItem * tmp = static_cast<QList<QGraphicsItem *>*>(ptr)->at(i); if (i == static_cast<QList<QGraphicsItem *>*>(ptr)->size()-1) { static_cast<QList<QGraphicsItem *>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QGraphicsView___items_setList7(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsItem*>(i));
	}
}

void* QGraphicsView___items_newList7(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QGraphicsItem *>();
}

void* QGraphicsView___items_atList2(void* ptr, int i)
{
	return ({QGraphicsItem * tmp = static_cast<QList<QGraphicsItem *>*>(ptr)->at(i); if (i == static_cast<QList<QGraphicsItem *>*>(ptr)->size()-1) { static_cast<QList<QGraphicsItem *>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QGraphicsView___items_setList2(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsItem*>(i));
	}
}

void* QGraphicsView___items_newList2(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QGraphicsItem *>();
}

void* QGraphicsView___items_atList6(void* ptr, int i)
{
	return ({QGraphicsItem * tmp = static_cast<QList<QGraphicsItem *>*>(ptr)->at(i); if (i == static_cast<QList<QGraphicsItem *>*>(ptr)->size()-1) { static_cast<QList<QGraphicsItem *>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QGraphicsView___items_setList6(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsItem*>(i));
	}
}

void* QGraphicsView___items_newList6(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QGraphicsItem *>();
}

void* QGraphicsView___items_atList4(void* ptr, int i)
{
	return ({QGraphicsItem * tmp = static_cast<QList<QGraphicsItem *>*>(ptr)->at(i); if (i == static_cast<QList<QGraphicsItem *>*>(ptr)->size()-1) { static_cast<QList<QGraphicsItem *>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QGraphicsView___items_setList4(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsItem*>(i));
	}
}

void* QGraphicsView___items_newList4(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QGraphicsItem *>();
}

void* QGraphicsView___items_atList3(void* ptr, int i)
{
	return ({QGraphicsItem * tmp = static_cast<QList<QGraphicsItem *>*>(ptr)->at(i); if (i == static_cast<QList<QGraphicsItem *>*>(ptr)->size()-1) { static_cast<QList<QGraphicsItem *>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QGraphicsView___items_setList3(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsItem*>(i));
	}
}

void* QGraphicsView___items_newList3(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QGraphicsItem *>();
}

void* QGraphicsView___items_atList5(void* ptr, int i)
{
	return ({QGraphicsItem * tmp = static_cast<QList<QGraphicsItem *>*>(ptr)->at(i); if (i == static_cast<QList<QGraphicsItem *>*>(ptr)->size()-1) { static_cast<QList<QGraphicsItem *>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QGraphicsView___items_setList5(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else {
		static_cast<QList<QGraphicsItem *>*>(ptr)->append(static_cast<QGraphicsItem*>(i));
	}
}

void* QGraphicsView___items_newList5(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QGraphicsItem *>();
}

class MyQGraphicsWidget: public QGraphicsWidget
{
public:
	MyQGraphicsWidget(QGraphicsItem *parent = Q_NULLPTR, Qt::WindowFlags wFlags = Qt::WindowFlags()) : QGraphicsWidget(parent, wFlags) {QGraphicsWidget_QGraphicsWidget_QRegisterMetaType();};
	QVariant itemChange(QGraphicsItem::GraphicsItemChange change, const QVariant & value) { return *static_cast<QVariant*>(callbackQGraphicsItem_ItemChange(this, change, const_cast<QVariant*>(&value))); };
	bool close() { return callbackQGraphicsWidget_Close(this) != 0; };
	bool event(QEvent * event) { return callbackQGraphicsObject_Event(this, event) != 0; };
	bool focusNextPrevChild(bool next) { return callbackQGraphicsWidget_FocusNextPrevChild(this, next) != 0; };
	bool sceneEvent(QEvent * event) { return callbackQGraphicsItem_SceneEvent(this, event) != 0; };
	bool windowFrameEvent(QEvent * event) { return callbackQGraphicsWidget_WindowFrameEvent(this, event) != 0; };
	void changeEvent(QEvent * event) { callbackQGraphicsWidget_ChangeEvent(this, event); };
	void closeEvent(QCloseEvent * event) { callbackQGraphicsWidget_CloseEvent(this, event); };
	void focusInEvent(QFocusEvent * event) { callbackQGraphicsItem_FocusInEvent(this, event); };
	void focusOutEvent(QFocusEvent * event) { callbackQGraphicsItem_FocusOutEvent(this, event); };
	void Signal_GeometryChanged() { callbackQGraphicsWidget_GeometryChanged(this); };
	void grabKeyboardEvent(QEvent * event) { callbackQGraphicsWidget_GrabKeyboardEvent(this, event); };
	void grabMouseEvent(QEvent * event) { callbackQGraphicsWidget_GrabMouseEvent(this, event); };
	void hideEvent(QHideEvent * event) { callbackQGraphicsWidget_HideEvent(this, event); };
	void hoverLeaveEvent(QGraphicsSceneHoverEvent * event) { callbackQGraphicsItem_HoverLeaveEvent(this, event); };
	void hoverMoveEvent(QGraphicsSceneHoverEvent * event) { callbackQGraphicsItem_HoverMoveEvent(this, event); };
	void moveEvent(QGraphicsSceneMoveEvent * event) { callbackQGraphicsWidget_MoveEvent(this, event); };
	void paint(QPainter * painter, const QStyleOptionGraphicsItem * option, QWidget * widget) { callbackQGraphicsWidget_Paint(this, painter, const_cast<QStyleOptionGraphicsItem*>(option), widget); };
	void paintWindowFrame(QPainter * painter, const QStyleOptionGraphicsItem * option, QWidget * widget) { callbackQGraphicsWidget_PaintWindowFrame(this, painter, const_cast<QStyleOptionGraphicsItem*>(option), widget); };
	void polishEvent() { callbackQGraphicsWidget_PolishEvent(this); };
	void resizeEvent(QGraphicsSceneResizeEvent * event) { callbackQGraphicsWidget_ResizeEvent(this, event); };
	void setGeometry(const QRectF & rect) { callbackQGraphicsLayoutItem_SetGeometry(this, const_cast<QRectF*>(&rect)); };
	void showEvent(QShowEvent * event) { callbackQGraphicsWidget_ShowEvent(this, event); };
	void ungrabKeyboardEvent(QEvent * event) { callbackQGraphicsWidget_UngrabKeyboardEvent(this, event); };
	void ungrabMouseEvent(QEvent * event) { callbackQGraphicsWidget_UngrabMouseEvent(this, event); };
	void updateGeometry() { callbackQGraphicsLayoutItem_UpdateGeometry(this); };
	 ~MyQGraphicsWidget() { callbackQGraphicsWidget_DestroyQGraphicsWidget(this); };
	QPainterPath shape() const { return *static_cast<QPainterPath*>(callbackQGraphicsItem_Shape(const_cast<void*>(static_cast<const void*>(this)))); };
	QRectF boundingRect() const { return *static_cast<QRectF*>(callbackQGraphicsWidget_BoundingRect(const_cast<void*>(static_cast<const void*>(this)))); };
	QSizeF sizeHint(Qt::SizeHint which, const QSizeF & constraint) const { return *static_cast<QSizeF*>(callbackQGraphicsWidget_SizeHint(const_cast<void*>(static_cast<const void*>(this)), which, const_cast<QSizeF*>(&constraint))); };
	Qt::WindowFrameSection windowFrameSectionAt(const QPointF & pos) const { return static_cast<Qt::WindowFrameSection>(callbackQGraphicsWidget_WindowFrameSectionAt(const_cast<void*>(static_cast<const void*>(this)), const_cast<QPointF*>(&pos))); };
	const QMetaObject * metaObject() const { return static_cast<QMetaObject*>(callbackQGraphicsObject_MetaObject(const_cast<void*>(static_cast<const void*>(this)))); };
	int type() const { return callbackQGraphicsItem_Type(const_cast<void*>(static_cast<const void*>(this))); };
	void getContentsMargins(qreal * left, qreal * top, qreal * right, qreal * bottom) const { callbackQGraphicsLayoutItem_GetContentsMargins(const_cast<void*>(static_cast<const void*>(this)), *left, *top, *right, *bottom); };
	void initStyleOption(QStyleOption * option) const { callbackQGraphicsWidget_InitStyleOption(const_cast<void*>(static_cast<const void*>(this)), option); };
	void Signal_EnabledChanged() { callbackQGraphicsObject_EnabledChanged(this); };
	void Signal_OpacityChanged() { callbackQGraphicsObject_OpacityChanged(this); };
	void Signal_ParentChanged() { callbackQGraphicsObject_ParentChanged(this); };
	void Signal_RotationChanged() { callbackQGraphicsObject_RotationChanged(this); };
	void Signal_ScaleChanged() { callbackQGraphicsObject_ScaleChanged(this); };
	void updateMicroFocus() { callbackQGraphicsObject_UpdateMicroFocus(this); };
	void Signal_VisibleChanged() { callbackQGraphicsObject_VisibleChanged(this); };
	void Signal_XChanged() { callbackQGraphicsObject_XChanged(this); };
	void Signal_YChanged() { callbackQGraphicsObject_YChanged(this); };
	void Signal_ZChanged() { callbackQGraphicsObject_ZChanged(this); };
	bool eventFilter(QObject * watched, QEvent * event) { return callbackQGraphicsObject_EventFilter(this, watched, event) != 0; };
	void childEvent(QChildEvent * event) { callbackQGraphicsObject_ChildEvent(this, event); };
	void connectNotify(const QMetaMethod & sign) { callbackQGraphicsObject_ConnectNotify(this, const_cast<QMetaMethod*>(&sign)); };
	void customEvent(QEvent * event) { callbackQGraphicsObject_CustomEvent(this, event); };
	void deleteLater() { callbackQGraphicsObject_DeleteLater(this); };
	void Signal_Destroyed(QObject * obj) { callbackQGraphicsObject_Destroyed(this, obj); };
	void disconnectNotify(const QMetaMethod & sign) { callbackQGraphicsObject_DisconnectNotify(this, const_cast<QMetaMethod*>(&sign)); };
	void Signal_ObjectNameChanged(const QString & objectName) { QByteArray taa2c4f = objectName.toUtf8(); QtWidgets_PackedString objectNamePacked = { const_cast<char*>(taa2c4f.prepend("WHITESPACE").constData()+10), taa2c4f.size()-10 };callbackQGraphicsObject_ObjectNameChanged(this, objectNamePacked); };
	void timerEvent(QTimerEvent * event) { callbackQGraphicsObject_TimerEvent(this, event); };
	bool sceneEventFilter(QGraphicsItem * watched, QEvent * event) { return callbackQGraphicsItem_SceneEventFilter(this, watched, event) != 0; };
	void advance(int phase) { callbackQGraphicsItem_Advance(this, phase); };
	void contextMenuEvent(QGraphicsSceneContextMenuEvent * event) { callbackQGraphicsItem_ContextMenuEvent(this, event); };
	void dragEnterEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DragEnterEvent(this, event); };
	void dragLeaveEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DragLeaveEvent(this, event); };
	void dragMoveEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DragMoveEvent(this, event); };
	void dropEvent(QGraphicsSceneDragDropEvent * event) { callbackQGraphicsItem_DropEvent(this, event); };
	void hoverEnterEvent(QGraphicsSceneHoverEvent * event) { callbackQGraphicsItem_HoverEnterEvent(this, event); };
	void inputMethodEvent(QInputMethodEvent * event) { callbackQGraphicsItem_InputMethodEvent(this, event); };
	void keyPressEvent(QKeyEvent * event) { callbackQGraphicsItem_KeyPressEvent(this, event); };
	void keyReleaseEvent(QKeyEvent * event) { callbackQGraphicsItem_KeyReleaseEvent(this, event); };
	void mouseDoubleClickEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MouseDoubleClickEvent(this, event); };
	void mouseMoveEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MouseMoveEvent(this, event); };
	void mousePressEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MousePressEvent(this, event); };
	void mouseReleaseEvent(QGraphicsSceneMouseEvent * event) { callbackQGraphicsItem_MouseReleaseEvent(this, event); };
	void wheelEvent(QGraphicsSceneWheelEvent * event) { callbackQGraphicsItem_WheelEvent(this, event); };
	QPainterPath opaqueArea() const { return *static_cast<QPainterPath*>(callbackQGraphicsItem_OpaqueArea(const_cast<void*>(static_cast<const void*>(this)))); };
	QVariant inputMethodQuery(Qt::InputMethodQuery query) const { return *static_cast<QVariant*>(callbackQGraphicsItem_InputMethodQuery(const_cast<void*>(static_cast<const void*>(this)), query)); };
	bool collidesWithItem(const QGraphicsItem * other, Qt::ItemSelectionMode mode) const { return callbackQGraphicsItem_CollidesWithItem(const_cast<void*>(static_cast<const void*>(this)), const_cast<QGraphicsItem*>(other), mode) != 0; };
	bool collidesWithPath(const QPainterPath & path, Qt::ItemSelectionMode mode) const { return callbackQGraphicsItem_CollidesWithPath(const_cast<void*>(static_cast<const void*>(this)), const_cast<QPainterPath*>(&path), mode) != 0; };
	bool contains(const QPointF & point) const { return callbackQGraphicsItem_Contains(const_cast<void*>(static_cast<const void*>(this)), const_cast<QPointF*>(&point)) != 0; };
	bool isObscuredBy(const QGraphicsItem * item) const { return callbackQGraphicsItem_IsObscuredBy(const_cast<void*>(static_cast<const void*>(this)), const_cast<QGraphicsItem*>(item)) != 0; };
};

Q_DECLARE_METATYPE(QGraphicsWidget*)
Q_DECLARE_METATYPE(MyQGraphicsWidget*)

int QGraphicsWidget_QGraphicsWidget_QRegisterMetaType(){qRegisterMetaType<QGraphicsWidget*>(); return qRegisterMetaType<MyQGraphicsWidget*>();}

void* QGraphicsWidget_NewQGraphicsWidget(void* parent, long long wFlags)
{
	return new MyQGraphicsWidget(static_cast<QGraphicsItem*>(parent), static_cast<Qt::WindowType>(wFlags));
}

char QGraphicsWidget_Close(void* ptr)
{
		bool returnArg;
	QMetaObject::invokeMethod(static_cast<QGraphicsWidget*>(ptr), "close", Q_RETURN_ARG(bool, returnArg));
	return returnArg;
}

char QGraphicsWidget_CloseDefault(void* ptr)
{
	if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::close();
	} else {
		return static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::close();
	}
}

char QGraphicsWidget_FocusNextPrevChild(void* ptr, char next)
{
		return static_cast<QGraphicsWidget*>(ptr)->focusNextPrevChild(next != 0);
}

char QGraphicsWidget_FocusNextPrevChildDefault(void* ptr, char next)
{
	if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::focusNextPrevChild(next != 0);
	} else {
		return static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::focusNextPrevChild(next != 0);
	}
}

char QGraphicsWidget_WindowFrameEvent(void* ptr, void* event)
{
		return static_cast<QGraphicsWidget*>(ptr)->windowFrameEvent(static_cast<QEvent*>(event));
}

char QGraphicsWidget_WindowFrameEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::windowFrameEvent(static_cast<QEvent*>(event));
	} else {
		return static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::windowFrameEvent(static_cast<QEvent*>(event));
	}
}

int QGraphicsWidget_GrabShortcut(void* ptr, void* sequence, long long context)
{
		return static_cast<QGraphicsWidget*>(ptr)->grabShortcut(*static_cast<QKeySequence*>(sequence), static_cast<Qt::ShortcutContext>(context));
}

void QGraphicsWidget_AddAction(void* ptr, void* action)
{
		static_cast<QGraphicsWidget*>(ptr)->addAction(static_cast<QAction*>(action));
}

void QGraphicsWidget_AddActions(void* ptr, void* actions)
{
		static_cast<QGraphicsWidget*>(ptr)->addActions(({ QList<QAction *>* tmpP = static_cast<QList<QAction *>*>(actions); QList<QAction *> tmpV = *tmpP; tmpP->~QList(); free(tmpP); tmpV; }));
}

void QGraphicsWidget_AdjustSize(void* ptr)
{
		static_cast<QGraphicsWidget*>(ptr)->adjustSize();
}

void QGraphicsWidget_ChangeEvent(void* ptr, void* event)
{
		static_cast<QGraphicsWidget*>(ptr)->changeEvent(static_cast<QEvent*>(event));
}

void QGraphicsWidget_ChangeEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::changeEvent(static_cast<QEvent*>(event));
	} else {
		static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::changeEvent(static_cast<QEvent*>(event));
	}
}

void QGraphicsWidget_CloseEvent(void* ptr, void* event)
{
		static_cast<QGraphicsWidget*>(ptr)->closeEvent(static_cast<QCloseEvent*>(event));
}

void QGraphicsWidget_CloseEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::closeEvent(static_cast<QCloseEvent*>(event));
	} else {
		static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::closeEvent(static_cast<QCloseEvent*>(event));
	}
}

void QGraphicsWidget_ConnectGeometryChanged(void* ptr, long long t)
{
	QObject::connect(static_cast<QGraphicsWidget*>(ptr), static_cast<void (QGraphicsWidget::*)()>(&QGraphicsWidget::geometryChanged), static_cast<MyQGraphicsWidget*>(ptr), static_cast<void (MyQGraphicsWidget::*)()>(&MyQGraphicsWidget::Signal_GeometryChanged), static_cast<Qt::ConnectionType>(t));
}

void QGraphicsWidget_DisconnectGeometryChanged(void* ptr)
{
	QObject::disconnect(static_cast<QGraphicsWidget*>(ptr), static_cast<void (QGraphicsWidget::*)()>(&QGraphicsWidget::geometryChanged), static_cast<MyQGraphicsWidget*>(ptr), static_cast<void (MyQGraphicsWidget::*)()>(&MyQGraphicsWidget::Signal_GeometryChanged));
}

void QGraphicsWidget_GeometryChanged(void* ptr)
{
		static_cast<QGraphicsWidget*>(ptr)->geometryChanged();
}

void QGraphicsWidget_GrabKeyboardEvent(void* ptr, void* event)
{
		static_cast<QGraphicsWidget*>(ptr)->grabKeyboardEvent(static_cast<QEvent*>(event));
}

void QGraphicsWidget_GrabKeyboardEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::grabKeyboardEvent(static_cast<QEvent*>(event));
	} else {
		static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::grabKeyboardEvent(static_cast<QEvent*>(event));
	}
}

void QGraphicsWidget_GrabMouseEvent(void* ptr, void* event)
{
		static_cast<QGraphicsWidget*>(ptr)->grabMouseEvent(static_cast<QEvent*>(event));
}

void QGraphicsWidget_GrabMouseEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::grabMouseEvent(static_cast<QEvent*>(event));
	} else {
		static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::grabMouseEvent(static_cast<QEvent*>(event));
	}
}

void QGraphicsWidget_HideEvent(void* ptr, void* event)
{
		static_cast<QGraphicsWidget*>(ptr)->hideEvent(static_cast<QHideEvent*>(event));
}

void QGraphicsWidget_HideEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::hideEvent(static_cast<QHideEvent*>(event));
	} else {
		static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::hideEvent(static_cast<QHideEvent*>(event));
	}
}

void QGraphicsWidget_InsertAction(void* ptr, void* before, void* action)
{
		static_cast<QGraphicsWidget*>(ptr)->insertAction(static_cast<QAction*>(before), static_cast<QAction*>(action));
}

void QGraphicsWidget_InsertActions(void* ptr, void* before, void* actions)
{
		static_cast<QGraphicsWidget*>(ptr)->insertActions(static_cast<QAction*>(before), ({ QList<QAction *>* tmpP = static_cast<QList<QAction *>*>(actions); QList<QAction *> tmpV = *tmpP; tmpP->~QList(); free(tmpP); tmpV; }));
}

void QGraphicsWidget_MoveEvent(void* ptr, void* event)
{
		static_cast<QGraphicsWidget*>(ptr)->moveEvent(static_cast<QGraphicsSceneMoveEvent*>(event));
}

void QGraphicsWidget_MoveEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::moveEvent(static_cast<QGraphicsSceneMoveEvent*>(event));
	} else {
		static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::moveEvent(static_cast<QGraphicsSceneMoveEvent*>(event));
	}
}

void QGraphicsWidget_Paint(void* ptr, void* painter, void* option, void* widget)
{
		static_cast<QGraphicsWidget*>(ptr)->paint(static_cast<QPainter*>(painter), static_cast<QStyleOptionGraphicsItem*>(option), static_cast<QWidget*>(widget));
}

void QGraphicsWidget_PaintDefault(void* ptr, void* painter, void* option, void* widget)
{
	if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::paint(static_cast<QPainter*>(painter), static_cast<QStyleOptionGraphicsItem*>(option), static_cast<QWidget*>(widget));
	} else {
		static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::paint(static_cast<QPainter*>(painter), static_cast<QStyleOptionGraphicsItem*>(option), static_cast<QWidget*>(widget));
	}
}

void QGraphicsWidget_PaintWindowFrame(void* ptr, void* painter, void* option, void* widget)
{
		static_cast<QGraphicsWidget*>(ptr)->paintWindowFrame(static_cast<QPainter*>(painter), static_cast<QStyleOptionGraphicsItem*>(option), static_cast<QWidget*>(widget));
}

void QGraphicsWidget_PaintWindowFrameDefault(void* ptr, void* painter, void* option, void* widget)
{
	if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::paintWindowFrame(static_cast<QPainter*>(painter), static_cast<QStyleOptionGraphicsItem*>(option), static_cast<QWidget*>(widget));
	} else {
		static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::paintWindowFrame(static_cast<QPainter*>(painter), static_cast<QStyleOptionGraphicsItem*>(option), static_cast<QWidget*>(widget));
	}
}

void QGraphicsWidget_PolishEvent(void* ptr)
{
		static_cast<QGraphicsWidget*>(ptr)->polishEvent();
}

void QGraphicsWidget_PolishEventDefault(void* ptr)
{
	if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::polishEvent();
	} else {
		static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::polishEvent();
	}
}

void QGraphicsWidget_ReleaseShortcut(void* ptr, int id)
{
		static_cast<QGraphicsWidget*>(ptr)->releaseShortcut(id);
}

void QGraphicsWidget_RemoveAction(void* ptr, void* action)
{
		static_cast<QGraphicsWidget*>(ptr)->removeAction(static_cast<QAction*>(action));
}

void QGraphicsWidget_Resize(void* ptr, void* size)
{
		static_cast<QGraphicsWidget*>(ptr)->resize(*static_cast<QSizeF*>(size));
}

void QGraphicsWidget_Resize2(void* ptr, double w, double h)
{
		static_cast<QGraphicsWidget*>(ptr)->resize(w, h);
}

void QGraphicsWidget_ResizeEvent(void* ptr, void* event)
{
		static_cast<QGraphicsWidget*>(ptr)->resizeEvent(static_cast<QGraphicsSceneResizeEvent*>(event));
}

void QGraphicsWidget_ResizeEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::resizeEvent(static_cast<QGraphicsSceneResizeEvent*>(event));
	} else {
		static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::resizeEvent(static_cast<QGraphicsSceneResizeEvent*>(event));
	}
}

void QGraphicsWidget_SetAttribute(void* ptr, long long attribute, char on)
{
		static_cast<QGraphicsWidget*>(ptr)->setAttribute(static_cast<Qt::WidgetAttribute>(attribute), on != 0);
}

void QGraphicsWidget_SetAutoFillBackground(void* ptr, char enabled)
{
		static_cast<QGraphicsWidget*>(ptr)->setAutoFillBackground(enabled != 0);
}

void QGraphicsWidget_SetContentsMargins(void* ptr, double left, double top, double right, double bottom)
{
		static_cast<QGraphicsWidget*>(ptr)->setContentsMargins(left, top, right, bottom);
}

void QGraphicsWidget_SetFocusPolicy(void* ptr, long long policy)
{
		static_cast<QGraphicsWidget*>(ptr)->setFocusPolicy(static_cast<Qt::FocusPolicy>(policy));
}

void QGraphicsWidget_SetFont(void* ptr, void* font)
{
		static_cast<QGraphicsWidget*>(ptr)->setFont(*static_cast<QFont*>(font));
}

void QGraphicsWidget_SetGeometry2(void* ptr, double x, double y, double w, double h)
{
		static_cast<QGraphicsWidget*>(ptr)->setGeometry(x, y, w, h);
}

void QGraphicsWidget_SetLayout(void* ptr, void* layout)
{
		static_cast<QGraphicsWidget*>(ptr)->setLayout(static_cast<QGraphicsLayout*>(layout));
}

void QGraphicsWidget_SetLayoutDirection(void* ptr, long long direction)
{
		static_cast<QGraphicsWidget*>(ptr)->setLayoutDirection(static_cast<Qt::LayoutDirection>(direction));
}

void QGraphicsWidget_SetPalette(void* ptr, void* palette)
{
		static_cast<QGraphicsWidget*>(ptr)->setPalette(*static_cast<QPalette*>(palette));
}

void QGraphicsWidget_SetShortcutAutoRepeat(void* ptr, int id, char enabled)
{
		static_cast<QGraphicsWidget*>(ptr)->setShortcutAutoRepeat(id, enabled != 0);
}

void QGraphicsWidget_SetShortcutEnabled(void* ptr, int id, char enabled)
{
		static_cast<QGraphicsWidget*>(ptr)->setShortcutEnabled(id, enabled != 0);
}

void QGraphicsWidget_SetStyle(void* ptr, void* style)
{
		static_cast<QGraphicsWidget*>(ptr)->setStyle(static_cast<QStyle*>(style));
}

void QGraphicsWidget_QGraphicsWidget_SetTabOrder(void* first, void* second)
{
		QGraphicsWidget::setTabOrder(static_cast<QGraphicsWidget*>(first), static_cast<QGraphicsWidget*>(second));
}

void QGraphicsWidget_SetWindowFlags(void* ptr, long long wFlags)
{
		static_cast<QGraphicsWidget*>(ptr)->setWindowFlags(static_cast<Qt::WindowType>(wFlags));
}

void QGraphicsWidget_SetWindowFrameMargins(void* ptr, double left, double top, double right, double bottom)
{
		static_cast<QGraphicsWidget*>(ptr)->setWindowFrameMargins(left, top, right, bottom);
}

void QGraphicsWidget_SetWindowTitle(void* ptr, struct QtWidgets_PackedString title)
{
		static_cast<QGraphicsWidget*>(ptr)->setWindowTitle(QString::fromUtf8(title.data, title.len));
}

void QGraphicsWidget_ShowEvent(void* ptr, void* event)
{
		static_cast<QGraphicsWidget*>(ptr)->showEvent(static_cast<QShowEvent*>(event));
}

void QGraphicsWidget_ShowEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::showEvent(static_cast<QShowEvent*>(event));
	} else {
		static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::showEvent(static_cast<QShowEvent*>(event));
	}
}

void QGraphicsWidget_UngrabKeyboardEvent(void* ptr, void* event)
{
		static_cast<QGraphicsWidget*>(ptr)->ungrabKeyboardEvent(static_cast<QEvent*>(event));
}

void QGraphicsWidget_UngrabKeyboardEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::ungrabKeyboardEvent(static_cast<QEvent*>(event));
	} else {
		static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::ungrabKeyboardEvent(static_cast<QEvent*>(event));
	}
}

void QGraphicsWidget_UngrabMouseEvent(void* ptr, void* event)
{
		static_cast<QGraphicsWidget*>(ptr)->ungrabMouseEvent(static_cast<QEvent*>(event));
}

void QGraphicsWidget_UngrabMouseEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::ungrabMouseEvent(static_cast<QEvent*>(event));
	} else {
		static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::ungrabMouseEvent(static_cast<QEvent*>(event));
	}
}

void QGraphicsWidget_UnsetLayoutDirection(void* ptr)
{
		static_cast<QGraphicsWidget*>(ptr)->unsetLayoutDirection();
}

void QGraphicsWidget_UnsetWindowFrameMargins(void* ptr)
{
		static_cast<QGraphicsWidget*>(ptr)->unsetWindowFrameMargins();
}

void QGraphicsWidget_DestroyQGraphicsWidget(void* ptr)
{
	static_cast<QGraphicsWidget*>(ptr)->~QGraphicsWidget();
}

void QGraphicsWidget_DestroyQGraphicsWidgetDefault(void* ptr)
{
	Q_UNUSED(ptr);

}

void* QGraphicsWidget_Font(void* ptr)
{
		return new QFont(static_cast<QGraphicsWidget*>(ptr)->font());
}

void* QGraphicsWidget_Layout(void* ptr)
{
		return static_cast<QGraphicsWidget*>(ptr)->layout();
}

void* QGraphicsWidget_FocusWidget(void* ptr)
{
		return static_cast<QGraphicsWidget*>(ptr)->focusWidget();
}

struct QtWidgets_PackedList QGraphicsWidget_Actions(void* ptr)
{
		return ({ QList<QAction *>* tmpValuec4928c = new QList<QAction *>(static_cast<QGraphicsWidget*>(ptr)->actions()); QtWidgets_PackedList { tmpValuec4928c, tmpValuec4928c->size() }; });
}

void* QGraphicsWidget_Palette(void* ptr)
{
		return new QPalette(static_cast<QGraphicsWidget*>(ptr)->palette());
}

void* QGraphicsWidget_BoundingRect(void* ptr)
{
		return ({ QRectF tmpValue = static_cast<QGraphicsWidget*>(ptr)->boundingRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QGraphicsWidget_BoundingRectDefault(void* ptr)
{
	if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		return ({ QRectF tmpValue = static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::boundingRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	} else {
		return ({ QRectF tmpValue = static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::boundingRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	}
}

void* QGraphicsWidget_Rect(void* ptr)
{
		return ({ QRectF tmpValue = static_cast<QGraphicsWidget*>(ptr)->rect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QGraphicsWidget_WindowFrameGeometry(void* ptr)
{
		return ({ QRectF tmpValue = static_cast<QGraphicsWidget*>(ptr)->windowFrameGeometry(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QGraphicsWidget_WindowFrameRect(void* ptr)
{
		return ({ QRectF tmpValue = static_cast<QGraphicsWidget*>(ptr)->windowFrameRect(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QGraphicsWidget_Size(void* ptr)
{
		return ({ QSizeF tmpValue = static_cast<QGraphicsWidget*>(ptr)->size(); new QSizeF(tmpValue.width(), tmpValue.height()); });
}

void* QGraphicsWidget_SizeHint(void* ptr, long long which, void* constraint)
{
		return ({ QSizeF tmpValue = static_cast<QGraphicsWidget*>(ptr)->sizeHint(static_cast<Qt::SizeHint>(which), *static_cast<QSizeF*>(constraint)); new QSizeF(tmpValue.width(), tmpValue.height()); });
}

void* QGraphicsWidget_SizeHintDefault(void* ptr, long long which, void* constraint)
{
	if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		return ({ QSizeF tmpValue = static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::sizeHint(static_cast<Qt::SizeHint>(which), *static_cast<QSizeF*>(constraint)); new QSizeF(tmpValue.width(), tmpValue.height()); });
	} else {
		return ({ QSizeF tmpValue = static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::sizeHint(static_cast<Qt::SizeHint>(which), *static_cast<QSizeF*>(constraint)); new QSizeF(tmpValue.width(), tmpValue.height()); });
	}
}

struct QtWidgets_PackedString QGraphicsWidget_WindowTitle(void* ptr)
{
		return ({ QByteArray t8cb41d = static_cast<QGraphicsWidget*>(ptr)->windowTitle().toUtf8(); QtWidgets_PackedString { const_cast<char*>(t8cb41d.prepend("WHITESPACE").constData()+10), t8cb41d.size()-10 }; });
}

void* QGraphicsWidget_Style(void* ptr)
{
		return static_cast<QGraphicsWidget*>(ptr)->style();
}

long long QGraphicsWidget_FocusPolicy(void* ptr)
{
		return static_cast<QGraphicsWidget*>(ptr)->focusPolicy();
}

long long QGraphicsWidget_LayoutDirection(void* ptr)
{
		return static_cast<QGraphicsWidget*>(ptr)->layoutDirection();
}

long long QGraphicsWidget_WindowFlags(void* ptr)
{
		return static_cast<QGraphicsWidget*>(ptr)->windowFlags();
}

long long QGraphicsWidget_WindowFrameSectionAt(void* ptr, void* pos)
{
		return static_cast<QGraphicsWidget*>(ptr)->windowFrameSectionAt(*static_cast<QPointF*>(pos));
}

long long QGraphicsWidget_WindowFrameSectionAtDefault(void* ptr, void* pos)
{
	if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::windowFrameSectionAt(*static_cast<QPointF*>(pos));
	} else {
		return static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::windowFrameSectionAt(*static_cast<QPointF*>(pos));
	}
}

long long QGraphicsWidget_WindowType(void* ptr)
{
		return static_cast<QGraphicsWidget*>(ptr)->windowType();
}

char QGraphicsWidget_AutoFillBackground(void* ptr)
{
		return static_cast<QGraphicsWidget*>(ptr)->autoFillBackground();
}

char QGraphicsWidget_IsActiveWindow(void* ptr)
{
		return static_cast<QGraphicsWidget*>(ptr)->isActiveWindow();
}

char QGraphicsWidget_TestAttribute(void* ptr, long long attribute)
{
		return static_cast<QGraphicsWidget*>(ptr)->testAttribute(static_cast<Qt::WidgetAttribute>(attribute));
}

void QGraphicsWidget_GetWindowFrameMargins(void* ptr, double left, double top, double right, double bottom)
{
		static_cast<QGraphicsWidget*>(ptr)->getWindowFrameMargins(&left, &top, &right, &bottom);
}

void QGraphicsWidget_InitStyleOption(void* ptr, void* option)
{
		static_cast<QGraphicsWidget*>(ptr)->initStyleOption(static_cast<QStyleOption*>(option));
}

void QGraphicsWidget_InitStyleOptionDefault(void* ptr, void* option)
{
	if (dynamic_cast<QGraphicsProxyWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsProxyWidget*>(ptr)->QGraphicsProxyWidget::initStyleOption(static_cast<QStyleOption*>(option));
	} else {
		static_cast<QGraphicsWidget*>(ptr)->QGraphicsWidget::initStyleOption(static_cast<QStyleOption*>(option));
	}
}

void* QGraphicsWidget_Geometry(void* ptr)
{
		return ({ QRectF tmpValue = static_cast<QGraphicsWidget*>(ptr)->geometry(); new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QGraphicsWidget_MaximumSize(void* ptr)
{
		return ({ QSizeF tmpValue = static_cast<QGraphicsWidget*>(ptr)->maximumSize(); new QSizeF(tmpValue.width(), tmpValue.height()); });
}

void QGraphicsWidget_SetMaximumSize(void* ptr, void* maximumSize)
{
		static_cast<QGraphicsWidget*>(ptr)->setMaximumSize(*static_cast<QSizeF*>(maximumSize));
}

void* QGraphicsWidget_MinimumSize(void* ptr)
{
		return ({ QSizeF tmpValue = static_cast<QGraphicsWidget*>(ptr)->minimumSize(); new QSizeF(tmpValue.width(), tmpValue.height()); });
}

void QGraphicsWidget_SetMinimumSize(void* ptr, void* minimumSize)
{
		static_cast<QGraphicsWidget*>(ptr)->setMinimumSize(*static_cast<QSizeF*>(minimumSize));
}

void* QGraphicsWidget_PreferredSize(void* ptr)
{
		return ({ QSizeF tmpValue = static_cast<QGraphicsWidget*>(ptr)->preferredSize(); new QSizeF(tmpValue.width(), tmpValue.height()); });
}

void QGraphicsWidget_SetPreferredSize(void* ptr, void* preferredSize)
{
		static_cast<QGraphicsWidget*>(ptr)->setPreferredSize(*static_cast<QSizeF*>(preferredSize));
}

void* QGraphicsWidget_SizePolicy(void* ptr)
{
		return new QSizePolicy(static_cast<QGraphicsWidget*>(ptr)->sizePolicy());
}

void QGraphicsWidget_SetSizePolicy(void* ptr, void* sizePolicy)
{
		static_cast<QGraphicsWidget*>(ptr)->setSizePolicy(*static_cast<QSizePolicy*>(sizePolicy));
}

void* QGraphicsWidget___addActions_actions_atList(void* ptr, int i)
{
		return ({QAction * tmp = static_cast<QList<QAction *>*>(ptr)->at(i); if (i == static_cast<QList<QAction *>*>(ptr)->size()-1) { static_cast<QList<QAction *>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QGraphicsWidget___addActions_actions_setList(void* ptr, void* i)
{
		static_cast<QList<QAction *>*>(ptr)->append(static_cast<QAction*>(i));
}

void* QGraphicsWidget___addActions_actions_newList(void* ptr)
{
	Q_UNUSED(ptr);
		return new QList<QAction *>();
}

void* QGraphicsWidget___insertActions_actions_atList(void* ptr, int i)
{
		return ({QAction * tmp = static_cast<QList<QAction *>*>(ptr)->at(i); if (i == static_cast<QList<QAction *>*>(ptr)->size()-1) { static_cast<QList<QAction *>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QGraphicsWidget___insertActions_actions_setList(void* ptr, void* i)
{
		static_cast<QList<QAction *>*>(ptr)->append(static_cast<QAction*>(i));
}

void* QGraphicsWidget___insertActions_actions_newList(void* ptr)
{
	Q_UNUSED(ptr);
		return new QList<QAction *>();
}

void* QGraphicsWidget___actions_atList(void* ptr, int i)
{
		return ({QAction * tmp = static_cast<QList<QAction *>*>(ptr)->at(i); if (i == static_cast<QList<QAction *>*>(ptr)->size()-1) { static_cast<QList<QAction *>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QGraphicsWidget___actions_setList(void* ptr, void* i)
{
		static_cast<QList<QAction *>*>(ptr)->append(static_cast<QAction*>(i));
}

void* QGraphicsWidget___actions_newList(void* ptr)
{
	Q_UNUSED(ptr);
		return new QList<QAction *>();
}

class MyQLabel: public QLabel
{
public:
	MyQLabel(QWidget *parent = Q_NULLPTR, Qt::WindowFlags ff = Qt::WindowFlags()) : QLabel(parent, ff) {QLabel_QLabel_QRegisterMetaType();};
	MyQLabel(const QString &text, QWidget *parent = Q_NULLPTR, Qt::WindowFlags ff = Qt::WindowFlags()) : QLabel(text, parent, ff) {QLabel_QLabel_QRegisterMetaType();};
	bool event(QEvent * e) { return callbackQWidget_Event(this, e) != 0; };
	bool focusNextPrevChild(bool next) { return callbackQWidget_FocusNextPrevChild(this, next) != 0; };
	void changeEvent(QEvent * ev) { callbackQWidget_ChangeEvent(this, ev); };
	void clear() { callbackQLabel_Clear(this); };
	void contextMenuEvent(QContextMenuEvent * ev) { callbackQWidget_ContextMenuEvent(this, ev); };
	void focusInEvent(QFocusEvent * ev) { callbackQWidget_FocusInEvent(this, ev); };
	void focusOutEvent(QFocusEvent * ev) { callbackQWidget_FocusOutEvent(this, ev); };
	void keyPressEvent(QKeyEvent * ev) { callbackQWidget_KeyPressEvent(this, ev); };
	void Signal_LinkActivated(const QString & link) { QByteArray t4f0aa5 = link.toUtf8(); QtWidgets_PackedString linkPacked = { const_cast<char*>(t4f0aa5.prepend("WHITESPACE").constData()+10), t4f0aa5.size()-10 };callbackQLabel_LinkActivated(this, linkPacked); };
	void Signal_LinkHovered(const QString & link) { QByteArray t4f0aa5 = link.toUtf8(); QtWidgets_PackedString linkPacked = { const_cast<char*>(t4f0aa5.prepend("WHITESPACE").constData()+10), t4f0aa5.size()-10 };callbackQLabel_LinkHovered(this, linkPacked); };
	void mouseMoveEvent(QMouseEvent * ev) { callbackQWidget_MouseMoveEvent(this, ev); };
	void mousePressEvent(QMouseEvent * ev) { callbackQWidget_MousePressEvent(this, ev); };
	void mouseReleaseEvent(QMouseEvent * ev) { callbackQWidget_MouseReleaseEvent(this, ev); };
	void paintEvent(QPaintEvent * vqp) { callbackQWidget_PaintEvent(this, vqp); };
	void setMovie(QMovie * movie) { callbackQLabel_SetMovie(this, movie); };
	void setNum(double num) { callbackQLabel_SetNum2(this, num); };
	void setNum(int num) { callbackQLabel_SetNum(this, num); };
	void setPicture(const QPicture & picture) { callbackQLabel_SetPicture(this, const_cast<QPicture*>(&picture)); };
	void setPixmap(const QPixmap & vqp) { callbackQLabel_SetPixmap(this, const_cast<QPixmap*>(&vqp)); };
	void setText(const QString & vqs) { QByteArray tda39a3 = vqs.toUtf8(); QtWidgets_PackedString vqsPacked = { const_cast<char*>(tda39a3.prepend("WHITESPACE").constData()+10), tda39a3.size()-10 };callbackQLabel_SetText(this, vqsPacked); };
	 ~MyQLabel() { callbackQLabel_DestroyQLabel(this); };
	QSize minimumSizeHint() const { return *static_cast<QSize*>(callbackQWidget_MinimumSizeHint(const_cast<void*>(static_cast<const void*>(this)))); };
	QSize sizeHint() const { return *static_cast<QSize*>(callbackQWidget_SizeHint(const_cast<void*>(static_cast<const void*>(this)))); };
	const QMetaObject * metaObject() const { return static_cast<QMetaObject*>(callbackQWidget_MetaObject(const_cast<void*>(static_cast<const void*>(this)))); };
	int heightForWidth(int w) const { return callbackQWidget_HeightForWidth(const_cast<void*>(static_cast<const void*>(this)), w); };
	bool close() { return callbackQWidget_Close(this) != 0; };
	bool nativeEvent(const QByteArray & eventType, void * message, long * result) { return callbackQWidget_NativeEvent(this, const_cast<QByteArray*>(&eventType), message, result) != 0; };
	void actionEvent(QActionEvent * event) { callbackQWidget_ActionEvent(this, event); };
	void closeEvent(QCloseEvent * event) { callbackQWidget_CloseEvent(this, event); };
	void Signal_CustomContextMenuRequested(const QPoint & pos) { callbackQWidget_CustomContextMenuRequested(this, const_cast<QPoint*>(&pos)); };
	void dragEnterEvent(QDragEnterEvent * event) { callbackQWidget_DragEnterEvent(this, event); };
	void dragLeaveEvent(QDragLeaveEvent * event) { callbackQWidget_DragLeaveEvent(this, event); };
	void dragMoveEvent(QDragMoveEvent * event) { callbackQWidget_DragMoveEvent(this, event); };
	void dropEvent(QDropEvent * event) { callbackQWidget_DropEvent(this, event); };
	void enterEvent(QEvent * event) { callbackQWidget_EnterEvent(this, event); };
	void hide() { callbackQWidget_Hide(this); };
	void hideEvent(QHideEvent * event) { callbackQWidget_HideEvent(this, event); };
	void inputMethodEvent(QInputMethodEvent * event) { callbackQWidget_InputMethodEvent(this, event); };
	void keyReleaseEvent(QKeyEvent * event) { callbackQWidget_KeyReleaseEvent(this, event); };
	void leaveEvent(QEvent * event) { callbackQWidget_LeaveEvent(this, event); };
	void lower() { callbackQWidget_Lower(this); };
	void mouseDoubleClickEvent(QMouseEvent * event) { callbackQWidget_MouseDoubleClickEvent(this, event); };
	void moveEvent(QMoveEvent * event) { callbackQWidget_MoveEvent(this, event); };
	void raise() { callbackQWidget_Raise(this); };
	void repaint() { callbackQWidget_Repaint(this); };
	void resizeEvent(QResizeEvent * event) { callbackQWidget_ResizeEvent(this, event); };
	void setDisabled(bool disable) { callbackQWidget_SetDisabled(this, disable); };
	void setEnabled(bool vbo) { callbackQWidget_SetEnabled(this, vbo); };
	void setFocus() { callbackQWidget_SetFocus2(this); };
	void setHidden(bool hidden) { callbackQWidget_SetHidden(this, hidden); };
	void setStyleSheet(const QString & styleSheet) { QByteArray t728ae7 = styleSheet.toUtf8(); QtWidgets_PackedString styleSheetPacked = { const_cast<char*>(t728ae7.prepend("WHITESPACE").constData()+10), t728ae7.size()-10 };callbackQWidget_SetStyleSheet(this, styleSheetPacked); };
	void setVisible(bool visible) { callbackQWidget_SetVisible(this, visible); };
	void setWindowModified(bool vbo) { callbackQWidget_SetWindowModified(this, vbo); };
	void setWindowTitle(const QString & vqs) { QByteArray tda39a3 = vqs.toUtf8(); QtWidgets_PackedString vqsPacked = { const_cast<char*>(tda39a3.prepend("WHITESPACE").constData()+10), tda39a3.size()-10 };callbackQWidget_SetWindowTitle(this, vqsPacked); };
	void show() { callbackQWidget_Show(this); };
	void showEvent(QShowEvent * event) { callbackQWidget_ShowEvent(this, event); };
	void showFullScreen() { callbackQWidget_ShowFullScreen(this); };
	void showMaximized() { callbackQWidget_ShowMaximized(this); };
	void showMinimized() { callbackQWidget_ShowMinimized(this); };
	void showNormal() { callbackQWidget_ShowNormal(this); };
	void tabletEvent(QTabletEvent * event) { callbackQWidget_TabletEvent(this, event); };
	void update() { callbackQWidget_Update(this); };
	void updateMicroFocus() { callbackQWidget_UpdateMicroFocus(this); };
	void wheelEvent(QWheelEvent * event) { callbackQWidget_WheelEvent(this, event); };
	void Signal_WindowIconChanged(const QIcon & icon) { callbackQWidget_WindowIconChanged(this, const_cast<QIcon*>(&icon)); };
	void Signal_WindowTitleChanged(const QString & title) { QByteArray t3c6de1 = title.toUtf8(); QtWidgets_PackedString titlePacked = { const_cast<char*>(t3c6de1.prepend("WHITESPACE").constData()+10), t3c6de1.size()-10 };callbackQWidget_WindowTitleChanged(this, titlePacked); };
	QPaintEngine * paintEngine() const { return static_cast<QPaintEngine*>(callbackQWidget_PaintEngine(const_cast<void*>(static_cast<const void*>(this)))); };
	QVariant inputMethodQuery(Qt::InputMethodQuery query) const { return *static_cast<QVariant*>(callbackQWidget_InputMethodQuery(const_cast<void*>(static_cast<const void*>(this)), query)); };
	bool hasHeightForWidth() const { return callbackQWidget_HasHeightForWidth(const_cast<void*>(static_cast<const void*>(this))) != 0; };
	int metric(QPaintDevice::PaintDeviceMetric m) const { return callbackQWidget_Metric(const_cast<void*>(static_cast<const void*>(this)), m); };
	void initPainter(QPainter * painter) const { callbackQWidget_InitPainter(const_cast<void*>(static_cast<const void*>(this)), painter); };
	bool eventFilter(QObject * watched, QEvent * event) { return callbackQWidget_EventFilter(this, watched, event) != 0; };
	void childEvent(QChildEvent * event) { callbackQWidget_ChildEvent(this, event); };
	void connectNotify(const QMetaMethod & sign) { callbackQWidget_ConnectNotify(this, const_cast<QMetaMethod*>(&sign)); };
	void customEvent(QEvent * event) { callbackQWidget_CustomEvent(this, event); };
	void deleteLater() { callbackQWidget_DeleteLater(this); };
	void Signal_Destroyed(QObject * obj) { callbackQWidget_Destroyed(this, obj); };
	void disconnectNotify(const QMetaMethod & sign) { callbackQWidget_DisconnectNotify(this, const_cast<QMetaMethod*>(&sign)); };
	void Signal_ObjectNameChanged(const QString & objectName) { QByteArray taa2c4f = objectName.toUtf8(); QtWidgets_PackedString objectNamePacked = { const_cast<char*>(taa2c4f.prepend("WHITESPACE").constData()+10), taa2c4f.size()-10 };callbackQWidget_ObjectNameChanged(this, objectNamePacked); };
	void timerEvent(QTimerEvent * event) { callbackQWidget_TimerEvent(this, event); };
};

Q_DECLARE_METATYPE(QLabel*)
Q_DECLARE_METATYPE(MyQLabel*)

int QLabel_QLabel_QRegisterMetaType(){qRegisterMetaType<QLabel*>(); return qRegisterMetaType<MyQLabel*>();}

void* QLabel_NewQLabel(void* parent, long long ff)
{
		return new MyQLabel(static_cast<QWidget*>(parent), static_cast<Qt::WindowType>(ff));
}

void* QLabel_NewQLabel2(struct QtWidgets_PackedString text, void* parent, long long ff)
{
		return new MyQLabel(QString::fromUtf8(text.data, text.len), static_cast<QWidget*>(parent), static_cast<Qt::WindowType>(ff));
}

void QLabel_Clear(void* ptr)
{
	QMetaObject::invokeMethod(static_cast<QLabel*>(ptr), "clear");
}

void QLabel_ClearDefault(void* ptr)
{
		static_cast<QLabel*>(ptr)->QLabel::clear();
}

void QLabel_ConnectLinkActivated(void* ptr, long long t)
{
	QObject::connect(static_cast<QLabel*>(ptr), static_cast<void (QLabel::*)(const QString &)>(&QLabel::linkActivated), static_cast<MyQLabel*>(ptr), static_cast<void (MyQLabel::*)(const QString &)>(&MyQLabel::Signal_LinkActivated), static_cast<Qt::ConnectionType>(t));
}

void QLabel_DisconnectLinkActivated(void* ptr)
{
	QObject::disconnect(static_cast<QLabel*>(ptr), static_cast<void (QLabel::*)(const QString &)>(&QLabel::linkActivated), static_cast<MyQLabel*>(ptr), static_cast<void (MyQLabel::*)(const QString &)>(&MyQLabel::Signal_LinkActivated));
}

void QLabel_LinkActivated(void* ptr, struct QtWidgets_PackedString link)
{
	static_cast<QLabel*>(ptr)->linkActivated(QString::fromUtf8(link.data, link.len));
}

void QLabel_ConnectLinkHovered(void* ptr, long long t)
{
	QObject::connect(static_cast<QLabel*>(ptr), static_cast<void (QLabel::*)(const QString &)>(&QLabel::linkHovered), static_cast<MyQLabel*>(ptr), static_cast<void (MyQLabel::*)(const QString &)>(&MyQLabel::Signal_LinkHovered), static_cast<Qt::ConnectionType>(t));
}

void QLabel_DisconnectLinkHovered(void* ptr)
{
	QObject::disconnect(static_cast<QLabel*>(ptr), static_cast<void (QLabel::*)(const QString &)>(&QLabel::linkHovered), static_cast<MyQLabel*>(ptr), static_cast<void (MyQLabel::*)(const QString &)>(&MyQLabel::Signal_LinkHovered));
}

void QLabel_LinkHovered(void* ptr, struct QtWidgets_PackedString link)
{
	static_cast<QLabel*>(ptr)->linkHovered(QString::fromUtf8(link.data, link.len));
}

void QLabel_SetAlignment(void* ptr, long long vqt)
{
	static_cast<QLabel*>(ptr)->setAlignment(static_cast<Qt::AlignmentFlag>(vqt));
}

void QLabel_SetBuddy(void* ptr, void* buddy)
{
		static_cast<QLabel*>(ptr)->setBuddy(static_cast<QWidget*>(buddy));
}

void QLabel_SetIndent(void* ptr, int vin)
{
	static_cast<QLabel*>(ptr)->setIndent(vin);
}

void QLabel_SetMargin(void* ptr, int vin)
{
	static_cast<QLabel*>(ptr)->setMargin(vin);
}

void QLabel_SetMovie(void* ptr, void* movie)
{
	QMetaObject::invokeMethod(static_cast<QLabel*>(ptr), "setMovie", Q_ARG(QMovie*, static_cast<QMovie*>(movie)));
}

void QLabel_SetMovieDefault(void* ptr, void* movie)
{
		static_cast<QLabel*>(ptr)->QLabel::setMovie(static_cast<QMovie*>(movie));
}

void QLabel_SetNum2(void* ptr, double num)
{
	QMetaObject::invokeMethod(static_cast<QLabel*>(ptr), "setNum", Q_ARG(double, num));
}

void QLabel_SetNum2Default(void* ptr, double num)
{
		static_cast<QLabel*>(ptr)->QLabel::setNum(num);
}

void QLabel_SetNum(void* ptr, int num)
{
	QMetaObject::invokeMethod(static_cast<QLabel*>(ptr), "setNum", Q_ARG(int, num));
}

void QLabel_SetNumDefault(void* ptr, int num)
{
		static_cast<QLabel*>(ptr)->QLabel::setNum(num);
}

void QLabel_SetOpenExternalLinks(void* ptr, char open)
{
	static_cast<QLabel*>(ptr)->setOpenExternalLinks(open != 0);
}

void QLabel_SetPicture(void* ptr, void* picture)
{
	QMetaObject::invokeMethod(static_cast<QLabel*>(ptr), "setPicture", Q_ARG(const QPicture, *static_cast<QPicture*>(picture)));
}

void QLabel_SetPictureDefault(void* ptr, void* picture)
{
		static_cast<QLabel*>(ptr)->QLabel::setPicture(*static_cast<QPicture*>(picture));
}

void QLabel_SetPixmap(void* ptr, void* vqp)
{
	QMetaObject::invokeMethod(static_cast<QLabel*>(ptr), "setPixmap", Q_ARG(const QPixmap, *static_cast<QPixmap*>(vqp)));
}

void QLabel_SetPixmapDefault(void* ptr, void* vqp)
{
		static_cast<QLabel*>(ptr)->QLabel::setPixmap(*static_cast<QPixmap*>(vqp));
}

void QLabel_SetScaledContents(void* ptr, char vbo)
{
	static_cast<QLabel*>(ptr)->setScaledContents(vbo != 0);
}

void QLabel_SetSelection(void* ptr, int start, int length)
{
	static_cast<QLabel*>(ptr)->setSelection(start, length);
}

void QLabel_SetText(void* ptr, struct QtWidgets_PackedString vqs)
{
	QMetaObject::invokeMethod(static_cast<QLabel*>(ptr), "setText", Q_ARG(const QString, QString::fromUtf8(vqs.data, vqs.len)));
}

void QLabel_SetTextDefault(void* ptr, struct QtWidgets_PackedString vqs)
{
		static_cast<QLabel*>(ptr)->QLabel::setText(QString::fromUtf8(vqs.data, vqs.len));
}

void QLabel_SetTextFormat(void* ptr, long long vqt)
{
	static_cast<QLabel*>(ptr)->setTextFormat(static_cast<Qt::TextFormat>(vqt));
}

void QLabel_SetTextInteractionFlags(void* ptr, long long flags)
{
	static_cast<QLabel*>(ptr)->setTextInteractionFlags(static_cast<Qt::TextInteractionFlag>(flags));
}

void QLabel_SetWordWrap(void* ptr, char on)
{
	static_cast<QLabel*>(ptr)->setWordWrap(on != 0);
}

void QLabel_DestroyQLabel(void* ptr)
{
	static_cast<QLabel*>(ptr)->~QLabel();
}

void QLabel_DestroyQLabelDefault(void* ptr)
{
	Q_UNUSED(ptr);

}

void* QLabel_Movie(void* ptr)
{
	return static_cast<QLabel*>(ptr)->movie();
}

struct QtWidgets_PackedString QLabel_SelectedText(void* ptr)
{
	return ({ QByteArray t8b2afb = static_cast<QLabel*>(ptr)->selectedText().toUtf8(); QtWidgets_PackedString { const_cast<char*>(t8b2afb.prepend("WHITESPACE").constData()+10), t8b2afb.size()-10 }; });
}

struct QtWidgets_PackedString QLabel_Text(void* ptr)
{
	return ({ QByteArray t0d779d = static_cast<QLabel*>(ptr)->text().toUtf8(); QtWidgets_PackedString { const_cast<char*>(t0d779d.prepend("WHITESPACE").constData()+10), t0d779d.size()-10 }; });
}

void* QLabel_Buddy(void* ptr)
{
	return static_cast<QLabel*>(ptr)->buddy();
}

long long QLabel_Alignment(void* ptr)
{
	return static_cast<QLabel*>(ptr)->alignment();
}

long long QLabel_TextFormat(void* ptr)
{
	return static_cast<QLabel*>(ptr)->textFormat();
}

long long QLabel_TextInteractionFlags(void* ptr)
{
	return static_cast<QLabel*>(ptr)->textInteractionFlags();
}

char QLabel_HasScaledContents(void* ptr)
{
	return static_cast<QLabel*>(ptr)->hasScaledContents();
}

char QLabel_HasSelectedText(void* ptr)
{
	return static_cast<QLabel*>(ptr)->hasSelectedText();
}

char QLabel_OpenExternalLinks(void* ptr)
{
	return static_cast<QLabel*>(ptr)->openExternalLinks();
}

char QLabel_WordWrap(void* ptr)
{
	return static_cast<QLabel*>(ptr)->wordWrap();
}

void* QLabel_Picture(void* ptr)
{
	return const_cast<QPicture*>(static_cast<QLabel*>(ptr)->picture());
}

void* QLabel_Pixmap(void* ptr)
{
	return const_cast<QPixmap*>(static_cast<QLabel*>(ptr)->pixmap());
}

int QLabel_Indent(void* ptr)
{
	return static_cast<QLabel*>(ptr)->indent();
}

int QLabel_Margin(void* ptr)
{
	return static_cast<QLabel*>(ptr)->margin();
}

int QLabel_SelectionStart(void* ptr)
{
	return static_cast<QLabel*>(ptr)->selectionStart();
}

class MyQLayout: public QLayout
{
public:
	MyQLayout() : QLayout() {QLayout_QLayout_QRegisterMetaType();};
	MyQLayout(QWidget *parent) : QLayout(parent) {QLayout_QLayout_QRegisterMetaType();};
	QLayout * layout() { return static_cast<QLayout*>(callbackQLayoutItem_Layout(this)); };
	QLayoutItem * takeAt(int index) { return static_cast<QLayoutItem*>(callbackQLayout_TakeAt(this, index)); };
	void addItem(QLayoutItem * item) { callbackQLayout_AddItem(this, item); };
	void childEvent(QChildEvent * e) { callbackQLayout_ChildEvent(this, e); };
	void invalidate() { callbackQLayoutItem_Invalidate(this); };
	void setGeometry(const QRect & r) { callbackQLayout_SetGeometry(this, const_cast<QRect*>(&r)); };
	QLayoutItem * itemAt(int index) const { return static_cast<QLayoutItem*>(callbackQLayout_ItemAt(const_cast<void*>(static_cast<const void*>(this)), index)); };
	QRect geometry() const { return *static_cast<QRect*>(callbackQLayout_Geometry(const_cast<void*>(static_cast<const void*>(this)))); };
	QSize maximumSize() const { return *static_cast<QSize*>(callbackQLayout_MaximumSize(const_cast<void*>(static_cast<const void*>(this)))); };
	QSize minimumSize() const { return *static_cast<QSize*>(callbackQLayout_MinimumSize(const_cast<void*>(static_cast<const void*>(this)))); };
	QSizePolicy::ControlTypes controlTypes() const { return static_cast<QSizePolicy::ControlType>(callbackQLayoutItem_ControlTypes(const_cast<void*>(static_cast<const void*>(this)))); };
	Qt::Orientations expandingDirections() const { return static_cast<Qt::Orientation>(callbackQLayout_ExpandingDirections(const_cast<void*>(static_cast<const void*>(this)))); };
	bool isEmpty() const { return callbackQLayout_IsEmpty(const_cast<void*>(static_cast<const void*>(this))) != 0; };
	const QMetaObject * metaObject() const { return static_cast<QMetaObject*>(callbackQLayout_MetaObject(const_cast<void*>(static_cast<const void*>(this)))); };
	int count() const { return callbackQLayout_Count(const_cast<void*>(static_cast<const void*>(this))); };
	int indexOf(QWidget * widget) const { return callbackQLayout_IndexOf(const_cast<void*>(static_cast<const void*>(this)), widget); };
	bool event(QEvent * e) { return callbackQLayout_Event(this, e) != 0; };
	bool eventFilter(QObject * watched, QEvent * event) { return callbackQLayout_EventFilter(this, watched, event) != 0; };
	void connectNotify(const QMetaMethod & sign) { callbackQLayout_ConnectNotify(this, const_cast<QMetaMethod*>(&sign)); };
	void customEvent(QEvent * event) { callbackQLayout_CustomEvent(this, event); };
	void deleteLater() { callbackQLayout_DeleteLater(this); };
	void Signal_Destroyed(QObject * obj) { callbackQLayout_Destroyed(this, obj); };
	void disconnectNotify(const QMetaMethod & sign) { callbackQLayout_DisconnectNotify(this, const_cast<QMetaMethod*>(&sign)); };
	void Signal_ObjectNameChanged(const QString & objectName) { QByteArray taa2c4f = objectName.toUtf8(); QtWidgets_PackedString objectNamePacked = { const_cast<char*>(taa2c4f.prepend("WHITESPACE").constData()+10), taa2c4f.size()-10 };callbackQLayout_ObjectNameChanged(this, objectNamePacked); };
	void timerEvent(QTimerEvent * event) { callbackQLayout_TimerEvent(this, event); };
	QSpacerItem * spacerItem() { return static_cast<QSpacerItem*>(callbackQLayoutItem_SpacerItem(this)); };
	QWidget * widget() { return static_cast<QWidget*>(callbackQLayoutItem_Widget(this)); };
	QSize sizeHint() const { return *static_cast<QSize*>(callbackQLayout_SizeHint(const_cast<void*>(static_cast<const void*>(this)))); };
	bool hasHeightForWidth() const { return callbackQLayoutItem_HasHeightForWidth(const_cast<void*>(static_cast<const void*>(this))) != 0; };
	int heightForWidth(int vin) const { return callbackQLayoutItem_HeightForWidth(const_cast<void*>(static_cast<const void*>(this)), vin); };
	int minimumHeightForWidth(int w) const { return callbackQLayoutItem_MinimumHeightForWidth(const_cast<void*>(static_cast<const void*>(this)), w); };
};

Q_DECLARE_METATYPE(QLayout*)
Q_DECLARE_METATYPE(MyQLayout*)

int QLayout_QLayout_QRegisterMetaType(){qRegisterMetaType<QLayout*>(); return qRegisterMetaType<MyQLayout*>();}

void* QLayout_NewQLayout2()
{
	return new MyQLayout();
}

void* QLayout_NewQLayout(void* parent)
{
	return new MyQLayout(static_cast<QWidget*>(parent));
}

void* QLayout_ReplaceWidget(void* ptr, void* from, void* to, long long options)
{
		return static_cast<QLayout*>(ptr)->replaceWidget(static_cast<QWidget*>(from), static_cast<QWidget*>(to), static_cast<Qt::FindChildOption>(options));
}

void* QLayout_TakeAt(void* ptr, int index)
{
		return static_cast<QLayout*>(ptr)->takeAt(index);
}

void* QLayout_QLayout_ClosestAcceptableSize(void* widget, void* size)
{
		return ({ QSize tmpValue = QLayout::closestAcceptableSize(static_cast<QWidget*>(widget), *static_cast<QSize*>(size)); new QSize(tmpValue.width(), tmpValue.height()); });
}

struct QtWidgets_PackedString QLayout_QLayout_Tr(char* s, char* c, int n)
{
		return ({ QByteArray t4ed57d = QLayout::tr(const_cast<const char*>(s), const_cast<const char*>(c), n).toUtf8(); QtWidgets_PackedString { const_cast<char*>(t4ed57d.prepend("WHITESPACE").constData()+10), t4ed57d.size()-10 }; });
}

char QLayout_Activate(void* ptr)
{
		return static_cast<QLayout*>(ptr)->activate();
}

char QLayout_SetAlignment2(void* ptr, void* l, long long alignment)
{
		return static_cast<QLayout*>(ptr)->setAlignment(static_cast<QLayout*>(l), static_cast<Qt::AlignmentFlag>(alignment));
}

char QLayout_SetAlignment(void* ptr, void* w, long long alignment)
{
		return static_cast<QLayout*>(ptr)->setAlignment(static_cast<QWidget*>(w), static_cast<Qt::AlignmentFlag>(alignment));
}

void QLayout_AddChildLayout(void* ptr, void* l)
{
		static_cast<QLayout*>(ptr)->addChildLayout(static_cast<QLayout*>(l));
}

void QLayout_AddChildWidget(void* ptr, void* w)
{
		static_cast<QLayout*>(ptr)->addChildWidget(static_cast<QWidget*>(w));
}

void QLayout_AddItem(void* ptr, void* item)
{
	if (dynamic_cast<QLayout*>(static_cast<QObject*>(item))) {
		static_cast<QLayout*>(ptr)->addItem(static_cast<QLayout*>(item));
	} else {
		static_cast<QLayout*>(ptr)->addItem(static_cast<QLayoutItem*>(item));
	}
}

void QLayout_AddWidget(void* ptr, void* w)
{
		static_cast<QLayout*>(ptr)->addWidget(static_cast<QWidget*>(w));
}

void QLayout_ChildEvent(void* ptr, void* e)
{
		static_cast<QLayout*>(ptr)->childEvent(static_cast<QChildEvent*>(e));
}

void QLayout_ChildEventDefault(void* ptr, void* e)
{
		static_cast<QLayout*>(ptr)->QLayout::childEvent(static_cast<QChildEvent*>(e));
}

void QLayout_RemoveItem(void* ptr, void* item)
{
	if (dynamic_cast<QLayout*>(static_cast<QObject*>(item))) {
		static_cast<QLayout*>(ptr)->removeItem(static_cast<QLayout*>(item));
	} else {
		static_cast<QLayout*>(ptr)->removeItem(static_cast<QLayoutItem*>(item));
	}
}

void QLayout_RemoveWidget(void* ptr, void* widget)
{
		static_cast<QLayout*>(ptr)->removeWidget(static_cast<QWidget*>(widget));
}

void QLayout_SetContentsMargins2(void* ptr, void* margins)
{
		static_cast<QLayout*>(ptr)->setContentsMargins(*static_cast<QMargins*>(margins));
}

void QLayout_SetContentsMargins(void* ptr, int left, int top, int right, int bottom)
{
		static_cast<QLayout*>(ptr)->setContentsMargins(left, top, right, bottom);
}

void QLayout_SetEnabled(void* ptr, char enable)
{
		static_cast<QLayout*>(ptr)->setEnabled(enable != 0);
}

void QLayout_SetGeometry(void* ptr, void* r)
{
		static_cast<QLayout*>(ptr)->setGeometry(*static_cast<QRect*>(r));
}

void QLayout_SetGeometryDefault(void* ptr, void* r)
{
		static_cast<QLayout*>(ptr)->QLayout::setGeometry(*static_cast<QRect*>(r));
}

void QLayout_SetMenuBar(void* ptr, void* widget)
{
		static_cast<QLayout*>(ptr)->setMenuBar(static_cast<QWidget*>(widget));
}

void QLayout_SetSizeConstraint(void* ptr, long long vql)
{
		static_cast<QLayout*>(ptr)->setSizeConstraint(static_cast<QLayout::SizeConstraint>(vql));
}

void QLayout_SetSpacing(void* ptr, int vin)
{
		static_cast<QLayout*>(ptr)->setSpacing(vin);
}

void QLayout_Update(void* ptr)
{
		static_cast<QLayout*>(ptr)->update();
}

long long QLayout_SizeConstraint(void* ptr)
{
		return static_cast<QLayout*>(ptr)->sizeConstraint();
}

void* QLayout_ItemAt(void* ptr, int index)
{
		return static_cast<QLayout*>(ptr)->itemAt(index);
}

void* QLayout_ContentsMargins(void* ptr)
{
		return ({ QMargins tmpValue = static_cast<QLayout*>(ptr)->contentsMargins(); new QMargins(tmpValue.left(), tmpValue.top(), tmpValue.right(), tmpValue.bottom()); });
}

void* QLayout_AlignmentRect(void* ptr, void* r)
{
		return ({ QRect tmpValue = static_cast<QLayout*>(ptr)->alignmentRect(*static_cast<QRect*>(r)); new QRect(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QLayout_ContentsRect(void* ptr)
{
		return ({ QRect tmpValue = static_cast<QLayout*>(ptr)->contentsRect(); new QRect(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QLayout_Geometry(void* ptr)
{
		return ({ QRect tmpValue = static_cast<QLayout*>(ptr)->geometry(); new QRect(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QLayout_GeometryDefault(void* ptr)
{
		return ({ QRect tmpValue = static_cast<QLayout*>(ptr)->QLayout::geometry(); new QRect(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QLayout_MaximumSize(void* ptr)
{
		return ({ QSize tmpValue = static_cast<QLayout*>(ptr)->maximumSize(); new QSize(tmpValue.width(), tmpValue.height()); });
}

void* QLayout_MaximumSizeDefault(void* ptr)
{
		return ({ QSize tmpValue = static_cast<QLayout*>(ptr)->QLayout::maximumSize(); new QSize(tmpValue.width(), tmpValue.height()); });
}

void* QLayout_MinimumSize(void* ptr)
{
		return ({ QSize tmpValue = static_cast<QLayout*>(ptr)->minimumSize(); new QSize(tmpValue.width(), tmpValue.height()); });
}

void* QLayout_MinimumSizeDefault(void* ptr)
{
		return ({ QSize tmpValue = static_cast<QLayout*>(ptr)->QLayout::minimumSize(); new QSize(tmpValue.width(), tmpValue.height()); });
}

void* QLayout_MenuBar(void* ptr)
{
		return static_cast<QLayout*>(ptr)->menuBar();
}

void* QLayout_ParentWidget(void* ptr)
{
		return static_cast<QLayout*>(ptr)->parentWidget();
}

long long QLayout_ExpandingDirections(void* ptr)
{
		return static_cast<QLayout*>(ptr)->expandingDirections();
}

long long QLayout_ExpandingDirectionsDefault(void* ptr)
{
		return static_cast<QLayout*>(ptr)->QLayout::expandingDirections();
}

char QLayout_IsEmpty(void* ptr)
{
		return static_cast<QLayout*>(ptr)->isEmpty();
}

char QLayout_IsEmptyDefault(void* ptr)
{
		return static_cast<QLayout*>(ptr)->QLayout::isEmpty();
}

char QLayout_IsEnabled(void* ptr)
{
		return static_cast<QLayout*>(ptr)->isEnabled();
}

void* QLayout_MetaObject(void* ptr)
{
		return const_cast<QMetaObject*>(static_cast<QLayout*>(ptr)->metaObject());
}

void* QLayout_MetaObjectDefault(void* ptr)
{
		return const_cast<QMetaObject*>(static_cast<QLayout*>(ptr)->QLayout::metaObject());
}

int QLayout_Count(void* ptr)
{
		return static_cast<QLayout*>(ptr)->count();
}

int QLayout_IndexOf2(void* ptr, void* layoutItem)
{
	if (dynamic_cast<QLayout*>(static_cast<QObject*>(layoutItem))) {
		return static_cast<QLayout*>(ptr)->indexOf(static_cast<QLayout*>(layoutItem));
	} else {
		return static_cast<QLayout*>(ptr)->indexOf(static_cast<QLayoutItem*>(layoutItem));
	}
}

int QLayout_IndexOf(void* ptr, void* widget)
{
		return static_cast<QLayout*>(ptr)->indexOf(static_cast<QWidget*>(widget));
}

int QLayout_IndexOfDefault(void* ptr, void* widget)
{
		return static_cast<QLayout*>(ptr)->QLayout::indexOf(static_cast<QWidget*>(widget));
}

int QLayout_Spacing(void* ptr)
{
		return static_cast<QLayout*>(ptr)->spacing();
}

void QLayout_GetContentsMargins(void* ptr, int left, int top, int right, int bottom)
{
		static_cast<QLayout*>(ptr)->getContentsMargins(&left, &top, &right, &bottom);
}

void* QLayout___dynamicPropertyNames_atList(void* ptr, int i)
{
		return new QByteArray(({QByteArray tmp = static_cast<QList<QByteArray>*>(ptr)->at(i); if (i == static_cast<QList<QByteArray>*>(ptr)->size()-1) { static_cast<QList<QByteArray>*>(ptr)->~QList(); free(ptr); }; tmp; }));
}

void QLayout___dynamicPropertyNames_setList(void* ptr, void* i)
{
		static_cast<QList<QByteArray>*>(ptr)->append(*static_cast<QByteArray*>(i));
}

void* QLayout___dynamicPropertyNames_newList(void* ptr)
{
	Q_UNUSED(ptr);
		return new QList<QByteArray>();
}

void* QLayout___findChildren_atList2(void* ptr, int i)
{
		return ({QObject* tmp = static_cast<QList<QObject*>*>(ptr)->at(i); if (i == static_cast<QList<QObject*>*>(ptr)->size()-1) { static_cast<QList<QObject*>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QLayout___findChildren_setList2(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QLayout*>(i));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QWidget*>(i));
	} else {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QObject*>(i));
	}
}

void* QLayout___findChildren_newList2(void* ptr)
{
	Q_UNUSED(ptr);
		return new QList<QObject*>();
}

void* QLayout___findChildren_atList3(void* ptr, int i)
{
		return ({QObject* tmp = static_cast<QList<QObject*>*>(ptr)->at(i); if (i == static_cast<QList<QObject*>*>(ptr)->size()-1) { static_cast<QList<QObject*>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QLayout___findChildren_setList3(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QLayout*>(i));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QWidget*>(i));
	} else {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QObject*>(i));
	}
}

void* QLayout___findChildren_newList3(void* ptr)
{
	Q_UNUSED(ptr);
		return new QList<QObject*>();
}

void* QLayout___findChildren_atList(void* ptr, int i)
{
		return ({QObject* tmp = static_cast<QList<QObject*>*>(ptr)->at(i); if (i == static_cast<QList<QObject*>*>(ptr)->size()-1) { static_cast<QList<QObject*>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QLayout___findChildren_setList(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QLayout*>(i));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QWidget*>(i));
	} else {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QObject*>(i));
	}
}

void* QLayout___findChildren_newList(void* ptr)
{
	Q_UNUSED(ptr);
		return new QList<QObject*>();
}

void* QLayout___children_atList(void* ptr, int i)
{
		return ({QObject * tmp = static_cast<QList<QObject *>*>(ptr)->at(i); if (i == static_cast<QList<QObject *>*>(ptr)->size()-1) { static_cast<QList<QObject *>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QLayout___children_setList(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject *>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject *>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject *>*>(ptr)->append(static_cast<QLayout*>(i));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject *>*>(ptr)->append(static_cast<QWidget*>(i));
	} else {
		static_cast<QList<QObject *>*>(ptr)->append(static_cast<QObject*>(i));
	}
}

void* QLayout___children_newList(void* ptr)
{
	Q_UNUSED(ptr);
		return new QList<QObject *>();
}

char QLayout_Event(void* ptr, void* e)
{
		return static_cast<QLayout*>(ptr)->event(static_cast<QEvent*>(e));
}

char QLayout_EventDefault(void* ptr, void* e)
{
		return static_cast<QLayout*>(ptr)->QLayout::event(static_cast<QEvent*>(e));
}

char QLayout_EventFilter(void* ptr, void* watched, void* event)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(watched))) {
		return static_cast<QLayout*>(ptr)->eventFilter(static_cast<QGraphicsObject*>(watched), static_cast<QEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(watched))) {
		return static_cast<QLayout*>(ptr)->eventFilter(static_cast<QGraphicsWidget*>(watched), static_cast<QEvent*>(event));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(watched))) {
		return static_cast<QLayout*>(ptr)->eventFilter(static_cast<QLayout*>(watched), static_cast<QEvent*>(event));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(watched))) {
		return static_cast<QLayout*>(ptr)->eventFilter(static_cast<QWidget*>(watched), static_cast<QEvent*>(event));
	} else {
		return static_cast<QLayout*>(ptr)->eventFilter(static_cast<QObject*>(watched), static_cast<QEvent*>(event));
	}
}

char QLayout_EventFilterDefault(void* ptr, void* watched, void* event)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(watched))) {
		return static_cast<QLayout*>(ptr)->QLayout::eventFilter(static_cast<QGraphicsObject*>(watched), static_cast<QEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(watched))) {
		return static_cast<QLayout*>(ptr)->QLayout::eventFilter(static_cast<QGraphicsWidget*>(watched), static_cast<QEvent*>(event));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(watched))) {
		return static_cast<QLayout*>(ptr)->QLayout::eventFilter(static_cast<QLayout*>(watched), static_cast<QEvent*>(event));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(watched))) {
		return static_cast<QLayout*>(ptr)->QLayout::eventFilter(static_cast<QWidget*>(watched), static_cast<QEvent*>(event));
	} else {
		return static_cast<QLayout*>(ptr)->QLayout::eventFilter(static_cast<QObject*>(watched), static_cast<QEvent*>(event));
	}
}

void QLayout_ConnectNotify(void* ptr, void* sign)
{
		static_cast<QLayout*>(ptr)->connectNotify(*static_cast<QMetaMethod*>(sign));
}

void QLayout_ConnectNotifyDefault(void* ptr, void* sign)
{
		static_cast<QLayout*>(ptr)->QLayout::connectNotify(*static_cast<QMetaMethod*>(sign));
}

void QLayout_CustomEvent(void* ptr, void* event)
{
		static_cast<QLayout*>(ptr)->customEvent(static_cast<QEvent*>(event));
}

void QLayout_CustomEventDefault(void* ptr, void* event)
{
		static_cast<QLayout*>(ptr)->QLayout::customEvent(static_cast<QEvent*>(event));
}

void QLayout_DeleteLater(void* ptr)
{
		QMetaObject::invokeMethod(static_cast<QLayout*>(ptr), "deleteLater");
}

void QLayout_DeleteLaterDefault(void* ptr)
{
		static_cast<QLayout*>(ptr)->QLayout::deleteLater();
}

void QLayout_DisconnectNotify(void* ptr, void* sign)
{
		static_cast<QLayout*>(ptr)->disconnectNotify(*static_cast<QMetaMethod*>(sign));
}

void QLayout_DisconnectNotifyDefault(void* ptr, void* sign)
{
		static_cast<QLayout*>(ptr)->QLayout::disconnectNotify(*static_cast<QMetaMethod*>(sign));
}

void QLayout_TimerEvent(void* ptr, void* event)
{
		static_cast<QLayout*>(ptr)->timerEvent(static_cast<QTimerEvent*>(event));
}

void QLayout_TimerEventDefault(void* ptr, void* event)
{
		static_cast<QLayout*>(ptr)->QLayout::timerEvent(static_cast<QTimerEvent*>(event));
}

void* QLayout_SizeHint(void* ptr)
{
	Q_UNUSED(ptr);
	
}

void* QLayout_SizeHintDefault(void* ptr)
{
	Q_UNUSED(ptr);
	
}

class MyQLayoutItem: public QLayoutItem
{
public:
	MyQLayoutItem(Qt::Alignment alignment = Qt::Alignment()) : QLayoutItem(alignment) {QLayoutItem_QLayoutItem_QRegisterMetaType();};
	QLayout * layout() { return static_cast<QLayout*>(callbackQLayoutItem_Layout(this)); };
	QSpacerItem * spacerItem() { return static_cast<QSpacerItem*>(callbackQLayoutItem_SpacerItem(this)); };
	QWidget * widget() { return static_cast<QWidget*>(callbackQLayoutItem_Widget(this)); };
	void invalidate() { callbackQLayoutItem_Invalidate(this); };
	void setGeometry(const QRect & r) { callbackQLayoutItem_SetGeometry(this, const_cast<QRect*>(&r)); };
	 ~MyQLayoutItem() { callbackQLayoutItem_DestroyQLayoutItem(this); };
	QRect geometry() const { return *static_cast<QRect*>(callbackQLayoutItem_Geometry(const_cast<void*>(static_cast<const void*>(this)))); };
	QSize maximumSize() const { return *static_cast<QSize*>(callbackQLayoutItem_MaximumSize(const_cast<void*>(static_cast<const void*>(this)))); };
	QSize minimumSize() const { return *static_cast<QSize*>(callbackQLayoutItem_MinimumSize(const_cast<void*>(static_cast<const void*>(this)))); };
	QSize sizeHint() const { return *static_cast<QSize*>(callbackQLayoutItem_SizeHint(const_cast<void*>(static_cast<const void*>(this)))); };
	QSizePolicy::ControlTypes controlTypes() const { return static_cast<QSizePolicy::ControlType>(callbackQLayoutItem_ControlTypes(const_cast<void*>(static_cast<const void*>(this)))); };
	Qt::Orientations expandingDirections() const { return static_cast<Qt::Orientation>(callbackQLayoutItem_ExpandingDirections(const_cast<void*>(static_cast<const void*>(this)))); };
	bool hasHeightForWidth() const { return callbackQLayoutItem_HasHeightForWidth(const_cast<void*>(static_cast<const void*>(this))) != 0; };
	bool isEmpty() const { return callbackQLayoutItem_IsEmpty(const_cast<void*>(static_cast<const void*>(this))) != 0; };
	int heightForWidth(int vin) const { return callbackQLayoutItem_HeightForWidth(const_cast<void*>(static_cast<const void*>(this)), vin); };
	int minimumHeightForWidth(int w) const { return callbackQLayoutItem_MinimumHeightForWidth(const_cast<void*>(static_cast<const void*>(this)), w); };
};

Q_DECLARE_METATYPE(QLayoutItem*)
Q_DECLARE_METATYPE(MyQLayoutItem*)

int QLayoutItem_QLayoutItem_QRegisterMetaType(){qRegisterMetaType<QLayoutItem*>(); return qRegisterMetaType<MyQLayoutItem*>();}

void* QLayoutItem_Layout(void* ptr)
{
	if (dynamic_cast<QLayout*>(static_cast<QObject*>(ptr))) {
		return static_cast<QLayout*>(ptr)->layout();
	} else {
		return static_cast<QLayoutItem*>(ptr)->layout();
	}
}

void* QLayoutItem_LayoutDefault(void* ptr)
{
	if (dynamic_cast<QSpacerItem*>(static_cast<QLayoutItem*>(ptr))) {
		return static_cast<QSpacerItem*>(ptr)->QSpacerItem::layout();
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(ptr))) {
		return static_cast<QLayout*>(ptr)->QLayout::layout();
	} else {
		return static_cast<QLayoutItem*>(ptr)->QLayoutItem::layout();
	}
}

void* QLayoutItem_NewQLayoutItem(long long alignment)
{
	return new MyQLayoutItem(static_cast<Qt::AlignmentFlag>(alignment));
}

void* QLayoutItem_SpacerItem(void* ptr)
{
	if (dynamic_cast<QLayout*>(static_cast<QObject*>(ptr))) {
		return static_cast<QLayout*>(ptr)->spacerItem();
	} else {
		return static_cast<QLayoutItem*>(ptr)->spacerItem();
	}
}

void* QLayoutItem_SpacerItemDefault(void* ptr)
{
	if (dynamic_cast<QSpacerItem*>(static_cast<QLayoutItem*>(ptr))) {
		return static_cast<QSpacerItem*>(ptr)->QSpacerItem::spacerItem();
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(ptr))) {
		return static_cast<QLayout*>(ptr)->QLayout::spacerItem();
	} else {
		return static_cast<QLayoutItem*>(ptr)->QLayoutItem::spacerItem();
	}
}

void* QLayoutItem_Widget(void* ptr)
{
	if (dynamic_cast<QLayout*>(static_cast<QObject*>(ptr))) {
		return static_cast<QLayout*>(ptr)->widget();
	} else {
		return static_cast<QLayoutItem*>(ptr)->widget();
	}
}

void* QLayoutItem_WidgetDefault(void* ptr)
{
	if (dynamic_cast<QSpacerItem*>(static_cast<QLayoutItem*>(ptr))) {
		return static_cast<QSpacerItem*>(ptr)->QSpacerItem::widget();
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(ptr))) {
		return static_cast<QLayout*>(ptr)->QLayout::widget();
	} else {
		return static_cast<QLayoutItem*>(ptr)->QLayoutItem::widget();
	}
}

void QLayoutItem_Invalidate(void* ptr)
{
	if (dynamic_cast<QLayout*>(static_cast<QObject*>(ptr))) {
		static_cast<QLayout*>(ptr)->invalidate();
	} else {
		static_cast<QLayoutItem*>(ptr)->invalidate();
	}
}

void QLayoutItem_InvalidateDefault(void* ptr)
{
	if (dynamic_cast<QSpacerItem*>(static_cast<QLayoutItem*>(ptr))) {
		static_cast<QSpacerItem*>(ptr)->QSpacerItem::invalidate();
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(ptr))) {
		static_cast<QLayout*>(ptr)->QLayout::invalidate();
	} else {
		static_cast<QLayoutItem*>(ptr)->QLayoutItem::invalidate();
	}
}

void QLayoutItem_SetAlignment(void* ptr, long long alignment)
{
	if (dynamic_cast<QLayout*>(static_cast<QObject*>(ptr))) {
		static_cast<QLayout*>(ptr)->setAlignment(static_cast<Qt::AlignmentFlag>(alignment));
	} else {
		static_cast<QLayoutItem*>(ptr)->setAlignment(static_cast<Qt::AlignmentFlag>(alignment));
	}
}

void QLayoutItem_SetGeometry(void* ptr, void* r)
{
	if (dynamic_cast<QLayout*>(static_cast<QObject*>(ptr))) {
		static_cast<QLayout*>(ptr)->setGeometry(*static_cast<QRect*>(r));
	} else {
		static_cast<QLayoutItem*>(ptr)->setGeometry(*static_cast<QRect*>(r));
	}
}

void QLayoutItem_DestroyQLayoutItem(void* ptr)
{
	static_cast<QLayoutItem*>(ptr)->~QLayoutItem();
}

void QLayoutItem_DestroyQLayoutItemDefault(void* ptr)
{
	Q_UNUSED(ptr);

}

void* QLayoutItem_Geometry(void* ptr)
{
	if (dynamic_cast<QLayout*>(static_cast<QObject*>(ptr))) {
		return ({ QRect tmpValue = static_cast<QLayout*>(ptr)->geometry(); new QRect(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	} else {
		return ({ QRect tmpValue = static_cast<QLayoutItem*>(ptr)->geometry(); new QRect(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
	}
}

void* QLayoutItem_MaximumSize(void* ptr)
{
	if (dynamic_cast<QLayout*>(static_cast<QObject*>(ptr))) {
		return ({ QSize tmpValue = static_cast<QLayout*>(ptr)->maximumSize(); new QSize(tmpValue.width(), tmpValue.height()); });
	} else {
		return ({ QSize tmpValue = static_cast<QLayoutItem*>(ptr)->maximumSize(); new QSize(tmpValue.width(), tmpValue.height()); });
	}
}

void* QLayoutItem_MinimumSize(void* ptr)
{
	if (dynamic_cast<QLayout*>(static_cast<QObject*>(ptr))) {
		return ({ QSize tmpValue = static_cast<QLayout*>(ptr)->minimumSize(); new QSize(tmpValue.width(), tmpValue.height()); });
	} else {
		return ({ QSize tmpValue = static_cast<QLayoutItem*>(ptr)->minimumSize(); new QSize(tmpValue.width(), tmpValue.height()); });
	}
}

void* QLayoutItem_SizeHint(void* ptr)
{
	if (dynamic_cast<QLayout*>(static_cast<QObject*>(ptr))) {
		return ({ QSize tmpValue = static_cast<QLayout*>(ptr)->sizeHint(); new QSize(tmpValue.width(), tmpValue.height()); });
	} else {
		return ({ QSize tmpValue = static_cast<QLayoutItem*>(ptr)->sizeHint(); new QSize(tmpValue.width(), tmpValue.height()); });
	}
}

long long QLayoutItem_ControlTypes(void* ptr)
{
	if (dynamic_cast<QLayout*>(static_cast<QObject*>(ptr))) {
		return static_cast<QLayout*>(ptr)->controlTypes();
	} else {
		return static_cast<QLayoutItem*>(ptr)->controlTypes();
	}
}

long long QLayoutItem_ControlTypesDefault(void* ptr)
{
	if (dynamic_cast<QSpacerItem*>(static_cast<QLayoutItem*>(ptr))) {
		return static_cast<QSpacerItem*>(ptr)->QSpacerItem::controlTypes();
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(ptr))) {
		return static_cast<QLayout*>(ptr)->QLayout::controlTypes();
	} else {
		return static_cast<QLayoutItem*>(ptr)->QLayoutItem::controlTypes();
	}
}

long long QLayoutItem_Alignment(void* ptr)
{
	if (dynamic_cast<QLayout*>(static_cast<QObject*>(ptr))) {
		return static_cast<QLayout*>(ptr)->alignment();
	} else {
		return static_cast<QLayoutItem*>(ptr)->alignment();
	}
}

long long QLayoutItem_ExpandingDirections(void* ptr)
{
	if (dynamic_cast<QLayout*>(static_cast<QObject*>(ptr))) {
		return static_cast<QLayout*>(ptr)->expandingDirections();
	} else {
		return static_cast<QLayoutItem*>(ptr)->expandingDirections();
	}
}

char QLayoutItem_HasHeightForWidth(void* ptr)
{
	if (dynamic_cast<QLayout*>(static_cast<QObject*>(ptr))) {
		return static_cast<QLayout*>(ptr)->hasHeightForWidth();
	} else {
		return static_cast<QLayoutItem*>(ptr)->hasHeightForWidth();
	}
}

char QLayoutItem_HasHeightForWidthDefault(void* ptr)
{
	if (dynamic_cast<QSpacerItem*>(static_cast<QLayoutItem*>(ptr))) {
		return static_cast<QSpacerItem*>(ptr)->QSpacerItem::hasHeightForWidth();
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(ptr))) {
		return static_cast<QLayout*>(ptr)->QLayout::hasHeightForWidth();
	} else {
		return static_cast<QLayoutItem*>(ptr)->QLayoutItem::hasHeightForWidth();
	}
}

char QLayoutItem_IsEmpty(void* ptr)
{
	if (dynamic_cast<QLayout*>(static_cast<QObject*>(ptr))) {
		return static_cast<QLayout*>(ptr)->isEmpty();
	} else {
		return static_cast<QLayoutItem*>(ptr)->isEmpty();
	}
}

int QLayoutItem_HeightForWidth(void* ptr, int vin)
{
	if (dynamic_cast<QLayout*>(static_cast<QObject*>(ptr))) {
		return static_cast<QLayout*>(ptr)->heightForWidth(vin);
	} else {
		return static_cast<QLayoutItem*>(ptr)->heightForWidth(vin);
	}
}

int QLayoutItem_HeightForWidthDefault(void* ptr, int vin)
{
	if (dynamic_cast<QSpacerItem*>(static_cast<QLayoutItem*>(ptr))) {
		return static_cast<QSpacerItem*>(ptr)->QSpacerItem::heightForWidth(vin);
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(ptr))) {
		return static_cast<QLayout*>(ptr)->QLayout::heightForWidth(vin);
	} else {
		return static_cast<QLayoutItem*>(ptr)->QLayoutItem::heightForWidth(vin);
	}
}

int QLayoutItem_MinimumHeightForWidth(void* ptr, int w)
{
	if (dynamic_cast<QLayout*>(static_cast<QObject*>(ptr))) {
		return static_cast<QLayout*>(ptr)->minimumHeightForWidth(w);
	} else {
		return static_cast<QLayoutItem*>(ptr)->minimumHeightForWidth(w);
	}
}

int QLayoutItem_MinimumHeightForWidthDefault(void* ptr, int w)
{
	if (dynamic_cast<QSpacerItem*>(static_cast<QLayoutItem*>(ptr))) {
		return static_cast<QSpacerItem*>(ptr)->QSpacerItem::minimumHeightForWidth(w);
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(ptr))) {
		return static_cast<QLayout*>(ptr)->QLayout::minimumHeightForWidth(w);
	} else {
		return static_cast<QLayoutItem*>(ptr)->QLayoutItem::minimumHeightForWidth(w);
	}
}

long long QLayoutItem_Align(void* ptr)
{
	if (dynamic_cast<QLayout*>(static_cast<QObject*>(ptr))) {
		return static_cast<QLayout*>(ptr)->align;
	} else {
		return static_cast<QLayoutItem*>(ptr)->align;
	}
}

void QLayoutItem_SetAlign(void* ptr, long long vqt)
{
	if (dynamic_cast<QLayout*>(static_cast<QObject*>(ptr))) {
		static_cast<QLayout*>(ptr)->align = static_cast<Qt::AlignmentFlag>(vqt);
	} else {
		static_cast<QLayoutItem*>(ptr)->align = static_cast<Qt::AlignmentFlag>(vqt);
	}
}

class MyQMenu: public QMenu
{
public:
	MyQMenu(QWidget *parent = Q_NULLPTR) : QMenu(parent) {QMenu_QMenu_QRegisterMetaType();};
	MyQMenu(const QString &title, QWidget *parent = Q_NULLPTR) : QMenu(title, parent) {QMenu_QMenu_QRegisterMetaType();};
	bool event(QEvent * e) { return callbackQWidget_Event(this, e) != 0; };
	bool focusNextPrevChild(bool next) { return callbackQWidget_FocusNextPrevChild(this, next) != 0; };
	void Signal_AboutToHide() { callbackQMenu_AboutToHide(this); };
	void Signal_AboutToShow() { callbackQMenu_AboutToShow(this); };
	void actionEvent(QActionEvent * e) { callbackQWidget_ActionEvent(this, e); };
	void changeEvent(QEvent * e) { callbackQWidget_ChangeEvent(this, e); };
	void enterEvent(QEvent * vqe) { callbackQWidget_EnterEvent(this, vqe); };
	void hideEvent(QHideEvent * vqh) { callbackQWidget_HideEvent(this, vqh); };
	void Signal_Hovered(QAction * action) { callbackQMenu_Hovered(this, action); };
	void keyPressEvent(QKeyEvent * e) { callbackQWidget_KeyPressEvent(this, e); };
	void leaveEvent(QEvent * vqe) { callbackQWidget_LeaveEvent(this, vqe); };
	void mouseMoveEvent(QMouseEvent * e) { callbackQWidget_MouseMoveEvent(this, e); };
	void mousePressEvent(QMouseEvent * e) { callbackQWidget_MousePressEvent(this, e); };
	void mouseReleaseEvent(QMouseEvent * e) { callbackQWidget_MouseReleaseEvent(this, e); };
	void paintEvent(QPaintEvent * e) { callbackQWidget_PaintEvent(this, e); };
	void timerEvent(QTimerEvent * e) { callbackQWidget_TimerEvent(this, e); };
	void Signal_Triggered(QAction * action) { callbackQMenu_Triggered(this, action); };
	void wheelEvent(QWheelEvent * e) { callbackQWidget_WheelEvent(this, e); };
	 ~MyQMenu() { callbackQMenu_DestroyQMenu(this); };
	QSize sizeHint() const { return *static_cast<QSize*>(callbackQWidget_SizeHint(const_cast<void*>(static_cast<const void*>(this)))); };
	const QMetaObject * metaObject() const { return static_cast<QMetaObject*>(callbackQWidget_MetaObject(const_cast<void*>(static_cast<const void*>(this)))); };
	bool close() { return callbackQWidget_Close(this) != 0; };
	bool nativeEvent(const QByteArray & eventType, void * message, long * result) { return callbackQWidget_NativeEvent(this, const_cast<QByteArray*>(&eventType), message, result) != 0; };
	void closeEvent(QCloseEvent * event) { callbackQWidget_CloseEvent(this, event); };
	void contextMenuEvent(QContextMenuEvent * event) { callbackQWidget_ContextMenuEvent(this, event); };
	void Signal_CustomContextMenuRequested(const QPoint & pos) { callbackQWidget_CustomContextMenuRequested(this, const_cast<QPoint*>(&pos)); };
	void dragEnterEvent(QDragEnterEvent * event) { callbackQWidget_DragEnterEvent(this, event); };
	void dragLeaveEvent(QDragLeaveEvent * event) { callbackQWidget_DragLeaveEvent(this, event); };
	void dragMoveEvent(QDragMoveEvent * event) { callbackQWidget_DragMoveEvent(this, event); };
	void dropEvent(QDropEvent * event) { callbackQWidget_DropEvent(this, event); };
	void focusInEvent(QFocusEvent * event) { callbackQWidget_FocusInEvent(this, event); };
	void focusOutEvent(QFocusEvent * event) { callbackQWidget_FocusOutEvent(this, event); };
	void hide() { callbackQWidget_Hide(this); };
	void inputMethodEvent(QInputMethodEvent * event) { callbackQWidget_InputMethodEvent(this, event); };
	void keyReleaseEvent(QKeyEvent * event) { callbackQWidget_KeyReleaseEvent(this, event); };
	void lower() { callbackQWidget_Lower(this); };
	void mouseDoubleClickEvent(QMouseEvent * event) { callbackQWidget_MouseDoubleClickEvent(this, event); };
	void moveEvent(QMoveEvent * event) { callbackQWidget_MoveEvent(this, event); };
	void raise() { callbackQWidget_Raise(this); };
	void repaint() { callbackQWidget_Repaint(this); };
	void resizeEvent(QResizeEvent * event) { callbackQWidget_ResizeEvent(this, event); };
	void setDisabled(bool disable) { callbackQWidget_SetDisabled(this, disable); };
	void setEnabled(bool vbo) { callbackQWidget_SetEnabled(this, vbo); };
	void setFocus() { callbackQWidget_SetFocus2(this); };
	void setHidden(bool hidden) { callbackQWidget_SetHidden(this, hidden); };
	void setStyleSheet(const QString & styleSheet) { QByteArray t728ae7 = styleSheet.toUtf8(); QtWidgets_PackedString styleSheetPacked = { const_cast<char*>(t728ae7.prepend("WHITESPACE").constData()+10), t728ae7.size()-10 };callbackQWidget_SetStyleSheet(this, styleSheetPacked); };
	void setVisible(bool visible) { callbackQWidget_SetVisible(this, visible); };
	void setWindowModified(bool vbo) { callbackQWidget_SetWindowModified(this, vbo); };
	void setWindowTitle(const QString & vqs) { QByteArray tda39a3 = vqs.toUtf8(); QtWidgets_PackedString vqsPacked = { const_cast<char*>(tda39a3.prepend("WHITESPACE").constData()+10), tda39a3.size()-10 };callbackQWidget_SetWindowTitle(this, vqsPacked); };
	void show() { callbackQWidget_Show(this); };
	void showEvent(QShowEvent * event) { callbackQWidget_ShowEvent(this, event); };
	void showFullScreen() { callbackQWidget_ShowFullScreen(this); };
	void showMaximized() { callbackQWidget_ShowMaximized(this); };
	void showMinimized() { callbackQWidget_ShowMinimized(this); };
	void showNormal() { callbackQWidget_ShowNormal(this); };
	void tabletEvent(QTabletEvent * event) { callbackQWidget_TabletEvent(this, event); };
	void update() { callbackQWidget_Update(this); };
	void updateMicroFocus() { callbackQWidget_UpdateMicroFocus(this); };
	void Signal_WindowIconChanged(const QIcon & icon) { callbackQWidget_WindowIconChanged(this, const_cast<QIcon*>(&icon)); };
	void Signal_WindowTitleChanged(const QString & title) { QByteArray t3c6de1 = title.toUtf8(); QtWidgets_PackedString titlePacked = { const_cast<char*>(t3c6de1.prepend("WHITESPACE").constData()+10), t3c6de1.size()-10 };callbackQWidget_WindowTitleChanged(this, titlePacked); };
	QPaintEngine * paintEngine() const { return static_cast<QPaintEngine*>(callbackQWidget_PaintEngine(const_cast<void*>(static_cast<const void*>(this)))); };
	QSize minimumSizeHint() const { return *static_cast<QSize*>(callbackQWidget_MinimumSizeHint(const_cast<void*>(static_cast<const void*>(this)))); };
	QVariant inputMethodQuery(Qt::InputMethodQuery query) const { return *static_cast<QVariant*>(callbackQWidget_InputMethodQuery(const_cast<void*>(static_cast<const void*>(this)), query)); };
	bool hasHeightForWidth() const { return callbackQWidget_HasHeightForWidth(const_cast<void*>(static_cast<const void*>(this))) != 0; };
	int heightForWidth(int w) const { return callbackQWidget_HeightForWidth(const_cast<void*>(static_cast<const void*>(this)), w); };
	int metric(QPaintDevice::PaintDeviceMetric m) const { return callbackQWidget_Metric(const_cast<void*>(static_cast<const void*>(this)), m); };
	void initPainter(QPainter * painter) const { callbackQWidget_InitPainter(const_cast<void*>(static_cast<const void*>(this)), painter); };
	bool eventFilter(QObject * watched, QEvent * event) { return callbackQWidget_EventFilter(this, watched, event) != 0; };
	void childEvent(QChildEvent * event) { callbackQWidget_ChildEvent(this, event); };
	void connectNotify(const QMetaMethod & sign) { callbackQWidget_ConnectNotify(this, const_cast<QMetaMethod*>(&sign)); };
	void customEvent(QEvent * event) { callbackQWidget_CustomEvent(this, event); };
	void deleteLater() { callbackQWidget_DeleteLater(this); };
	void Signal_Destroyed(QObject * obj) { callbackQWidget_Destroyed(this, obj); };
	void disconnectNotify(const QMetaMethod & sign) { callbackQWidget_DisconnectNotify(this, const_cast<QMetaMethod*>(&sign)); };
	void Signal_ObjectNameChanged(const QString & objectName) { QByteArray taa2c4f = objectName.toUtf8(); QtWidgets_PackedString objectNamePacked = { const_cast<char*>(taa2c4f.prepend("WHITESPACE").constData()+10), taa2c4f.size()-10 };callbackQWidget_ObjectNameChanged(this, objectNamePacked); };
};

Q_DECLARE_METATYPE(QMenu*)
Q_DECLARE_METATYPE(MyQMenu*)

int QMenu_QMenu_QRegisterMetaType(){qRegisterMetaType<QMenu*>(); return qRegisterMetaType<MyQMenu*>();}

void* QMenu_AddAction2(void* ptr, void* icon, struct QtWidgets_PackedString text)
{
	return static_cast<QMenu*>(ptr)->addAction(*static_cast<QIcon*>(icon), QString::fromUtf8(text.data, text.len));
}

void* QMenu_AddAction4(void* ptr, void* icon, struct QtWidgets_PackedString text, void* receiver, char* member, void* shortcut)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(receiver))) {
		return static_cast<QMenu*>(ptr)->addAction(*static_cast<QIcon*>(icon), QString::fromUtf8(text.data, text.len), static_cast<QGraphicsObject*>(receiver), const_cast<const char*>(member), *static_cast<QKeySequence*>(shortcut));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(receiver))) {
		return static_cast<QMenu*>(ptr)->addAction(*static_cast<QIcon*>(icon), QString::fromUtf8(text.data, text.len), static_cast<QGraphicsWidget*>(receiver), const_cast<const char*>(member), *static_cast<QKeySequence*>(shortcut));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(receiver))) {
		return static_cast<QMenu*>(ptr)->addAction(*static_cast<QIcon*>(icon), QString::fromUtf8(text.data, text.len), static_cast<QLayout*>(receiver), const_cast<const char*>(member), *static_cast<QKeySequence*>(shortcut));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(receiver))) {
		return static_cast<QMenu*>(ptr)->addAction(*static_cast<QIcon*>(icon), QString::fromUtf8(text.data, text.len), static_cast<QWidget*>(receiver), const_cast<const char*>(member), *static_cast<QKeySequence*>(shortcut));
	} else {
		return static_cast<QMenu*>(ptr)->addAction(*static_cast<QIcon*>(icon), QString::fromUtf8(text.data, text.len), static_cast<QObject*>(receiver), const_cast<const char*>(member), *static_cast<QKeySequence*>(shortcut));
	}
}

void* QMenu_AddAction(void* ptr, struct QtWidgets_PackedString text)
{
	return static_cast<QMenu*>(ptr)->addAction(QString::fromUtf8(text.data, text.len));
}

void* QMenu_AddAction3(void* ptr, struct QtWidgets_PackedString text, void* receiver, char* member, void* shortcut)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(receiver))) {
		return static_cast<QMenu*>(ptr)->addAction(QString::fromUtf8(text.data, text.len), static_cast<QGraphicsObject*>(receiver), const_cast<const char*>(member), *static_cast<QKeySequence*>(shortcut));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(receiver))) {
		return static_cast<QMenu*>(ptr)->addAction(QString::fromUtf8(text.data, text.len), static_cast<QGraphicsWidget*>(receiver), const_cast<const char*>(member), *static_cast<QKeySequence*>(shortcut));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(receiver))) {
		return static_cast<QMenu*>(ptr)->addAction(QString::fromUtf8(text.data, text.len), static_cast<QLayout*>(receiver), const_cast<const char*>(member), *static_cast<QKeySequence*>(shortcut));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(receiver))) {
		return static_cast<QMenu*>(ptr)->addAction(QString::fromUtf8(text.data, text.len), static_cast<QWidget*>(receiver), const_cast<const char*>(member), *static_cast<QKeySequence*>(shortcut));
	} else {
		return static_cast<QMenu*>(ptr)->addAction(QString::fromUtf8(text.data, text.len), static_cast<QObject*>(receiver), const_cast<const char*>(member), *static_cast<QKeySequence*>(shortcut));
	}
}

void* QMenu_AddMenu(void* ptr, void* menu)
{
	return static_cast<QMenu*>(ptr)->addMenu(static_cast<QMenu*>(menu));
}

void* QMenu_AddSection2(void* ptr, void* icon, struct QtWidgets_PackedString text)
{
	return static_cast<QMenu*>(ptr)->addSection(*static_cast<QIcon*>(icon), QString::fromUtf8(text.data, text.len));
}

void* QMenu_AddSection(void* ptr, struct QtWidgets_PackedString text)
{
	return static_cast<QMenu*>(ptr)->addSection(QString::fromUtf8(text.data, text.len));
}

void* QMenu_AddSeparator(void* ptr)
{
	return static_cast<QMenu*>(ptr)->addSeparator();
}

void* QMenu_Exec(void* ptr)
{
	return static_cast<QMenu*>(ptr)->exec();
}

void* QMenu_QMenu_Exec3(void* actions, void* pos, void* at, void* parent)
{
		return QMenu::exec(({ QList<QAction *>* tmpP = static_cast<QList<QAction *>*>(actions); QList<QAction *> tmpV = *tmpP; tmpP->~QList(); free(tmpP); tmpV; }), *static_cast<QPoint*>(pos), static_cast<QAction*>(at), static_cast<QWidget*>(parent));
}

void* QMenu_Exec2(void* ptr, void* p, void* action)
{
	return static_cast<QMenu*>(ptr)->exec(*static_cast<QPoint*>(p), static_cast<QAction*>(action));
}

void* QMenu_InsertMenu(void* ptr, void* before, void* menu)
{
	return static_cast<QMenu*>(ptr)->insertMenu(static_cast<QAction*>(before), static_cast<QMenu*>(menu));
}

void* QMenu_InsertSection2(void* ptr, void* before, void* icon, struct QtWidgets_PackedString text)
{
	return static_cast<QMenu*>(ptr)->insertSection(static_cast<QAction*>(before), *static_cast<QIcon*>(icon), QString::fromUtf8(text.data, text.len));
}

void* QMenu_InsertSection(void* ptr, void* before, struct QtWidgets_PackedString text)
{
	return static_cast<QMenu*>(ptr)->insertSection(static_cast<QAction*>(before), QString::fromUtf8(text.data, text.len));
}

void* QMenu_InsertSeparator(void* ptr, void* before)
{
	return static_cast<QMenu*>(ptr)->insertSeparator(static_cast<QAction*>(before));
}

void* QMenu_AddMenu3(void* ptr, void* icon, struct QtWidgets_PackedString title)
{
	return static_cast<QMenu*>(ptr)->addMenu(*static_cast<QIcon*>(icon), QString::fromUtf8(title.data, title.len));
}

void* QMenu_AddMenu2(void* ptr, struct QtWidgets_PackedString title)
{
	return static_cast<QMenu*>(ptr)->addMenu(QString::fromUtf8(title.data, title.len));
}

void* QMenu_NewQMenu(void* parent)
{
		return new MyQMenu(static_cast<QWidget*>(parent));
}

void* QMenu_NewQMenu2(struct QtWidgets_PackedString title, void* parent)
{
		return new MyQMenu(QString::fromUtf8(title.data, title.len), static_cast<QWidget*>(parent));
}

void QMenu_ConnectAboutToHide(void* ptr, long long t)
{
	QObject::connect(static_cast<QMenu*>(ptr), static_cast<void (QMenu::*)()>(&QMenu::aboutToHide), static_cast<MyQMenu*>(ptr), static_cast<void (MyQMenu::*)()>(&MyQMenu::Signal_AboutToHide), static_cast<Qt::ConnectionType>(t));
}

void QMenu_DisconnectAboutToHide(void* ptr)
{
	QObject::disconnect(static_cast<QMenu*>(ptr), static_cast<void (QMenu::*)()>(&QMenu::aboutToHide), static_cast<MyQMenu*>(ptr), static_cast<void (MyQMenu::*)()>(&MyQMenu::Signal_AboutToHide));
}

void QMenu_AboutToHide(void* ptr)
{
	static_cast<QMenu*>(ptr)->aboutToHide();
}

void QMenu_ConnectAboutToShow(void* ptr, long long t)
{
	QObject::connect(static_cast<QMenu*>(ptr), static_cast<void (QMenu::*)()>(&QMenu::aboutToShow), static_cast<MyQMenu*>(ptr), static_cast<void (MyQMenu::*)()>(&MyQMenu::Signal_AboutToShow), static_cast<Qt::ConnectionType>(t));
}

void QMenu_DisconnectAboutToShow(void* ptr)
{
	QObject::disconnect(static_cast<QMenu*>(ptr), static_cast<void (QMenu::*)()>(&QMenu::aboutToShow), static_cast<MyQMenu*>(ptr), static_cast<void (MyQMenu::*)()>(&MyQMenu::Signal_AboutToShow));
}

void QMenu_AboutToShow(void* ptr)
{
	static_cast<QMenu*>(ptr)->aboutToShow();
}

void QMenu_Clear(void* ptr)
{
	static_cast<QMenu*>(ptr)->clear();
}

void QMenu_HideTearOffMenu(void* ptr)
{
	static_cast<QMenu*>(ptr)->hideTearOffMenu();
}

void QMenu_ConnectHovered(void* ptr, long long t)
{
	QObject::connect(static_cast<QMenu*>(ptr), static_cast<void (QMenu::*)(QAction *)>(&QMenu::hovered), static_cast<MyQMenu*>(ptr), static_cast<void (MyQMenu::*)(QAction *)>(&MyQMenu::Signal_Hovered), static_cast<Qt::ConnectionType>(t));
}

void QMenu_DisconnectHovered(void* ptr)
{
	QObject::disconnect(static_cast<QMenu*>(ptr), static_cast<void (QMenu::*)(QAction *)>(&QMenu::hovered), static_cast<MyQMenu*>(ptr), static_cast<void (MyQMenu::*)(QAction *)>(&MyQMenu::Signal_Hovered));
}

void QMenu_Hovered(void* ptr, void* action)
{
	static_cast<QMenu*>(ptr)->hovered(static_cast<QAction*>(action));
}

void QMenu_Popup(void* ptr, void* p, void* atAction)
{
	static_cast<QMenu*>(ptr)->popup(*static_cast<QPoint*>(p), static_cast<QAction*>(atAction));
}

void QMenu_SetActiveAction(void* ptr, void* act)
{
	static_cast<QMenu*>(ptr)->setActiveAction(static_cast<QAction*>(act));
}

void QMenu_SetAsDockMenu(void* ptr)
{
#ifdef Q_OS_OSX
	static_cast<QMenu*>(ptr)->setAsDockMenu();
#endif
}

void QMenu_SetDefaultAction(void* ptr, void* act)
{
	static_cast<QMenu*>(ptr)->setDefaultAction(static_cast<QAction*>(act));
}

void QMenu_SetIcon(void* ptr, void* icon)
{
	static_cast<QMenu*>(ptr)->setIcon(*static_cast<QIcon*>(icon));
}

void QMenu_SetSeparatorsCollapsible(void* ptr, char collapse)
{
	static_cast<QMenu*>(ptr)->setSeparatorsCollapsible(collapse != 0);
}

void QMenu_SetTearOffEnabled(void* ptr, char vbo)
{
	static_cast<QMenu*>(ptr)->setTearOffEnabled(vbo != 0);
}

void QMenu_SetTitle(void* ptr, struct QtWidgets_PackedString title)
{
	static_cast<QMenu*>(ptr)->setTitle(QString::fromUtf8(title.data, title.len));
}

void QMenu_SetToolTipsVisible(void* ptr, char visible)
{
	static_cast<QMenu*>(ptr)->setToolTipsVisible(visible != 0);
}

void QMenu_ShowTearOffMenu2(void* ptr)
{
	static_cast<QMenu*>(ptr)->showTearOffMenu();
}

void QMenu_ShowTearOffMenu(void* ptr, void* pos)
{
	static_cast<QMenu*>(ptr)->showTearOffMenu(*static_cast<QPoint*>(pos));
}

void QMenu_ConnectTriggered(void* ptr, long long t)
{
	QObject::connect(static_cast<QMenu*>(ptr), static_cast<void (QMenu::*)(QAction *)>(&QMenu::triggered), static_cast<MyQMenu*>(ptr), static_cast<void (MyQMenu::*)(QAction *)>(&MyQMenu::Signal_Triggered), static_cast<Qt::ConnectionType>(t));
}

void QMenu_DisconnectTriggered(void* ptr)
{
	QObject::disconnect(static_cast<QMenu*>(ptr), static_cast<void (QMenu::*)(QAction *)>(&QMenu::triggered), static_cast<MyQMenu*>(ptr), static_cast<void (MyQMenu::*)(QAction *)>(&MyQMenu::Signal_Triggered));
}

void QMenu_Triggered(void* ptr, void* action)
{
	static_cast<QMenu*>(ptr)->triggered(static_cast<QAction*>(action));
}

void QMenu_DestroyQMenu(void* ptr)
{
	static_cast<QMenu*>(ptr)->~QMenu();
}

void QMenu_DestroyQMenuDefault(void* ptr)
{
	Q_UNUSED(ptr);

}

void* QMenu_ActionAt(void* ptr, void* pt)
{
	return static_cast<QMenu*>(ptr)->actionAt(*static_cast<QPoint*>(pt));
}

void* QMenu_ActiveAction(void* ptr)
{
	return static_cast<QMenu*>(ptr)->activeAction();
}

void* QMenu_DefaultAction(void* ptr)
{
	return static_cast<QMenu*>(ptr)->defaultAction();
}

void* QMenu_MenuAction(void* ptr)
{
	return static_cast<QMenu*>(ptr)->menuAction();
}

void* QMenu_Icon(void* ptr)
{
	return new QIcon(static_cast<QMenu*>(ptr)->icon());
}

void* QMenu_ActionGeometry(void* ptr, void* act)
{
	return ({ QRect tmpValue = static_cast<QMenu*>(ptr)->actionGeometry(static_cast<QAction*>(act)); new QRect(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

struct QtWidgets_PackedString QMenu_Title(void* ptr)
{
	return ({ QByteArray tbbbdf8 = static_cast<QMenu*>(ptr)->title().toUtf8(); QtWidgets_PackedString { const_cast<char*>(tbbbdf8.prepend("WHITESPACE").constData()+10), tbbbdf8.size()-10 }; });
}

char QMenu_IsEmpty(void* ptr)
{
	return static_cast<QMenu*>(ptr)->isEmpty();
}

char QMenu_IsTearOffEnabled(void* ptr)
{
	return static_cast<QMenu*>(ptr)->isTearOffEnabled();
}

char QMenu_IsTearOffMenuVisible(void* ptr)
{
	return static_cast<QMenu*>(ptr)->isTearOffMenuVisible();
}

char QMenu_SeparatorsCollapsible(void* ptr)
{
	return static_cast<QMenu*>(ptr)->separatorsCollapsible();
}

char QMenu_ToolTipsVisible(void* ptr)
{
	return static_cast<QMenu*>(ptr)->toolTipsVisible();
}

int QMenu_ColumnCount(void* ptr)
{
	return static_cast<QMenu*>(ptr)->columnCount();
}

void QMenu_InitStyleOption(void* ptr, void* option, void* action)
{
	static_cast<QMenu*>(ptr)->initStyleOption(static_cast<QStyleOptionMenuItem*>(option), static_cast<QAction*>(action));
}

void* QMenu___exec_actions_atList3(void* ptr, int i)
{
	return ({QAction * tmp = static_cast<QList<QAction *>*>(ptr)->at(i); if (i == static_cast<QList<QAction *>*>(ptr)->size()-1) { static_cast<QList<QAction *>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QMenu___exec_actions_setList3(void* ptr, void* i)
{
	static_cast<QList<QAction *>*>(ptr)->append(static_cast<QAction*>(i));
}

void* QMenu___exec_actions_newList3(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QAction *>();
}

int QMessageBox_ButtonMask_Type()
{
	return QMessageBox::ButtonMask;
}

class MyQScrollBar: public QScrollBar
{
public:
	MyQScrollBar(QWidget *parent = Q_NULLPTR) : QScrollBar(parent) {QScrollBar_QScrollBar_QRegisterMetaType();};
	MyQScrollBar(Qt::Orientation orientation, QWidget *parent = Q_NULLPTR) : QScrollBar(orientation, parent) {QScrollBar_QScrollBar_QRegisterMetaType();};
	bool event(QEvent * event) { return callbackQWidget_Event(this, event) != 0; };
	void contextMenuEvent(QContextMenuEvent * event) { callbackQWidget_ContextMenuEvent(this, event); };
	void hideEvent(QHideEvent * vqh) { callbackQWidget_HideEvent(this, vqh); };
	void mouseMoveEvent(QMouseEvent * e) { callbackQWidget_MouseMoveEvent(this, e); };
	void mousePressEvent(QMouseEvent * e) { callbackQWidget_MousePressEvent(this, e); };
	void mouseReleaseEvent(QMouseEvent * e) { callbackQWidget_MouseReleaseEvent(this, e); };
	void paintEvent(QPaintEvent * vqp) { callbackQWidget_PaintEvent(this, vqp); };
	void sliderChange(QAbstractSlider::SliderChange change) { callbackQAbstractSlider_SliderChange(this, change); };
	void wheelEvent(QWheelEvent * event) { callbackQWidget_WheelEvent(this, event); };
	 ~MyQScrollBar() { callbackQScrollBar_DestroyQScrollBar(this); };
	QSize sizeHint() const { return *static_cast<QSize*>(callbackQWidget_SizeHint(const_cast<void*>(static_cast<const void*>(this)))); };
	const QMetaObject * metaObject() const { return static_cast<QMetaObject*>(callbackQWidget_MetaObject(const_cast<void*>(static_cast<const void*>(this)))); };
	void Signal_ActionTriggered(int action) { callbackQAbstractSlider_ActionTriggered(this, action); };
	void changeEvent(QEvent * ev) { callbackQWidget_ChangeEvent(this, ev); };
	void keyPressEvent(QKeyEvent * ev) { callbackQWidget_KeyPressEvent(this, ev); };
	void Signal_RangeChanged(int min, int max) { callbackQAbstractSlider_RangeChanged(this, min, max); };
	void setOrientation(Qt::Orientation vqt) { callbackQAbstractSlider_SetOrientation(this, vqt); };
	void setRange(int min, int max) { callbackQAbstractSlider_SetRange(this, min, max); };
	void setValue(int vin) { callbackQAbstractSlider_SetValue(this, vin); };
	void Signal_SliderMoved(int value) { callbackQAbstractSlider_SliderMoved(this, value); };
	void Signal_SliderPressed() { callbackQAbstractSlider_SliderPressed(this); };
	void Signal_SliderReleased() { callbackQAbstractSlider_SliderReleased(this); };
	void timerEvent(QTimerEvent * e) { callbackQWidget_TimerEvent(this, e); };
	void Signal_ValueChanged(int value) { callbackQAbstractSlider_ValueChanged(this, value); };
	bool close() { return callbackQWidget_Close(this) != 0; };
	bool focusNextPrevChild(bool next) { return callbackQWidget_FocusNextPrevChild(this, next) != 0; };
	bool nativeEvent(const QByteArray & eventType, void * message, long * result) { return callbackQWidget_NativeEvent(this, const_cast<QByteArray*>(&eventType), message, result) != 0; };
	void actionEvent(QActionEvent * event) { callbackQWidget_ActionEvent(this, event); };
	void closeEvent(QCloseEvent * event) { callbackQWidget_CloseEvent(this, event); };
	void Signal_CustomContextMenuRequested(const QPoint & pos) { callbackQWidget_CustomContextMenuRequested(this, const_cast<QPoint*>(&pos)); };
	void dragEnterEvent(QDragEnterEvent * event) { callbackQWidget_DragEnterEvent(this, event); };
	void dragLeaveEvent(QDragLeaveEvent * event) { callbackQWidget_DragLeaveEvent(this, event); };
	void dragMoveEvent(QDragMoveEvent * event) { callbackQWidget_DragMoveEvent(this, event); };
	void dropEvent(QDropEvent * event) { callbackQWidget_DropEvent(this, event); };
	void enterEvent(QEvent * event) { callbackQWidget_EnterEvent(this, event); };
	void focusInEvent(QFocusEvent * event) { callbackQWidget_FocusInEvent(this, event); };
	void focusOutEvent(QFocusEvent * event) { callbackQWidget_FocusOutEvent(this, event); };
	void hide() { callbackQWidget_Hide(this); };
	void inputMethodEvent(QInputMethodEvent * event) { callbackQWidget_InputMethodEvent(this, event); };
	void keyReleaseEvent(QKeyEvent * event) { callbackQWidget_KeyReleaseEvent(this, event); };
	void leaveEvent(QEvent * event) { callbackQWidget_LeaveEvent(this, event); };
	void lower() { callbackQWidget_Lower(this); };
	void mouseDoubleClickEvent(QMouseEvent * event) { callbackQWidget_MouseDoubleClickEvent(this, event); };
	void moveEvent(QMoveEvent * event) { callbackQWidget_MoveEvent(this, event); };
	void raise() { callbackQWidget_Raise(this); };
	void repaint() { callbackQWidget_Repaint(this); };
	void resizeEvent(QResizeEvent * event) { callbackQWidget_ResizeEvent(this, event); };
	void setDisabled(bool disable) { callbackQWidget_SetDisabled(this, disable); };
	void setEnabled(bool vbo) { callbackQWidget_SetEnabled(this, vbo); };
	void setFocus() { callbackQWidget_SetFocus2(this); };
	void setHidden(bool hidden) { callbackQWidget_SetHidden(this, hidden); };
	void setStyleSheet(const QString & styleSheet) { QByteArray t728ae7 = styleSheet.toUtf8(); QtWidgets_PackedString styleSheetPacked = { const_cast<char*>(t728ae7.prepend("WHITESPACE").constData()+10), t728ae7.size()-10 };callbackQWidget_SetStyleSheet(this, styleSheetPacked); };
	void setVisible(bool visible) { callbackQWidget_SetVisible(this, visible); };
	void setWindowModified(bool vbo) { callbackQWidget_SetWindowModified(this, vbo); };
	void setWindowTitle(const QString & vqs) { QByteArray tda39a3 = vqs.toUtf8(); QtWidgets_PackedString vqsPacked = { const_cast<char*>(tda39a3.prepend("WHITESPACE").constData()+10), tda39a3.size()-10 };callbackQWidget_SetWindowTitle(this, vqsPacked); };
	void show() { callbackQWidget_Show(this); };
	void showEvent(QShowEvent * event) { callbackQWidget_ShowEvent(this, event); };
	void showFullScreen() { callbackQWidget_ShowFullScreen(this); };
	void showMaximized() { callbackQWidget_ShowMaximized(this); };
	void showMinimized() { callbackQWidget_ShowMinimized(this); };
	void showNormal() { callbackQWidget_ShowNormal(this); };
	void tabletEvent(QTabletEvent * event) { callbackQWidget_TabletEvent(this, event); };
	void update() { callbackQWidget_Update(this); };
	void updateMicroFocus() { callbackQWidget_UpdateMicroFocus(this); };
	void Signal_WindowIconChanged(const QIcon & icon) { callbackQWidget_WindowIconChanged(this, const_cast<QIcon*>(&icon)); };
	void Signal_WindowTitleChanged(const QString & title) { QByteArray t3c6de1 = title.toUtf8(); QtWidgets_PackedString titlePacked = { const_cast<char*>(t3c6de1.prepend("WHITESPACE").constData()+10), t3c6de1.size()-10 };callbackQWidget_WindowTitleChanged(this, titlePacked); };
	QPaintEngine * paintEngine() const { return static_cast<QPaintEngine*>(callbackQWidget_PaintEngine(const_cast<void*>(static_cast<const void*>(this)))); };
	QSize minimumSizeHint() const { return *static_cast<QSize*>(callbackQWidget_MinimumSizeHint(const_cast<void*>(static_cast<const void*>(this)))); };
	QVariant inputMethodQuery(Qt::InputMethodQuery query) const { return *static_cast<QVariant*>(callbackQWidget_InputMethodQuery(const_cast<void*>(static_cast<const void*>(this)), query)); };
	bool hasHeightForWidth() const { return callbackQWidget_HasHeightForWidth(const_cast<void*>(static_cast<const void*>(this))) != 0; };
	int heightForWidth(int w) const { return callbackQWidget_HeightForWidth(const_cast<void*>(static_cast<const void*>(this)), w); };
	int metric(QPaintDevice::PaintDeviceMetric m) const { return callbackQWidget_Metric(const_cast<void*>(static_cast<const void*>(this)), m); };
	void initPainter(QPainter * painter) const { callbackQWidget_InitPainter(const_cast<void*>(static_cast<const void*>(this)), painter); };
	bool eventFilter(QObject * watched, QEvent * event) { return callbackQWidget_EventFilter(this, watched, event) != 0; };
	void childEvent(QChildEvent * event) { callbackQWidget_ChildEvent(this, event); };
	void connectNotify(const QMetaMethod & sign) { callbackQWidget_ConnectNotify(this, const_cast<QMetaMethod*>(&sign)); };
	void customEvent(QEvent * event) { callbackQWidget_CustomEvent(this, event); };
	void deleteLater() { callbackQWidget_DeleteLater(this); };
	void Signal_Destroyed(QObject * obj) { callbackQWidget_Destroyed(this, obj); };
	void disconnectNotify(const QMetaMethod & sign) { callbackQWidget_DisconnectNotify(this, const_cast<QMetaMethod*>(&sign)); };
	void Signal_ObjectNameChanged(const QString & objectName) { QByteArray taa2c4f = objectName.toUtf8(); QtWidgets_PackedString objectNamePacked = { const_cast<char*>(taa2c4f.prepend("WHITESPACE").constData()+10), taa2c4f.size()-10 };callbackQWidget_ObjectNameChanged(this, objectNamePacked); };
};

Q_DECLARE_METATYPE(QScrollBar*)
Q_DECLARE_METATYPE(MyQScrollBar*)

int QScrollBar_QScrollBar_QRegisterMetaType(){qRegisterMetaType<QScrollBar*>(); return qRegisterMetaType<MyQScrollBar*>();}

void* QScrollBar_NewQScrollBar(void* parent)
{
		return new MyQScrollBar(static_cast<QWidget*>(parent));
}

void* QScrollBar_NewQScrollBar2(long long orientation, void* parent)
{
		return new MyQScrollBar(static_cast<Qt::Orientation>(orientation), static_cast<QWidget*>(parent));
}

void QScrollBar_DestroyQScrollBar(void* ptr)
{
	static_cast<QScrollBar*>(ptr)->~QScrollBar();
}

void QScrollBar_DestroyQScrollBarDefault(void* ptr)
{
	Q_UNUSED(ptr);

}

void QScrollBar_InitStyleOption(void* ptr, void* option)
{
	static_cast<QScrollBar*>(ptr)->initStyleOption(static_cast<QStyleOptionSlider*>(option));
}

Q_DECLARE_METATYPE(QSizePolicy)
Q_DECLARE_METATYPE(QSizePolicy*)
void* QSizePolicy_NewQSizePolicy()
{
	return new QSizePolicy();
}

void* QSizePolicy_NewQSizePolicy2(long long horizontal, long long vertical, long long ty)
{
	return new QSizePolicy(static_cast<QSizePolicy::Policy>(horizontal), static_cast<QSizePolicy::Policy>(vertical), static_cast<QSizePolicy::ControlType>(ty));
}

void QSizePolicy_SetControlType(void* ptr, long long ty)
{
	static_cast<QSizePolicy*>(ptr)->setControlType(static_cast<QSizePolicy::ControlType>(ty));
}

void QSizePolicy_SetHeightForWidth(void* ptr, char dependent)
{
	static_cast<QSizePolicy*>(ptr)->setHeightForWidth(dependent != 0);
}

void QSizePolicy_SetHorizontalPolicy(void* ptr, long long policy)
{
	static_cast<QSizePolicy*>(ptr)->setHorizontalPolicy(static_cast<QSizePolicy::Policy>(policy));
}

void QSizePolicy_SetHorizontalStretch(void* ptr, int stretchFactor)
{
	static_cast<QSizePolicy*>(ptr)->setHorizontalStretch(stretchFactor);
}

void QSizePolicy_SetRetainSizeWhenHidden(void* ptr, char retainSize)
{
	static_cast<QSizePolicy*>(ptr)->setRetainSizeWhenHidden(retainSize != 0);
}

void QSizePolicy_SetVerticalPolicy(void* ptr, long long policy)
{
	static_cast<QSizePolicy*>(ptr)->setVerticalPolicy(static_cast<QSizePolicy::Policy>(policy));
}

void QSizePolicy_SetVerticalStretch(void* ptr, int stretchFactor)
{
	static_cast<QSizePolicy*>(ptr)->setVerticalStretch(stretchFactor);
}

void QSizePolicy_SetWidthForHeight(void* ptr, char dependent)
{
	static_cast<QSizePolicy*>(ptr)->setWidthForHeight(dependent != 0);
}

void QSizePolicy_Transpose(void* ptr)
{
	static_cast<QSizePolicy*>(ptr)->transpose();
}

void* QSizePolicy_Transposed(void* ptr)
{
	return new QSizePolicy(static_cast<QSizePolicy*>(ptr)->transposed());
}

long long QSizePolicy_ControlType(void* ptr)
{
	return static_cast<QSizePolicy*>(ptr)->controlType();
}

long long QSizePolicy_HorizontalPolicy(void* ptr)
{
	return static_cast<QSizePolicy*>(ptr)->horizontalPolicy();
}

long long QSizePolicy_VerticalPolicy(void* ptr)
{
	return static_cast<QSizePolicy*>(ptr)->verticalPolicy();
}

long long QSizePolicy_ExpandingDirections(void* ptr)
{
	return static_cast<QSizePolicy*>(ptr)->expandingDirections();
}

char QSizePolicy_HasHeightForWidth(void* ptr)
{
	return static_cast<QSizePolicy*>(ptr)->hasHeightForWidth();
}

char QSizePolicy_HasWidthForHeight(void* ptr)
{
	return static_cast<QSizePolicy*>(ptr)->hasWidthForHeight();
}

char QSizePolicy_RetainSizeWhenHidden(void* ptr)
{
	return static_cast<QSizePolicy*>(ptr)->retainSizeWhenHidden();
}

int QSizePolicy_HorizontalStretch(void* ptr)
{
	return static_cast<QSizePolicy*>(ptr)->horizontalStretch();
}

int QSizePolicy_VerticalStretch(void* ptr)
{
	return static_cast<QSizePolicy*>(ptr)->verticalStretch();
}

class MyQSpacerItem: public QSpacerItem
{
public:
	MyQSpacerItem(int w, int h, QSizePolicy::Policy hPolicy = QSizePolicy::Minimum, QSizePolicy::Policy vPolicy = QSizePolicy::Minimum) : QSpacerItem(w, h, hPolicy, vPolicy) {QSpacerItem_QSpacerItem_QRegisterMetaType();};
	QSpacerItem * spacerItem() { return static_cast<QSpacerItem*>(callbackQLayoutItem_SpacerItem(this)); };
	void setGeometry(const QRect & r) { callbackQSpacerItem_SetGeometry(this, const_cast<QRect*>(&r)); };
	 ~MyQSpacerItem() { callbackQSpacerItem_DestroyQSpacerItem(this); };
	QRect geometry() const { return *static_cast<QRect*>(callbackQSpacerItem_Geometry(const_cast<void*>(static_cast<const void*>(this)))); };
	QSize maximumSize() const { return *static_cast<QSize*>(callbackQSpacerItem_MaximumSize(const_cast<void*>(static_cast<const void*>(this)))); };
	QSize minimumSize() const { return *static_cast<QSize*>(callbackQSpacerItem_MinimumSize(const_cast<void*>(static_cast<const void*>(this)))); };
	QSize sizeHint() const { return *static_cast<QSize*>(callbackQSpacerItem_SizeHint(const_cast<void*>(static_cast<const void*>(this)))); };
	Qt::Orientations expandingDirections() const { return static_cast<Qt::Orientation>(callbackQSpacerItem_ExpandingDirections(const_cast<void*>(static_cast<const void*>(this)))); };
	bool isEmpty() const { return callbackQSpacerItem_IsEmpty(const_cast<void*>(static_cast<const void*>(this))) != 0; };
	QLayout * layout() { return static_cast<QLayout*>(callbackQLayoutItem_Layout(this)); };
	QWidget * widget() { return static_cast<QWidget*>(callbackQLayoutItem_Widget(this)); };
	void invalidate() { callbackQLayoutItem_Invalidate(this); };
	QSizePolicy::ControlTypes controlTypes() const { return static_cast<QSizePolicy::ControlType>(callbackQLayoutItem_ControlTypes(const_cast<void*>(static_cast<const void*>(this)))); };
	bool hasHeightForWidth() const { return callbackQLayoutItem_HasHeightForWidth(const_cast<void*>(static_cast<const void*>(this))) != 0; };
	int heightForWidth(int vin) const { return callbackQLayoutItem_HeightForWidth(const_cast<void*>(static_cast<const void*>(this)), vin); };
	int minimumHeightForWidth(int w) const { return callbackQLayoutItem_MinimumHeightForWidth(const_cast<void*>(static_cast<const void*>(this)), w); };
};

Q_DECLARE_METATYPE(QSpacerItem*)
Q_DECLARE_METATYPE(MyQSpacerItem*)

int QSpacerItem_QSpacerItem_QRegisterMetaType(){qRegisterMetaType<QSpacerItem*>(); return qRegisterMetaType<MyQSpacerItem*>();}

void* QSpacerItem_NewQSpacerItem(int w, int h, long long hPolicy, long long vPolicy)
{
	return new MyQSpacerItem(w, h, static_cast<QSizePolicy::Policy>(hPolicy), static_cast<QSizePolicy::Policy>(vPolicy));
}

void QSpacerItem_ChangeSize(void* ptr, int w, int h, long long hPolicy, long long vPolicy)
{
	static_cast<QSpacerItem*>(ptr)->changeSize(w, h, static_cast<QSizePolicy::Policy>(hPolicy), static_cast<QSizePolicy::Policy>(vPolicy));
}

void QSpacerItem_SetGeometry(void* ptr, void* r)
{
	static_cast<QSpacerItem*>(ptr)->setGeometry(*static_cast<QRect*>(r));
}

void QSpacerItem_SetGeometryDefault(void* ptr, void* r)
{
		static_cast<QSpacerItem*>(ptr)->QSpacerItem::setGeometry(*static_cast<QRect*>(r));
}

void QSpacerItem_DestroyQSpacerItem(void* ptr)
{
	static_cast<QSpacerItem*>(ptr)->~QSpacerItem();
}

void QSpacerItem_DestroyQSpacerItemDefault(void* ptr)
{
	Q_UNUSED(ptr);

}

void* QSpacerItem_Geometry(void* ptr)
{
	return ({ QRect tmpValue = static_cast<QSpacerItem*>(ptr)->geometry(); new QRect(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QSpacerItem_GeometryDefault(void* ptr)
{
		return ({ QRect tmpValue = static_cast<QSpacerItem*>(ptr)->QSpacerItem::geometry(); new QRect(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QSpacerItem_MaximumSize(void* ptr)
{
	return ({ QSize tmpValue = static_cast<QSpacerItem*>(ptr)->maximumSize(); new QSize(tmpValue.width(), tmpValue.height()); });
}

void* QSpacerItem_MaximumSizeDefault(void* ptr)
{
		return ({ QSize tmpValue = static_cast<QSpacerItem*>(ptr)->QSpacerItem::maximumSize(); new QSize(tmpValue.width(), tmpValue.height()); });
}

void* QSpacerItem_MinimumSize(void* ptr)
{
	return ({ QSize tmpValue = static_cast<QSpacerItem*>(ptr)->minimumSize(); new QSize(tmpValue.width(), tmpValue.height()); });
}

void* QSpacerItem_MinimumSizeDefault(void* ptr)
{
		return ({ QSize tmpValue = static_cast<QSpacerItem*>(ptr)->QSpacerItem::minimumSize(); new QSize(tmpValue.width(), tmpValue.height()); });
}

void* QSpacerItem_SizeHint(void* ptr)
{
	return ({ QSize tmpValue = static_cast<QSpacerItem*>(ptr)->sizeHint(); new QSize(tmpValue.width(), tmpValue.height()); });
}

void* QSpacerItem_SizeHintDefault(void* ptr)
{
		return ({ QSize tmpValue = static_cast<QSpacerItem*>(ptr)->QSpacerItem::sizeHint(); new QSize(tmpValue.width(), tmpValue.height()); });
}

void* QSpacerItem_SizePolicy(void* ptr)
{
	return new QSizePolicy(static_cast<QSpacerItem*>(ptr)->sizePolicy());
}

long long QSpacerItem_ExpandingDirections(void* ptr)
{
	return static_cast<QSpacerItem*>(ptr)->expandingDirections();
}

long long QSpacerItem_ExpandingDirectionsDefault(void* ptr)
{
		return static_cast<QSpacerItem*>(ptr)->QSpacerItem::expandingDirections();
}

char QSpacerItem_IsEmpty(void* ptr)
{
	return static_cast<QSpacerItem*>(ptr)->isEmpty();
}

char QSpacerItem_IsEmptyDefault(void* ptr)
{
		return static_cast<QSpacerItem*>(ptr)->QSpacerItem::isEmpty();
}

class MyQStyle: public QStyle
{
public:
	MyQStyle() : QStyle() {QStyle_QStyle_QRegisterMetaType();};
	void polish(QApplication * application) { callbackQStyle_Polish2(this, application); };
	void polish(QPalette & palette) { callbackQStyle_Polish3(this, static_cast<QPalette*>(&palette)); };
	void polish(QWidget * widget) { callbackQStyle_Polish(this, widget); };
	void unpolish(QApplication * application) { callbackQStyle_Unpolish2(this, application); };
	void unpolish(QWidget * widget) { callbackQStyle_Unpolish(this, widget); };
	 ~MyQStyle() { callbackQStyle_DestroyQStyle(this); };
	QIcon standardIcon(QStyle::StandardPixmap standardIcon, const QStyleOption * option, const QWidget * widget) const { return *static_cast<QIcon*>(callbackQStyle_StandardIcon(const_cast<void*>(static_cast<const void*>(this)), standardIcon, const_cast<QStyleOption*>(option), const_cast<QWidget*>(widget))); };
	QPalette standardPalette() const { return *static_cast<QPalette*>(callbackQStyle_StandardPalette(const_cast<void*>(static_cast<const void*>(this)))); };
	QPixmap generatedIconPixmap(QIcon::Mode iconMode, const QPixmap & pixmap, const QStyleOption * option) const { return *static_cast<QPixmap*>(callbackQStyle_GeneratedIconPixmap(const_cast<void*>(static_cast<const void*>(this)), iconMode, const_cast<QPixmap*>(&pixmap), const_cast<QStyleOption*>(option))); };
	QRect itemPixmapRect(const QRect & rectangle, int alignment, const QPixmap & pixmap) const { return *static_cast<QRect*>(callbackQStyle_ItemPixmapRect(const_cast<void*>(static_cast<const void*>(this)), const_cast<QRect*>(&rectangle), alignment, const_cast<QPixmap*>(&pixmap))); };
	QRect itemTextRect(const QFontMetrics & metrics, const QRect & rectangle, int alignment, bool enabled, const QString & text) const { QByteArray t372ea0 = text.toUtf8(); QtWidgets_PackedString textPacked = { const_cast<char*>(t372ea0.prepend("WHITESPACE").constData()+10), t372ea0.size()-10 };return *static_cast<QRect*>(callbackQStyle_ItemTextRect(const_cast<void*>(static_cast<const void*>(this)), const_cast<QFontMetrics*>(&metrics), const_cast<QRect*>(&rectangle), alignment, enabled, textPacked)); };
	QRect subControlRect(QStyle::ComplexControl control, const QStyleOptionComplex * option, QStyle::SubControl subControl, const QWidget * widget) const { return *static_cast<QRect*>(callbackQStyle_SubControlRect(const_cast<void*>(static_cast<const void*>(this)), control, const_cast<QStyleOptionComplex*>(option), subControl, const_cast<QWidget*>(widget))); };
	QRect subElementRect(QStyle::SubElement element, const QStyleOption * option, const QWidget * widget) const { return *static_cast<QRect*>(callbackQStyle_SubElementRect(const_cast<void*>(static_cast<const void*>(this)), element, const_cast<QStyleOption*>(option), const_cast<QWidget*>(widget))); };
	QSize sizeFromContents(QStyle::ContentsType ty, const QStyleOption * option, const QSize & contentsSize, const QWidget * widget) const { return *static_cast<QSize*>(callbackQStyle_SizeFromContents(const_cast<void*>(static_cast<const void*>(this)), ty, const_cast<QStyleOption*>(option), const_cast<QSize*>(&contentsSize), const_cast<QWidget*>(widget))); };
	QStyle::SubControl hitTestComplexControl(QStyle::ComplexControl control, const QStyleOptionComplex * option, const QPoint & position, const QWidget * widget) const { return static_cast<QStyle::SubControl>(callbackQStyle_HitTestComplexControl(const_cast<void*>(static_cast<const void*>(this)), control, const_cast<QStyleOptionComplex*>(option), const_cast<QPoint*>(&position), const_cast<QWidget*>(widget))); };
	const QMetaObject * metaObject() const { return static_cast<QMetaObject*>(callbackQStyle_MetaObject(const_cast<void*>(static_cast<const void*>(this)))); };
	int layoutSpacing(QSizePolicy::ControlType control1, QSizePolicy::ControlType control2, Qt::Orientation orientation, const QStyleOption * option, const QWidget * widget) const { return callbackQStyle_LayoutSpacing(const_cast<void*>(static_cast<const void*>(this)), control1, control2, orientation, const_cast<QStyleOption*>(option), const_cast<QWidget*>(widget)); };
	int pixelMetric(QStyle::PixelMetric metric, const QStyleOption * option, const QWidget * widget) const { return callbackQStyle_PixelMetric(const_cast<void*>(static_cast<const void*>(this)), metric, const_cast<QStyleOption*>(option), const_cast<QWidget*>(widget)); };
	int styleHint(QStyle::StyleHint hint, const QStyleOption * option, const QWidget * widget, QStyleHintReturn * returnData) const { return callbackQStyle_StyleHint(const_cast<void*>(static_cast<const void*>(this)), hint, const_cast<QStyleOption*>(option), const_cast<QWidget*>(widget), returnData); };
	void drawComplexControl(QStyle::ComplexControl control, const QStyleOptionComplex * option, QPainter * painter, const QWidget * widget) const { callbackQStyle_DrawComplexControl(const_cast<void*>(static_cast<const void*>(this)), control, const_cast<QStyleOptionComplex*>(option), painter, const_cast<QWidget*>(widget)); };
	void drawControl(QStyle::ControlElement element, const QStyleOption * option, QPainter * painter, const QWidget * widget) const { callbackQStyle_DrawControl(const_cast<void*>(static_cast<const void*>(this)), element, const_cast<QStyleOption*>(option), painter, const_cast<QWidget*>(widget)); };
	void drawItemPixmap(QPainter * painter, const QRect & rectangle, int alignment, const QPixmap & pixmap) const { callbackQStyle_DrawItemPixmap(const_cast<void*>(static_cast<const void*>(this)), painter, const_cast<QRect*>(&rectangle), alignment, const_cast<QPixmap*>(&pixmap)); };
	void drawItemText(QPainter * painter, const QRect & rectangle, int alignment, const QPalette & palette, bool enabled, const QString & text, QPalette::ColorRole textRole) const { QByteArray t372ea0 = text.toUtf8(); QtWidgets_PackedString textPacked = { const_cast<char*>(t372ea0.prepend("WHITESPACE").constData()+10), t372ea0.size()-10 };callbackQStyle_DrawItemText(const_cast<void*>(static_cast<const void*>(this)), painter, const_cast<QRect*>(&rectangle), alignment, const_cast<QPalette*>(&palette), enabled, textPacked, textRole); };
	void drawPrimitive(QStyle::PrimitiveElement element, const QStyleOption * option, QPainter * painter, const QWidget * widget) const { callbackQStyle_DrawPrimitive(const_cast<void*>(static_cast<const void*>(this)), element, const_cast<QStyleOption*>(option), painter, const_cast<QWidget*>(widget)); };
	QPixmap standardPixmap(QStyle::StandardPixmap standardIcon, const QStyleOption * option, const QWidget * widget) const { return *static_cast<QPixmap*>(callbackQStyle_StandardPixmap(const_cast<void*>(static_cast<const void*>(this)), standardIcon, const_cast<QStyleOption*>(option), const_cast<QWidget*>(widget))); };
	bool event(QEvent * e) { return callbackQStyle_Event(this, e) != 0; };
	bool eventFilter(QObject * watched, QEvent * event) { return callbackQStyle_EventFilter(this, watched, event) != 0; };
	void childEvent(QChildEvent * event) { callbackQStyle_ChildEvent(this, event); };
	void connectNotify(const QMetaMethod & sign) { callbackQStyle_ConnectNotify(this, const_cast<QMetaMethod*>(&sign)); };
	void customEvent(QEvent * event) { callbackQStyle_CustomEvent(this, event); };
	void deleteLater() { callbackQStyle_DeleteLater(this); };
	void Signal_Destroyed(QObject * obj) { callbackQStyle_Destroyed(this, obj); };
	void disconnectNotify(const QMetaMethod & sign) { callbackQStyle_DisconnectNotify(this, const_cast<QMetaMethod*>(&sign)); };
	void Signal_ObjectNameChanged(const QString & objectName) { QByteArray taa2c4f = objectName.toUtf8(); QtWidgets_PackedString objectNamePacked = { const_cast<char*>(taa2c4f.prepend("WHITESPACE").constData()+10), taa2c4f.size()-10 };callbackQStyle_ObjectNameChanged(this, objectNamePacked); };
	void timerEvent(QTimerEvent * event) { callbackQStyle_TimerEvent(this, event); };
};

Q_DECLARE_METATYPE(QStyle*)
Q_DECLARE_METATYPE(MyQStyle*)

int QStyle_QStyle_QRegisterMetaType(){qRegisterMetaType<QStyle*>(); return qRegisterMetaType<MyQStyle*>();}

void* QStyle_QStyle_VisualPos(long long direction, void* boundingRectangle, void* logicalPosition)
{
	return ({ QPoint tmpValue = QStyle::visualPos(static_cast<Qt::LayoutDirection>(direction), *static_cast<QRect*>(boundingRectangle), *static_cast<QPoint*>(logicalPosition)); new QPoint(tmpValue.x(), tmpValue.y()); });
}

void* QStyle_QStyle_AlignedRect(long long direction, long long alignment, void* size, void* rectangle)
{
	return ({ QRect tmpValue = QStyle::alignedRect(static_cast<Qt::LayoutDirection>(direction), static_cast<Qt::AlignmentFlag>(alignment), *static_cast<QSize*>(size), *static_cast<QRect*>(rectangle)); new QRect(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QStyle_QStyle_VisualRect(long long direction, void* boundingRectangle, void* logicalRectangle)
{
	return ({ QRect tmpValue = QStyle::visualRect(static_cast<Qt::LayoutDirection>(direction), *static_cast<QRect*>(boundingRectangle), *static_cast<QRect*>(logicalRectangle)); new QRect(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

struct QtWidgets_PackedString QStyle_QStyle_Tr(char* s, char* c, int n)
{
	return ({ QByteArray td67d9d = QStyle::tr(const_cast<const char*>(s), const_cast<const char*>(c), n).toUtf8(); QtWidgets_PackedString { const_cast<char*>(td67d9d.prepend("WHITESPACE").constData()+10), td67d9d.size()-10 }; });
}

void* QStyle_NewQStyle()
{
	return new MyQStyle();
}

long long QStyle_QStyle_VisualAlignment(long long direction, long long alignment)
{
	return QStyle::visualAlignment(static_cast<Qt::LayoutDirection>(direction), static_cast<Qt::AlignmentFlag>(alignment));
}

int QStyle_QStyle_SliderPositionFromValue(int min, int max, int logicalValue, int span, char upsideDown)
{
	return QStyle::sliderPositionFromValue(min, max, logicalValue, span, upsideDown != 0);
}

int QStyle_QStyle_SliderValueFromPosition(int min, int max, int position, int span, char upsideDown)
{
	return QStyle::sliderValueFromPosition(min, max, position, span, upsideDown != 0);
}

void QStyle_Polish2(void* ptr, void* application)
{
	static_cast<QStyle*>(ptr)->polish(static_cast<QApplication*>(application));
}

void QStyle_Polish2Default(void* ptr, void* application)
{
		static_cast<QStyle*>(ptr)->QStyle::polish(static_cast<QApplication*>(application));
}

void QStyle_Polish3(void* ptr, void* palette)
{
	static_cast<QStyle*>(ptr)->polish(*static_cast<QPalette*>(palette));
}

void QStyle_Polish3Default(void* ptr, void* palette)
{
		static_cast<QStyle*>(ptr)->QStyle::polish(*static_cast<QPalette*>(palette));
}

void QStyle_Polish(void* ptr, void* widget)
{
		static_cast<QStyle*>(ptr)->polish(static_cast<QWidget*>(widget));
}

void QStyle_PolishDefault(void* ptr, void* widget)
{
		static_cast<QStyle*>(ptr)->QStyle::polish(static_cast<QWidget*>(widget));
}

void QStyle_Unpolish2(void* ptr, void* application)
{
	static_cast<QStyle*>(ptr)->unpolish(static_cast<QApplication*>(application));
}

void QStyle_Unpolish2Default(void* ptr, void* application)
{
		static_cast<QStyle*>(ptr)->QStyle::unpolish(static_cast<QApplication*>(application));
}

void QStyle_Unpolish(void* ptr, void* widget)
{
		static_cast<QStyle*>(ptr)->unpolish(static_cast<QWidget*>(widget));
}

void QStyle_UnpolishDefault(void* ptr, void* widget)
{
		static_cast<QStyle*>(ptr)->QStyle::unpolish(static_cast<QWidget*>(widget));
}

void QStyle_DestroyQStyle(void* ptr)
{
	static_cast<QStyle*>(ptr)->~QStyle();
}

void QStyle_DestroyQStyleDefault(void* ptr)
{
	Q_UNUSED(ptr);

}

void* QStyle_StandardIcon(void* ptr, long long standardIcon, void* option, void* widget)
{
		return new QIcon(static_cast<QStyle*>(ptr)->standardIcon(static_cast<QStyle::StandardPixmap>(standardIcon), static_cast<QStyleOption*>(option), static_cast<QWidget*>(widget)));
}

void* QStyle_StandardPalette(void* ptr)
{
	return new QPalette(static_cast<QStyle*>(ptr)->standardPalette());
}

void* QStyle_StandardPaletteDefault(void* ptr)
{
		return new QPalette(static_cast<QStyle*>(ptr)->QStyle::standardPalette());
}

void* QStyle_GeneratedIconPixmap(void* ptr, long long iconMode, void* pixmap, void* option)
{
	return new QPixmap(static_cast<QStyle*>(ptr)->generatedIconPixmap(static_cast<QIcon::Mode>(iconMode), *static_cast<QPixmap*>(pixmap), static_cast<QStyleOption*>(option)));
}

void* QStyle_ItemPixmapRect(void* ptr, void* rectangle, int alignment, void* pixmap)
{
	return ({ QRect tmpValue = static_cast<QStyle*>(ptr)->itemPixmapRect(*static_cast<QRect*>(rectangle), alignment, *static_cast<QPixmap*>(pixmap)); new QRect(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QStyle_ItemPixmapRectDefault(void* ptr, void* rectangle, int alignment, void* pixmap)
{
		return ({ QRect tmpValue = static_cast<QStyle*>(ptr)->QStyle::itemPixmapRect(*static_cast<QRect*>(rectangle), alignment, *static_cast<QPixmap*>(pixmap)); new QRect(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QStyle_ItemTextRect(void* ptr, void* metrics, void* rectangle, int alignment, char enabled, struct QtWidgets_PackedString text)
{
	return ({ QRect tmpValue = static_cast<QStyle*>(ptr)->itemTextRect(*static_cast<QFontMetrics*>(metrics), *static_cast<QRect*>(rectangle), alignment, enabled != 0, QString::fromUtf8(text.data, text.len)); new QRect(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QStyle_ItemTextRectDefault(void* ptr, void* metrics, void* rectangle, int alignment, char enabled, struct QtWidgets_PackedString text)
{
		return ({ QRect tmpValue = static_cast<QStyle*>(ptr)->QStyle::itemTextRect(*static_cast<QFontMetrics*>(metrics), *static_cast<QRect*>(rectangle), alignment, enabled != 0, QString::fromUtf8(text.data, text.len)); new QRect(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QStyle_SubControlRect(void* ptr, long long control, void* option, long long subControl, void* widget)
{
		return ({ QRect tmpValue = static_cast<QStyle*>(ptr)->subControlRect(static_cast<QStyle::ComplexControl>(control), static_cast<QStyleOptionComplex*>(option), static_cast<QStyle::SubControl>(subControl), static_cast<QWidget*>(widget)); new QRect(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QStyle_SubElementRect(void* ptr, long long element, void* option, void* widget)
{
		return ({ QRect tmpValue = static_cast<QStyle*>(ptr)->subElementRect(static_cast<QStyle::SubElement>(element), static_cast<QStyleOption*>(option), static_cast<QWidget*>(widget)); new QRect(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QStyle_SizeFromContents(void* ptr, long long ty, void* option, void* contentsSize, void* widget)
{
		return ({ QSize tmpValue = static_cast<QStyle*>(ptr)->sizeFromContents(static_cast<QStyle::ContentsType>(ty), static_cast<QStyleOption*>(option), *static_cast<QSize*>(contentsSize), static_cast<QWidget*>(widget)); new QSize(tmpValue.width(), tmpValue.height()); });
}

long long QStyle_HitTestComplexControl(void* ptr, long long control, void* option, void* position, void* widget)
{
		return static_cast<QStyle*>(ptr)->hitTestComplexControl(static_cast<QStyle::ComplexControl>(control), static_cast<QStyleOptionComplex*>(option), *static_cast<QPoint*>(position), static_cast<QWidget*>(widget));
}

void* QStyle_MetaObjectDefault(void* ptr)
{
		return const_cast<QMetaObject*>(static_cast<QStyle*>(ptr)->QStyle::metaObject());
}

void* QStyle_Proxy(void* ptr)
{
	return const_cast<QStyle*>(static_cast<QStyle*>(ptr)->proxy());
}

int QStyle_CombinedLayoutSpacing(void* ptr, long long controls1, long long controls2, long long orientation, void* option, void* widget)
{
		return static_cast<QStyle*>(ptr)->combinedLayoutSpacing(static_cast<QSizePolicy::ControlType>(controls1), static_cast<QSizePolicy::ControlType>(controls2), static_cast<Qt::Orientation>(orientation), static_cast<QStyleOption*>(option), static_cast<QWidget*>(widget));
}

int QStyle_LayoutSpacing(void* ptr, long long control1, long long control2, long long orientation, void* option, void* widget)
{
		return static_cast<QStyle*>(ptr)->layoutSpacing(static_cast<QSizePolicy::ControlType>(control1), static_cast<QSizePolicy::ControlType>(control2), static_cast<Qt::Orientation>(orientation), static_cast<QStyleOption*>(option), static_cast<QWidget*>(widget));
}

int QStyle_PixelMetric(void* ptr, long long metric, void* option, void* widget)
{
		return static_cast<QStyle*>(ptr)->pixelMetric(static_cast<QStyle::PixelMetric>(metric), static_cast<QStyleOption*>(option), static_cast<QWidget*>(widget));
}

int QStyle_StyleHint(void* ptr, long long hint, void* option, void* widget, void* returnData)
{
		return static_cast<QStyle*>(ptr)->styleHint(static_cast<QStyle::StyleHint>(hint), static_cast<QStyleOption*>(option), static_cast<QWidget*>(widget), static_cast<QStyleHintReturn*>(returnData));
}

void QStyle_DrawComplexControl(void* ptr, long long control, void* option, void* painter, void* widget)
{
		static_cast<QStyle*>(ptr)->drawComplexControl(static_cast<QStyle::ComplexControl>(control), static_cast<QStyleOptionComplex*>(option), static_cast<QPainter*>(painter), static_cast<QWidget*>(widget));
}

void QStyle_DrawControl(void* ptr, long long element, void* option, void* painter, void* widget)
{
		static_cast<QStyle*>(ptr)->drawControl(static_cast<QStyle::ControlElement>(element), static_cast<QStyleOption*>(option), static_cast<QPainter*>(painter), static_cast<QWidget*>(widget));
}

void QStyle_DrawItemPixmap(void* ptr, void* painter, void* rectangle, int alignment, void* pixmap)
{
	static_cast<QStyle*>(ptr)->drawItemPixmap(static_cast<QPainter*>(painter), *static_cast<QRect*>(rectangle), alignment, *static_cast<QPixmap*>(pixmap));
}

void QStyle_DrawItemPixmapDefault(void* ptr, void* painter, void* rectangle, int alignment, void* pixmap)
{
		static_cast<QStyle*>(ptr)->QStyle::drawItemPixmap(static_cast<QPainter*>(painter), *static_cast<QRect*>(rectangle), alignment, *static_cast<QPixmap*>(pixmap));
}

void QStyle_DrawItemText(void* ptr, void* painter, void* rectangle, int alignment, void* palette, char enabled, struct QtWidgets_PackedString text, long long textRole)
{
	static_cast<QStyle*>(ptr)->drawItemText(static_cast<QPainter*>(painter), *static_cast<QRect*>(rectangle), alignment, *static_cast<QPalette*>(palette), enabled != 0, QString::fromUtf8(text.data, text.len), static_cast<QPalette::ColorRole>(textRole));
}

void QStyle_DrawItemTextDefault(void* ptr, void* painter, void* rectangle, int alignment, void* palette, char enabled, struct QtWidgets_PackedString text, long long textRole)
{
		static_cast<QStyle*>(ptr)->QStyle::drawItemText(static_cast<QPainter*>(painter), *static_cast<QRect*>(rectangle), alignment, *static_cast<QPalette*>(palette), enabled != 0, QString::fromUtf8(text.data, text.len), static_cast<QPalette::ColorRole>(textRole));
}

void QStyle_DrawPrimitive(void* ptr, long long element, void* option, void* painter, void* widget)
{
		static_cast<QStyle*>(ptr)->drawPrimitive(static_cast<QStyle::PrimitiveElement>(element), static_cast<QStyleOption*>(option), static_cast<QPainter*>(painter), static_cast<QWidget*>(widget));
}

void* QStyle_StandardPixmap(void* ptr, long long standardIcon, void* option, void* widget)
{
		return new QPixmap(static_cast<QStyle*>(ptr)->standardPixmap(static_cast<QStyle::StandardPixmap>(standardIcon), static_cast<QStyleOption*>(option), static_cast<QWidget*>(widget)));
}

void* QStyle___dynamicPropertyNames_atList(void* ptr, int i)
{
	return new QByteArray(({QByteArray tmp = static_cast<QList<QByteArray>*>(ptr)->at(i); if (i == static_cast<QList<QByteArray>*>(ptr)->size()-1) { static_cast<QList<QByteArray>*>(ptr)->~QList(); free(ptr); }; tmp; }));
}

void QStyle___dynamicPropertyNames_setList(void* ptr, void* i)
{
	static_cast<QList<QByteArray>*>(ptr)->append(*static_cast<QByteArray*>(i));
}

void* QStyle___dynamicPropertyNames_newList(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QByteArray>();
}

void* QStyle___findChildren_atList2(void* ptr, int i)
{
	return ({QObject* tmp = static_cast<QList<QObject*>*>(ptr)->at(i); if (i == static_cast<QList<QObject*>*>(ptr)->size()-1) { static_cast<QList<QObject*>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QStyle___findChildren_setList2(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QLayout*>(i));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QWidget*>(i));
	} else {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QObject*>(i));
	}
}

void* QStyle___findChildren_newList2(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QObject*>();
}

void* QStyle___findChildren_atList3(void* ptr, int i)
{
	return ({QObject* tmp = static_cast<QList<QObject*>*>(ptr)->at(i); if (i == static_cast<QList<QObject*>*>(ptr)->size()-1) { static_cast<QList<QObject*>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QStyle___findChildren_setList3(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QLayout*>(i));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QWidget*>(i));
	} else {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QObject*>(i));
	}
}

void* QStyle___findChildren_newList3(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QObject*>();
}

void* QStyle___findChildren_atList(void* ptr, int i)
{
	return ({QObject* tmp = static_cast<QList<QObject*>*>(ptr)->at(i); if (i == static_cast<QList<QObject*>*>(ptr)->size()-1) { static_cast<QList<QObject*>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QStyle___findChildren_setList(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QLayout*>(i));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QWidget*>(i));
	} else {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QObject*>(i));
	}
}

void* QStyle___findChildren_newList(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QObject*>();
}

void* QStyle___children_atList(void* ptr, int i)
{
	return ({QObject * tmp = static_cast<QList<QObject *>*>(ptr)->at(i); if (i == static_cast<QList<QObject *>*>(ptr)->size()-1) { static_cast<QList<QObject *>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QStyle___children_setList(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject *>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject *>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject *>*>(ptr)->append(static_cast<QLayout*>(i));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject *>*>(ptr)->append(static_cast<QWidget*>(i));
	} else {
		static_cast<QList<QObject *>*>(ptr)->append(static_cast<QObject*>(i));
	}
}

void* QStyle___children_newList(void* ptr)
{
	Q_UNUSED(ptr);
	return new QList<QObject *>();
}

char QStyle_EventDefault(void* ptr, void* e)
{
		return static_cast<QStyle*>(ptr)->QStyle::event(static_cast<QEvent*>(e));
}

char QStyle_EventFilterDefault(void* ptr, void* watched, void* event)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(watched))) {
		return static_cast<QStyle*>(ptr)->QStyle::eventFilter(static_cast<QGraphicsObject*>(watched), static_cast<QEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(watched))) {
		return static_cast<QStyle*>(ptr)->QStyle::eventFilter(static_cast<QGraphicsWidget*>(watched), static_cast<QEvent*>(event));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(watched))) {
		return static_cast<QStyle*>(ptr)->QStyle::eventFilter(static_cast<QLayout*>(watched), static_cast<QEvent*>(event));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(watched))) {
		return static_cast<QStyle*>(ptr)->QStyle::eventFilter(static_cast<QWidget*>(watched), static_cast<QEvent*>(event));
	} else {
		return static_cast<QStyle*>(ptr)->QStyle::eventFilter(static_cast<QObject*>(watched), static_cast<QEvent*>(event));
	}
}

void QStyle_ChildEventDefault(void* ptr, void* event)
{
		static_cast<QStyle*>(ptr)->QStyle::childEvent(static_cast<QChildEvent*>(event));
}

void QStyle_ConnectNotifyDefault(void* ptr, void* sign)
{
		static_cast<QStyle*>(ptr)->QStyle::connectNotify(*static_cast<QMetaMethod*>(sign));
}

void QStyle_CustomEventDefault(void* ptr, void* event)
{
		static_cast<QStyle*>(ptr)->QStyle::customEvent(static_cast<QEvent*>(event));
}

void QStyle_DeleteLaterDefault(void* ptr)
{
		static_cast<QStyle*>(ptr)->QStyle::deleteLater();
}

void QStyle_DisconnectNotifyDefault(void* ptr, void* sign)
{
		static_cast<QStyle*>(ptr)->QStyle::disconnectNotify(*static_cast<QMetaMethod*>(sign));
}

void QStyle_TimerEventDefault(void* ptr, void* event)
{
		static_cast<QStyle*>(ptr)->QStyle::timerEvent(static_cast<QTimerEvent*>(event));
}

Q_DECLARE_METATYPE(QStyleHintReturn*)
void* QStyleHintReturn_NewQStyleHintReturn(int version, int ty)
{
	return new QStyleHintReturn(version, ty);
}

int QStyleHintReturn_Type(void* ptr)
{
	return static_cast<QStyleHintReturn*>(ptr)->type;
}

void QStyleHintReturn_SetType(void* ptr, int vin)
{
	static_cast<QStyleHintReturn*>(ptr)->type = vin;
}

int QStyleHintReturn_Version(void* ptr)
{
	return static_cast<QStyleHintReturn*>(ptr)->version;
}

void QStyleHintReturn_SetVersion(void* ptr, int vin)
{
	static_cast<QStyleHintReturn*>(ptr)->version = vin;
}

Q_DECLARE_METATYPE(QStyleOption*)
void* QStyleOption_NewQStyleOption2(void* other)
{
	return new QStyleOption(*static_cast<QStyleOption*>(other));
}

void* QStyleOption_NewQStyleOption(int version, int ty)
{
	return new QStyleOption(version, ty);
}

void QStyleOption_InitFrom(void* ptr, void* widget)
{
		static_cast<QStyleOption*>(ptr)->initFrom(static_cast<QWidget*>(widget));
}

void QStyleOption_DestroyQStyleOption(void* ptr)
{
	static_cast<QStyleOption*>(ptr)->~QStyleOption();
}

long long QStyleOption_Direction(void* ptr)
{
	return static_cast<QStyleOption*>(ptr)->direction;
}

void QStyleOption_SetDirection(void* ptr, long long vqt)
{
	static_cast<QStyleOption*>(ptr)->direction = static_cast<Qt::LayoutDirection>(vqt);
}

void* QStyleOption_FontMetrics(void* ptr)
{
	return new QFontMetrics(static_cast<QStyleOption*>(ptr)->fontMetrics);
}

void QStyleOption_SetFontMetrics(void* ptr, void* vqf)
{
	static_cast<QStyleOption*>(ptr)->fontMetrics = *static_cast<QFontMetrics*>(vqf);
}

void* QStyleOption_Palette(void* ptr)
{
	return new QPalette(static_cast<QStyleOption*>(ptr)->palette);
}

void QStyleOption_SetPalette(void* ptr, void* vqp)
{
	static_cast<QStyleOption*>(ptr)->palette = *static_cast<QPalette*>(vqp);
}

void* QStyleOption_Rect(void* ptr)
{
	return ({ QRect tmpValue = static_cast<QStyleOption*>(ptr)->rect; new QRect(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void QStyleOption_SetRect(void* ptr, void* vqr)
{
	static_cast<QStyleOption*>(ptr)->rect = *static_cast<QRect*>(vqr);
}

long long QStyleOption_State(void* ptr)
{
	return static_cast<QStyleOption*>(ptr)->state;
}

void QStyleOption_SetState(void* ptr, long long vqs)
{
	static_cast<QStyleOption*>(ptr)->state = static_cast<QStyle::StateFlag>(vqs);
}

void* QStyleOption_StyleObject(void* ptr)
{
	return static_cast<QStyleOption*>(ptr)->styleObject;
}

void QStyleOption_SetStyleObject(void* ptr, void* vqo)
{
		static_cast<QStyleOption*>(ptr)->styleObject = static_cast<QObject*>(vqo);
}

int QStyleOption_Type(void* ptr)
{
	return static_cast<QStyleOption*>(ptr)->type;
}

void QStyleOption_SetType(void* ptr, int vin)
{
	static_cast<QStyleOption*>(ptr)->type = vin;
}

int QStyleOption_Version(void* ptr)
{
	return static_cast<QStyleOption*>(ptr)->version;
}

void QStyleOption_SetVersion(void* ptr, int vin)
{
	static_cast<QStyleOption*>(ptr)->version = vin;
}

Q_DECLARE_METATYPE(QStyleOptionComplex*)
void* QStyleOptionComplex_NewQStyleOptionComplex2(void* other)
{
	return new QStyleOptionComplex(*static_cast<QStyleOptionComplex*>(other));
}

void* QStyleOptionComplex_NewQStyleOptionComplex(int version, int ty)
{
	return new QStyleOptionComplex(version, ty);
}

long long QStyleOptionComplex_ActiveSubControls(void* ptr)
{
	return static_cast<QStyleOptionComplex*>(ptr)->activeSubControls;
}

void QStyleOptionComplex_SetActiveSubControls(void* ptr, long long vqs)
{
	static_cast<QStyleOptionComplex*>(ptr)->activeSubControls = static_cast<QStyle::SubControl>(vqs);
}

long long QStyleOptionComplex_SubControls(void* ptr)
{
	return static_cast<QStyleOptionComplex*>(ptr)->subControls;
}

void QStyleOptionComplex_SetSubControls(void* ptr, long long vqs)
{
	static_cast<QStyleOptionComplex*>(ptr)->subControls = static_cast<QStyle::SubControl>(vqs);
}

Q_DECLARE_METATYPE(QStyleOptionFrame)
Q_DECLARE_METATYPE(QStyleOptionFrame*)
void* QStyleOptionFrame_NewQStyleOptionFrame()
{
	return new QStyleOptionFrame();
}

void* QStyleOptionFrame_NewQStyleOptionFrame2(void* other)
{
	return new QStyleOptionFrame(*static_cast<QStyleOptionFrame*>(other));
}

long long QStyleOptionFrame_Features(void* ptr)
{
	return static_cast<QStyleOptionFrame*>(ptr)->features;
}

void QStyleOptionFrame_SetFeatures(void* ptr, long long vqs)
{
	static_cast<QStyleOptionFrame*>(ptr)->features = static_cast<QStyleOptionFrame::FrameFeature>(vqs);
}

long long QStyleOptionFrame_FrameShape(void* ptr)
{
	return static_cast<QStyleOptionFrame*>(ptr)->frameShape;
}

void QStyleOptionFrame_SetFrameShape(void* ptr, long long vqf)
{
	static_cast<QStyleOptionFrame*>(ptr)->frameShape = static_cast<QFrame::Shape>(vqf);
}

int QStyleOptionFrame_LineWidth(void* ptr)
{
	return static_cast<QStyleOptionFrame*>(ptr)->lineWidth;
}

void QStyleOptionFrame_SetLineWidth(void* ptr, int vin)
{
	static_cast<QStyleOptionFrame*>(ptr)->lineWidth = vin;
}

int QStyleOptionFrame_MidLineWidth(void* ptr)
{
	return static_cast<QStyleOptionFrame*>(ptr)->midLineWidth;
}

void QStyleOptionFrame_SetMidLineWidth(void* ptr, int vin)
{
	static_cast<QStyleOptionFrame*>(ptr)->midLineWidth = vin;
}

Q_DECLARE_METATYPE(QStyleOptionGraphicsItem)
Q_DECLARE_METATYPE(QStyleOptionGraphicsItem*)
void* QStyleOptionGraphicsItem_NewQStyleOptionGraphicsItem()
{
	return new QStyleOptionGraphicsItem();
}

void* QStyleOptionGraphicsItem_NewQStyleOptionGraphicsItem2(void* other)
{
	return new QStyleOptionGraphicsItem(*static_cast<QStyleOptionGraphicsItem*>(other));
}

double QStyleOptionGraphicsItem_QStyleOptionGraphicsItem_LevelOfDetailFromTransform(void* worldTransform)
{
	return QStyleOptionGraphicsItem::levelOfDetailFromTransform(*static_cast<QTransform*>(worldTransform));
}

void* QStyleOptionGraphicsItem_ExposedRect(void* ptr)
{
	return ({ QRectF tmpValue = static_cast<QStyleOptionGraphicsItem*>(ptr)->exposedRect; new QRectF(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void QStyleOptionGraphicsItem_SetExposedRect(void* ptr, void* vqr)
{
	static_cast<QStyleOptionGraphicsItem*>(ptr)->exposedRect = *static_cast<QRectF*>(vqr);
}

Q_DECLARE_METATYPE(QStyleOptionMenuItem)
Q_DECLARE_METATYPE(QStyleOptionMenuItem*)
void* QStyleOptionMenuItem_NewQStyleOptionMenuItem()
{
	return new QStyleOptionMenuItem();
}

void* QStyleOptionMenuItem_NewQStyleOptionMenuItem2(void* other)
{
	return new QStyleOptionMenuItem(*static_cast<QStyleOptionMenuItem*>(other));
}

long long QStyleOptionMenuItem_CheckType(void* ptr)
{
	return static_cast<QStyleOptionMenuItem*>(ptr)->checkType;
}

void QStyleOptionMenuItem_SetCheckType(void* ptr, long long vqs)
{
	static_cast<QStyleOptionMenuItem*>(ptr)->checkType = static_cast<QStyleOptionMenuItem::CheckType>(vqs);
}

char QStyleOptionMenuItem_Checked(void* ptr)
{
	return static_cast<QStyleOptionMenuItem*>(ptr)->checked;
}

void QStyleOptionMenuItem_SetChecked(void* ptr, char vbo)
{
	static_cast<QStyleOptionMenuItem*>(ptr)->checked = vbo != 0;
}

void* QStyleOptionMenuItem_Font(void* ptr)
{
	return new QFont(static_cast<QStyleOptionMenuItem*>(ptr)->font);
}

void QStyleOptionMenuItem_SetFont(void* ptr, void* vqf)
{
	static_cast<QStyleOptionMenuItem*>(ptr)->font = *static_cast<QFont*>(vqf);
}

void* QStyleOptionMenuItem_Icon(void* ptr)
{
	return new QIcon(static_cast<QStyleOptionMenuItem*>(ptr)->icon);
}

void QStyleOptionMenuItem_SetIcon(void* ptr, void* vqi)
{
	static_cast<QStyleOptionMenuItem*>(ptr)->icon = *static_cast<QIcon*>(vqi);
}

int QStyleOptionMenuItem_MaxIconWidth(void* ptr)
{
	return static_cast<QStyleOptionMenuItem*>(ptr)->maxIconWidth;
}

void QStyleOptionMenuItem_SetMaxIconWidth(void* ptr, int vin)
{
	static_cast<QStyleOptionMenuItem*>(ptr)->maxIconWidth = vin;
}

char QStyleOptionMenuItem_MenuHasCheckableItems(void* ptr)
{
	return static_cast<QStyleOptionMenuItem*>(ptr)->menuHasCheckableItems;
}

void QStyleOptionMenuItem_SetMenuHasCheckableItems(void* ptr, char vbo)
{
	static_cast<QStyleOptionMenuItem*>(ptr)->menuHasCheckableItems = vbo != 0;
}

long long QStyleOptionMenuItem_MenuItemType(void* ptr)
{
	return static_cast<QStyleOptionMenuItem*>(ptr)->menuItemType;
}

void QStyleOptionMenuItem_SetMenuItemType(void* ptr, long long vqs)
{
	static_cast<QStyleOptionMenuItem*>(ptr)->menuItemType = static_cast<QStyleOptionMenuItem::MenuItemType>(vqs);
}

void* QStyleOptionMenuItem_MenuRect(void* ptr)
{
	return ({ QRect tmpValue = static_cast<QStyleOptionMenuItem*>(ptr)->menuRect; new QRect(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void QStyleOptionMenuItem_SetMenuRect(void* ptr, void* vqr)
{
	static_cast<QStyleOptionMenuItem*>(ptr)->menuRect = *static_cast<QRect*>(vqr);
}

int QStyleOptionMenuItem_TabWidth(void* ptr)
{
	return static_cast<QStyleOptionMenuItem*>(ptr)->tabWidth;
}

void QStyleOptionMenuItem_SetTabWidth(void* ptr, int vin)
{
	static_cast<QStyleOptionMenuItem*>(ptr)->tabWidth = vin;
}

struct QtWidgets_PackedString QStyleOptionMenuItem_Text(void* ptr)
{
	return ({ QByteArray t61111c = static_cast<QStyleOptionMenuItem*>(ptr)->text.toUtf8(); QtWidgets_PackedString { const_cast<char*>(t61111c.prepend("WHITESPACE").constData()+10), t61111c.size()-10 }; });
}

void QStyleOptionMenuItem_SetText(void* ptr, struct QtWidgets_PackedString vqs)
{
	static_cast<QStyleOptionMenuItem*>(ptr)->text = QString::fromUtf8(vqs.data, vqs.len);
}

Q_DECLARE_METATYPE(QStyleOptionSlider)
Q_DECLARE_METATYPE(QStyleOptionSlider*)
void* QStyleOptionSlider_NewQStyleOptionSlider()
{
	return new QStyleOptionSlider();
}

void* QStyleOptionSlider_NewQStyleOptionSlider2(void* other)
{
	return new QStyleOptionSlider(*static_cast<QStyleOptionSlider*>(other));
}

char QStyleOptionSlider_DialWrapping(void* ptr)
{
	return static_cast<QStyleOptionSlider*>(ptr)->dialWrapping;
}

void QStyleOptionSlider_SetDialWrapping(void* ptr, char vbo)
{
	static_cast<QStyleOptionSlider*>(ptr)->dialWrapping = vbo != 0;
}

int QStyleOptionSlider_Maximum(void* ptr)
{
	return static_cast<QStyleOptionSlider*>(ptr)->maximum;
}

void QStyleOptionSlider_SetMaximum(void* ptr, int vin)
{
	static_cast<QStyleOptionSlider*>(ptr)->maximum = vin;
}

int QStyleOptionSlider_Minimum(void* ptr)
{
	return static_cast<QStyleOptionSlider*>(ptr)->minimum;
}

void QStyleOptionSlider_SetMinimum(void* ptr, int vin)
{
	static_cast<QStyleOptionSlider*>(ptr)->minimum = vin;
}

double QStyleOptionSlider_NotchTarget(void* ptr)
{
	return static_cast<QStyleOptionSlider*>(ptr)->notchTarget;
}

void QStyleOptionSlider_SetNotchTarget(void* ptr, double vqr)
{
	static_cast<QStyleOptionSlider*>(ptr)->notchTarget = vqr;
}

long long QStyleOptionSlider_Orientation(void* ptr)
{
	return static_cast<QStyleOptionSlider*>(ptr)->orientation;
}

void QStyleOptionSlider_SetOrientation(void* ptr, long long vqt)
{
	static_cast<QStyleOptionSlider*>(ptr)->orientation = static_cast<Qt::Orientation>(vqt);
}

int QStyleOptionSlider_PageStep(void* ptr)
{
	return static_cast<QStyleOptionSlider*>(ptr)->pageStep;
}

void QStyleOptionSlider_SetPageStep(void* ptr, int vin)
{
	static_cast<QStyleOptionSlider*>(ptr)->pageStep = vin;
}

int QStyleOptionSlider_SingleStep(void* ptr)
{
	return static_cast<QStyleOptionSlider*>(ptr)->singleStep;
}

void QStyleOptionSlider_SetSingleStep(void* ptr, int vin)
{
	static_cast<QStyleOptionSlider*>(ptr)->singleStep = vin;
}

int QStyleOptionSlider_SliderPosition(void* ptr)
{
	return static_cast<QStyleOptionSlider*>(ptr)->sliderPosition;
}

void QStyleOptionSlider_SetSliderPosition(void* ptr, int vin)
{
	static_cast<QStyleOptionSlider*>(ptr)->sliderPosition = vin;
}

int QStyleOptionSlider_SliderValue(void* ptr)
{
	return static_cast<QStyleOptionSlider*>(ptr)->sliderValue;
}

void QStyleOptionSlider_SetSliderValue(void* ptr, int vin)
{
	static_cast<QStyleOptionSlider*>(ptr)->sliderValue = vin;
}

int QStyleOptionSlider_TickInterval(void* ptr)
{
	return static_cast<QStyleOptionSlider*>(ptr)->tickInterval;
}

void QStyleOptionSlider_SetTickInterval(void* ptr, int vin)
{
	static_cast<QStyleOptionSlider*>(ptr)->tickInterval = vin;
}

long long QStyleOptionSlider_TickPosition(void* ptr)
{
	return static_cast<QStyleOptionSlider*>(ptr)->tickPosition;
}

void QStyleOptionSlider_SetTickPosition(void* ptr, long long vqs)
{
	static_cast<QStyleOptionSlider*>(ptr)->tickPosition = static_cast<QSlider::TickPosition>(vqs);
}

char QStyleOptionSlider_UpsideDown(void* ptr)
{
	return static_cast<QStyleOptionSlider*>(ptr)->upsideDown;
}

void QStyleOptionSlider_SetUpsideDown(void* ptr, char vbo)
{
	static_cast<QStyleOptionSlider*>(ptr)->upsideDown = vbo != 0;
}

class MyQWidget: public QWidget
{
public:
	MyQWidget(QWidget *parent = Q_NULLPTR, Qt::WindowFlags ff = Qt::WindowFlags()) : QWidget(parent, ff) {QWidget_QWidget_QRegisterMetaType();};
	bool close() { return callbackQWidget_Close(this) != 0; };
	bool event(QEvent * event) { return callbackQWidget_Event(this, event) != 0; };
	bool focusNextPrevChild(bool next) { return callbackQWidget_FocusNextPrevChild(this, next) != 0; };
	bool nativeEvent(const QByteArray & eventType, void * message, long * result) { return callbackQWidget_NativeEvent(this, const_cast<QByteArray*>(&eventType), message, result) != 0; };
	void actionEvent(QActionEvent * event) { callbackQWidget_ActionEvent(this, event); };
	void changeEvent(QEvent * event) { callbackQWidget_ChangeEvent(this, event); };
	void closeEvent(QCloseEvent * event) { callbackQWidget_CloseEvent(this, event); };
	void contextMenuEvent(QContextMenuEvent * event) { callbackQWidget_ContextMenuEvent(this, event); };
	void Signal_CustomContextMenuRequested(const QPoint & pos) { callbackQWidget_CustomContextMenuRequested(this, const_cast<QPoint*>(&pos)); };
	void dragEnterEvent(QDragEnterEvent * event) { callbackQWidget_DragEnterEvent(this, event); };
	void dragLeaveEvent(QDragLeaveEvent * event) { callbackQWidget_DragLeaveEvent(this, event); };
	void dragMoveEvent(QDragMoveEvent * event) { callbackQWidget_DragMoveEvent(this, event); };
	void dropEvent(QDropEvent * event) { callbackQWidget_DropEvent(this, event); };
	void enterEvent(QEvent * event) { callbackQWidget_EnterEvent(this, event); };
	void focusInEvent(QFocusEvent * event) { callbackQWidget_FocusInEvent(this, event); };
	void focusOutEvent(QFocusEvent * event) { callbackQWidget_FocusOutEvent(this, event); };
	void hide() { callbackQWidget_Hide(this); };
	void hideEvent(QHideEvent * event) { callbackQWidget_HideEvent(this, event); };
	void inputMethodEvent(QInputMethodEvent * event) { callbackQWidget_InputMethodEvent(this, event); };
	void keyPressEvent(QKeyEvent * event) { callbackQWidget_KeyPressEvent(this, event); };
	void keyReleaseEvent(QKeyEvent * event) { callbackQWidget_KeyReleaseEvent(this, event); };
	void leaveEvent(QEvent * event) { callbackQWidget_LeaveEvent(this, event); };
	void lower() { callbackQWidget_Lower(this); };
	void mouseDoubleClickEvent(QMouseEvent * event) { callbackQWidget_MouseDoubleClickEvent(this, event); };
	void mouseMoveEvent(QMouseEvent * event) { callbackQWidget_MouseMoveEvent(this, event); };
	void mousePressEvent(QMouseEvent * event) { callbackQWidget_MousePressEvent(this, event); };
	void mouseReleaseEvent(QMouseEvent * event) { callbackQWidget_MouseReleaseEvent(this, event); };
	void moveEvent(QMoveEvent * event) { callbackQWidget_MoveEvent(this, event); };
	void paintEvent(QPaintEvent * event) { callbackQWidget_PaintEvent(this, event); };
	void raise() { callbackQWidget_Raise(this); };
	void repaint() { callbackQWidget_Repaint(this); };
	void resizeEvent(QResizeEvent * event) { callbackQWidget_ResizeEvent(this, event); };
	void setDisabled(bool disable) { callbackQWidget_SetDisabled(this, disable); };
	void setEnabled(bool vbo) { callbackQWidget_SetEnabled(this, vbo); };
	void setFocus() { callbackQWidget_SetFocus2(this); };
	void setHidden(bool hidden) { callbackQWidget_SetHidden(this, hidden); };
	void setStyleSheet(const QString & styleSheet) { QByteArray t728ae7 = styleSheet.toUtf8(); QtWidgets_PackedString styleSheetPacked = { const_cast<char*>(t728ae7.prepend("WHITESPACE").constData()+10), t728ae7.size()-10 };callbackQWidget_SetStyleSheet(this, styleSheetPacked); };
	void setVisible(bool visible) { callbackQWidget_SetVisible(this, visible); };
	void setWindowModified(bool vbo) { callbackQWidget_SetWindowModified(this, vbo); };
	void setWindowTitle(const QString & vqs) { QByteArray tda39a3 = vqs.toUtf8(); QtWidgets_PackedString vqsPacked = { const_cast<char*>(tda39a3.prepend("WHITESPACE").constData()+10), tda39a3.size()-10 };callbackQWidget_SetWindowTitle(this, vqsPacked); };
	void show() { callbackQWidget_Show(this); };
	void showEvent(QShowEvent * event) { callbackQWidget_ShowEvent(this, event); };
	void showFullScreen() { callbackQWidget_ShowFullScreen(this); };
	void showMaximized() { callbackQWidget_ShowMaximized(this); };
	void showMinimized() { callbackQWidget_ShowMinimized(this); };
	void showNormal() { callbackQWidget_ShowNormal(this); };
	void tabletEvent(QTabletEvent * event) { callbackQWidget_TabletEvent(this, event); };
	void update() { callbackQWidget_Update(this); };
	void updateMicroFocus() { callbackQWidget_UpdateMicroFocus(this); };
	void wheelEvent(QWheelEvent * event) { callbackQWidget_WheelEvent(this, event); };
	void Signal_WindowIconChanged(const QIcon & icon) { callbackQWidget_WindowIconChanged(this, const_cast<QIcon*>(&icon)); };
	void Signal_WindowTitleChanged(const QString & title) { QByteArray t3c6de1 = title.toUtf8(); QtWidgets_PackedString titlePacked = { const_cast<char*>(t3c6de1.prepend("WHITESPACE").constData()+10), t3c6de1.size()-10 };callbackQWidget_WindowTitleChanged(this, titlePacked); };
	 ~MyQWidget() { callbackQWidget_DestroyQWidget(this); };
	QPaintEngine * paintEngine() const { return static_cast<QPaintEngine*>(callbackQWidget_PaintEngine(const_cast<void*>(static_cast<const void*>(this)))); };
	QSize minimumSizeHint() const { return *static_cast<QSize*>(callbackQWidget_MinimumSizeHint(const_cast<void*>(static_cast<const void*>(this)))); };
	QSize sizeHint() const { return *static_cast<QSize*>(callbackQWidget_SizeHint(const_cast<void*>(static_cast<const void*>(this)))); };
	QVariant inputMethodQuery(Qt::InputMethodQuery query) const { return *static_cast<QVariant*>(callbackQWidget_InputMethodQuery(const_cast<void*>(static_cast<const void*>(this)), query)); };
	bool hasHeightForWidth() const { return callbackQWidget_HasHeightForWidth(const_cast<void*>(static_cast<const void*>(this))) != 0; };
	const QMetaObject * metaObject() const { return static_cast<QMetaObject*>(callbackQWidget_MetaObject(const_cast<void*>(static_cast<const void*>(this)))); };
	int heightForWidth(int w) const { return callbackQWidget_HeightForWidth(const_cast<void*>(static_cast<const void*>(this)), w); };
	int metric(QPaintDevice::PaintDeviceMetric m) const { return callbackQWidget_Metric(const_cast<void*>(static_cast<const void*>(this)), m); };
	void initPainter(QPainter * painter) const { callbackQWidget_InitPainter(const_cast<void*>(static_cast<const void*>(this)), painter); };
	bool eventFilter(QObject * watched, QEvent * event) { return callbackQWidget_EventFilter(this, watched, event) != 0; };
	void childEvent(QChildEvent * event) { callbackQWidget_ChildEvent(this, event); };
	void connectNotify(const QMetaMethod & sign) { callbackQWidget_ConnectNotify(this, const_cast<QMetaMethod*>(&sign)); };
	void customEvent(QEvent * event) { callbackQWidget_CustomEvent(this, event); };
	void deleteLater() { callbackQWidget_DeleteLater(this); };
	void Signal_Destroyed(QObject * obj) { callbackQWidget_Destroyed(this, obj); };
	void disconnectNotify(const QMetaMethod & sign) { callbackQWidget_DisconnectNotify(this, const_cast<QMetaMethod*>(&sign)); };
	void Signal_ObjectNameChanged(const QString & objectName) { QByteArray taa2c4f = objectName.toUtf8(); QtWidgets_PackedString objectNamePacked = { const_cast<char*>(taa2c4f.prepend("WHITESPACE").constData()+10), taa2c4f.size()-10 };callbackQWidget_ObjectNameChanged(this, objectNamePacked); };
	void timerEvent(QTimerEvent * event) { callbackQWidget_TimerEvent(this, event); };
};

Q_DECLARE_METATYPE(QWidget*)
Q_DECLARE_METATYPE(MyQWidget*)

int QWidget_QWidget_QRegisterMetaType(){qRegisterMetaType<QWidget*>(); return qRegisterMetaType<MyQWidget*>();}

void* QWidget_Grab(void* ptr, void* rectangle)
{
		return new QPixmap(static_cast<QWidget*>(ptr)->grab(*static_cast<QRect*>(rectangle)));
}

struct QtWidgets_PackedString QWidget_QWidget_Tr(char* s, char* c, int n)
{
		return ({ QByteArray tcab177 = QWidget::tr(const_cast<const char*>(s), const_cast<const char*>(c), n).toUtf8(); QtWidgets_PackedString { const_cast<char*>(tcab177.prepend("WHITESPACE").constData()+10), tcab177.size()-10 }; });
}

void* QWidget_QWidget_CreateWindowContainer(void* window, void* parent, long long flags)
{
		return QWidget::createWindowContainer(static_cast<QWindow*>(window), static_cast<QWidget*>(parent), static_cast<Qt::WindowType>(flags));
}

void* QWidget_QWidget_Find(uintptr_t id)
{
		return QWidget::find(id);
}

void* QWidget_QWidget_KeyboardGrabber()
{
		return QWidget::keyboardGrabber();
}

void* QWidget_QWidget_MouseGrabber()
{
		return QWidget::mouseGrabber();
}

void* QWidget_NewQWidget(void* parent, long long ff)
{
	return new MyQWidget(static_cast<QWidget*>(parent), static_cast<Qt::WindowType>(ff));
}

char QWidget_Close(void* ptr)
{
		bool returnArg;
	QMetaObject::invokeMethod(static_cast<QWidget*>(ptr), "close", Q_RETURN_ARG(bool, returnArg));
	return returnArg;
}

char QWidget_CloseDefault(void* ptr)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		return static_cast<QMenu*>(ptr)->QMenu::close();
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		return static_cast<QLabel*>(ptr)->QLabel::close();
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsView*>(ptr)->QGraphicsView::close();
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		return static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::close();
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		return static_cast<QFrame*>(ptr)->QFrame::close();
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::close();
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		return static_cast<QScrollBar*>(ptr)->QScrollBar::close();
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		return static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::close();
	} else {
		return static_cast<QWidget*>(ptr)->QWidget::close();
	}
}

char QWidget_Event(void* ptr, void* event)
{
		return static_cast<QWidget*>(ptr)->event(static_cast<QEvent*>(event));
}

char QWidget_EventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		return static_cast<QMenu*>(ptr)->QMenu::event(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		return static_cast<QLabel*>(ptr)->QLabel::event(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsView*>(ptr)->QGraphicsView::event(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		return static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::event(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		return static_cast<QFrame*>(ptr)->QFrame::event(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::event(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		return static_cast<QScrollBar*>(ptr)->QScrollBar::event(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		return static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::event(static_cast<QEvent*>(event));
	} else {
		return static_cast<QWidget*>(ptr)->QWidget::event(static_cast<QEvent*>(event));
	}
}

char QWidget_FocusNextChild(void* ptr)
{
		return static_cast<QWidget*>(ptr)->focusNextChild();
}

char QWidget_FocusNextPrevChild(void* ptr, char next)
{
		return static_cast<QWidget*>(ptr)->focusNextPrevChild(next != 0);
}

char QWidget_FocusNextPrevChildDefault(void* ptr, char next)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		return static_cast<QMenu*>(ptr)->QMenu::focusNextPrevChild(next != 0);
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		return static_cast<QLabel*>(ptr)->QLabel::focusNextPrevChild(next != 0);
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsView*>(ptr)->QGraphicsView::focusNextPrevChild(next != 0);
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		return static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::focusNextPrevChild(next != 0);
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		return static_cast<QFrame*>(ptr)->QFrame::focusNextPrevChild(next != 0);
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::focusNextPrevChild(next != 0);
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		return static_cast<QScrollBar*>(ptr)->QScrollBar::focusNextPrevChild(next != 0);
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		return static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::focusNextPrevChild(next != 0);
	} else {
		return static_cast<QWidget*>(ptr)->QWidget::focusNextPrevChild(next != 0);
	}
}

char QWidget_FocusPreviousChild(void* ptr)
{
		return static_cast<QWidget*>(ptr)->focusPreviousChild();
}

char QWidget_NativeEvent(void* ptr, void* eventType, void* message, long* result)
{
		return static_cast<QWidget*>(ptr)->nativeEvent(*static_cast<QByteArray*>(eventType), message, result);
}

char QWidget_NativeEventDefault(void* ptr, void* eventType, void* message, long* result)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		return static_cast<QMenu*>(ptr)->QMenu::nativeEvent(*static_cast<QByteArray*>(eventType), message, result);
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		return static_cast<QLabel*>(ptr)->QLabel::nativeEvent(*static_cast<QByteArray*>(eventType), message, result);
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsView*>(ptr)->QGraphicsView::nativeEvent(*static_cast<QByteArray*>(eventType), message, result);
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		return static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::nativeEvent(*static_cast<QByteArray*>(eventType), message, result);
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		return static_cast<QFrame*>(ptr)->QFrame::nativeEvent(*static_cast<QByteArray*>(eventType), message, result);
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::nativeEvent(*static_cast<QByteArray*>(eventType), message, result);
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		return static_cast<QScrollBar*>(ptr)->QScrollBar::nativeEvent(*static_cast<QByteArray*>(eventType), message, result);
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		return static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::nativeEvent(*static_cast<QByteArray*>(eventType), message, result);
	} else {
		return static_cast<QWidget*>(ptr)->QWidget::nativeEvent(*static_cast<QByteArray*>(eventType), message, result);
	}
}

char QWidget_RestoreGeometry(void* ptr, void* geometry)
{
		return static_cast<QWidget*>(ptr)->restoreGeometry(*static_cast<QByteArray*>(geometry));
}

int QWidget_GrabShortcut(void* ptr, void* key, long long context)
{
		return static_cast<QWidget*>(ptr)->grabShortcut(*static_cast<QKeySequence*>(key), static_cast<Qt::ShortcutContext>(context));
}

void QWidget_ActionEvent(void* ptr, void* event)
{
		static_cast<QWidget*>(ptr)->actionEvent(static_cast<QActionEvent*>(event));
}

void QWidget_ActionEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::actionEvent(static_cast<QActionEvent*>(event));
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::actionEvent(static_cast<QActionEvent*>(event));
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::actionEvent(static_cast<QActionEvent*>(event));
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::actionEvent(static_cast<QActionEvent*>(event));
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::actionEvent(static_cast<QActionEvent*>(event));
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::actionEvent(static_cast<QActionEvent*>(event));
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::actionEvent(static_cast<QActionEvent*>(event));
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::actionEvent(static_cast<QActionEvent*>(event));
	} else {
		static_cast<QWidget*>(ptr)->QWidget::actionEvent(static_cast<QActionEvent*>(event));
	}
}

void QWidget_ActivateWindow(void* ptr)
{
		static_cast<QWidget*>(ptr)->activateWindow();
}

void QWidget_AddAction(void* ptr, void* action)
{
		static_cast<QWidget*>(ptr)->addAction(static_cast<QAction*>(action));
}

void QWidget_AddActions(void* ptr, void* actions)
{
		static_cast<QWidget*>(ptr)->addActions(({ QList<QAction *>* tmpP = static_cast<QList<QAction *>*>(actions); QList<QAction *> tmpV = *tmpP; tmpP->~QList(); free(tmpP); tmpV; }));
}

void QWidget_AdjustSize(void* ptr)
{
		static_cast<QWidget*>(ptr)->adjustSize();
}

void QWidget_ChangeEvent(void* ptr, void* event)
{
		static_cast<QWidget*>(ptr)->changeEvent(static_cast<QEvent*>(event));
}

void QWidget_ChangeEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::changeEvent(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::changeEvent(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::changeEvent(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::changeEvent(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::changeEvent(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::changeEvent(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::changeEvent(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::changeEvent(static_cast<QEvent*>(event));
	} else {
		static_cast<QWidget*>(ptr)->QWidget::changeEvent(static_cast<QEvent*>(event));
	}
}

void QWidget_ClearFocus(void* ptr)
{
		static_cast<QWidget*>(ptr)->clearFocus();
}

void QWidget_ClearMask(void* ptr)
{
		static_cast<QWidget*>(ptr)->clearMask();
}

void QWidget_CloseEvent(void* ptr, void* event)
{
		static_cast<QWidget*>(ptr)->closeEvent(static_cast<QCloseEvent*>(event));
}

void QWidget_CloseEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::closeEvent(static_cast<QCloseEvent*>(event));
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::closeEvent(static_cast<QCloseEvent*>(event));
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::closeEvent(static_cast<QCloseEvent*>(event));
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::closeEvent(static_cast<QCloseEvent*>(event));
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::closeEvent(static_cast<QCloseEvent*>(event));
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::closeEvent(static_cast<QCloseEvent*>(event));
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::closeEvent(static_cast<QCloseEvent*>(event));
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::closeEvent(static_cast<QCloseEvent*>(event));
	} else {
		static_cast<QWidget*>(ptr)->QWidget::closeEvent(static_cast<QCloseEvent*>(event));
	}
}

void QWidget_ContextMenuEvent(void* ptr, void* event)
{
		static_cast<QWidget*>(ptr)->contextMenuEvent(static_cast<QContextMenuEvent*>(event));
}

void QWidget_ContextMenuEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::contextMenuEvent(static_cast<QContextMenuEvent*>(event));
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::contextMenuEvent(static_cast<QContextMenuEvent*>(event));
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::contextMenuEvent(static_cast<QContextMenuEvent*>(event));
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::contextMenuEvent(static_cast<QContextMenuEvent*>(event));
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::contextMenuEvent(static_cast<QContextMenuEvent*>(event));
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::contextMenuEvent(static_cast<QContextMenuEvent*>(event));
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::contextMenuEvent(static_cast<QContextMenuEvent*>(event));
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::contextMenuEvent(static_cast<QContextMenuEvent*>(event));
	} else {
		static_cast<QWidget*>(ptr)->QWidget::contextMenuEvent(static_cast<QContextMenuEvent*>(event));
	}
}

void QWidget_Create(void* ptr, uintptr_t window, char initializeWindow, char destroyOldWindow)
{
		static_cast<QWidget*>(ptr)->create(window, initializeWindow != 0, destroyOldWindow != 0);
}

void QWidget_ConnectCustomContextMenuRequested(void* ptr, long long t)
{
	QObject::connect(static_cast<QWidget*>(ptr), static_cast<void (QWidget::*)(const QPoint &)>(&QWidget::customContextMenuRequested), static_cast<MyQWidget*>(ptr), static_cast<void (MyQWidget::*)(const QPoint &)>(&MyQWidget::Signal_CustomContextMenuRequested), static_cast<Qt::ConnectionType>(t));
}

void QWidget_DisconnectCustomContextMenuRequested(void* ptr)
{
	QObject::disconnect(static_cast<QWidget*>(ptr), static_cast<void (QWidget::*)(const QPoint &)>(&QWidget::customContextMenuRequested), static_cast<MyQWidget*>(ptr), static_cast<void (MyQWidget::*)(const QPoint &)>(&MyQWidget::Signal_CustomContextMenuRequested));
}

void QWidget_CustomContextMenuRequested(void* ptr, void* pos)
{
		static_cast<QWidget*>(ptr)->customContextMenuRequested(*static_cast<QPoint*>(pos));
}

void QWidget_Destroy(void* ptr, char destroyWindow, char destroySubWindows)
{
		static_cast<QWidget*>(ptr)->destroy(destroyWindow != 0, destroySubWindows != 0);
}

void QWidget_DragEnterEvent(void* ptr, void* event)
{
		static_cast<QWidget*>(ptr)->dragEnterEvent(static_cast<QDragEnterEvent*>(event));
}

void QWidget_DragEnterEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::dragEnterEvent(static_cast<QDragEnterEvent*>(event));
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::dragEnterEvent(static_cast<QDragEnterEvent*>(event));
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::dragEnterEvent(static_cast<QDragEnterEvent*>(event));
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::dragEnterEvent(static_cast<QDragEnterEvent*>(event));
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::dragEnterEvent(static_cast<QDragEnterEvent*>(event));
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::dragEnterEvent(static_cast<QDragEnterEvent*>(event));
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::dragEnterEvent(static_cast<QDragEnterEvent*>(event));
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::dragEnterEvent(static_cast<QDragEnterEvent*>(event));
	} else {
		static_cast<QWidget*>(ptr)->QWidget::dragEnterEvent(static_cast<QDragEnterEvent*>(event));
	}
}

void QWidget_DragLeaveEvent(void* ptr, void* event)
{
		static_cast<QWidget*>(ptr)->dragLeaveEvent(static_cast<QDragLeaveEvent*>(event));
}

void QWidget_DragLeaveEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::dragLeaveEvent(static_cast<QDragLeaveEvent*>(event));
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::dragLeaveEvent(static_cast<QDragLeaveEvent*>(event));
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::dragLeaveEvent(static_cast<QDragLeaveEvent*>(event));
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::dragLeaveEvent(static_cast<QDragLeaveEvent*>(event));
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::dragLeaveEvent(static_cast<QDragLeaveEvent*>(event));
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::dragLeaveEvent(static_cast<QDragLeaveEvent*>(event));
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::dragLeaveEvent(static_cast<QDragLeaveEvent*>(event));
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::dragLeaveEvent(static_cast<QDragLeaveEvent*>(event));
	} else {
		static_cast<QWidget*>(ptr)->QWidget::dragLeaveEvent(static_cast<QDragLeaveEvent*>(event));
	}
}

void QWidget_DragMoveEvent(void* ptr, void* event)
{
		static_cast<QWidget*>(ptr)->dragMoveEvent(static_cast<QDragMoveEvent*>(event));
}

void QWidget_DragMoveEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::dragMoveEvent(static_cast<QDragMoveEvent*>(event));
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::dragMoveEvent(static_cast<QDragMoveEvent*>(event));
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::dragMoveEvent(static_cast<QDragMoveEvent*>(event));
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::dragMoveEvent(static_cast<QDragMoveEvent*>(event));
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::dragMoveEvent(static_cast<QDragMoveEvent*>(event));
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::dragMoveEvent(static_cast<QDragMoveEvent*>(event));
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::dragMoveEvent(static_cast<QDragMoveEvent*>(event));
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::dragMoveEvent(static_cast<QDragMoveEvent*>(event));
	} else {
		static_cast<QWidget*>(ptr)->QWidget::dragMoveEvent(static_cast<QDragMoveEvent*>(event));
	}
}

void QWidget_DropEvent(void* ptr, void* event)
{
		static_cast<QWidget*>(ptr)->dropEvent(static_cast<QDropEvent*>(event));
}

void QWidget_DropEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::dropEvent(static_cast<QDropEvent*>(event));
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::dropEvent(static_cast<QDropEvent*>(event));
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::dropEvent(static_cast<QDropEvent*>(event));
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::dropEvent(static_cast<QDropEvent*>(event));
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::dropEvent(static_cast<QDropEvent*>(event));
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::dropEvent(static_cast<QDropEvent*>(event));
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::dropEvent(static_cast<QDropEvent*>(event));
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::dropEvent(static_cast<QDropEvent*>(event));
	} else {
		static_cast<QWidget*>(ptr)->QWidget::dropEvent(static_cast<QDropEvent*>(event));
	}
}

void QWidget_EnterEvent(void* ptr, void* event)
{
		static_cast<QWidget*>(ptr)->enterEvent(static_cast<QEvent*>(event));
}

void QWidget_EnterEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::enterEvent(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::enterEvent(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::enterEvent(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::enterEvent(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::enterEvent(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::enterEvent(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::enterEvent(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::enterEvent(static_cast<QEvent*>(event));
	} else {
		static_cast<QWidget*>(ptr)->QWidget::enterEvent(static_cast<QEvent*>(event));
	}
}

void QWidget_FocusInEvent(void* ptr, void* event)
{
		static_cast<QWidget*>(ptr)->focusInEvent(static_cast<QFocusEvent*>(event));
}

void QWidget_FocusInEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::focusInEvent(static_cast<QFocusEvent*>(event));
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::focusInEvent(static_cast<QFocusEvent*>(event));
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::focusInEvent(static_cast<QFocusEvent*>(event));
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::focusInEvent(static_cast<QFocusEvent*>(event));
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::focusInEvent(static_cast<QFocusEvent*>(event));
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::focusInEvent(static_cast<QFocusEvent*>(event));
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::focusInEvent(static_cast<QFocusEvent*>(event));
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::focusInEvent(static_cast<QFocusEvent*>(event));
	} else {
		static_cast<QWidget*>(ptr)->QWidget::focusInEvent(static_cast<QFocusEvent*>(event));
	}
}

void QWidget_FocusOutEvent(void* ptr, void* event)
{
		static_cast<QWidget*>(ptr)->focusOutEvent(static_cast<QFocusEvent*>(event));
}

void QWidget_FocusOutEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::focusOutEvent(static_cast<QFocusEvent*>(event));
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::focusOutEvent(static_cast<QFocusEvent*>(event));
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::focusOutEvent(static_cast<QFocusEvent*>(event));
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::focusOutEvent(static_cast<QFocusEvent*>(event));
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::focusOutEvent(static_cast<QFocusEvent*>(event));
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::focusOutEvent(static_cast<QFocusEvent*>(event));
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::focusOutEvent(static_cast<QFocusEvent*>(event));
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::focusOutEvent(static_cast<QFocusEvent*>(event));
	} else {
		static_cast<QWidget*>(ptr)->QWidget::focusOutEvent(static_cast<QFocusEvent*>(event));
	}
}

void QWidget_GrabGesture(void* ptr, long long gesture, long long flags)
{
		static_cast<QWidget*>(ptr)->grabGesture(static_cast<Qt::GestureType>(gesture), static_cast<Qt::GestureFlag>(flags));
}

void QWidget_GrabKeyboard(void* ptr)
{
		static_cast<QWidget*>(ptr)->grabKeyboard();
}

void QWidget_GrabMouse(void* ptr)
{
		static_cast<QWidget*>(ptr)->grabMouse();
}

void QWidget_GrabMouse2(void* ptr, void* cursor)
{
		static_cast<QWidget*>(ptr)->grabMouse(*static_cast<QCursor*>(cursor));
}

void QWidget_Hide(void* ptr)
{
		QMetaObject::invokeMethod(static_cast<QWidget*>(ptr), "hide");
}

void QWidget_HideDefault(void* ptr)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::hide();
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::hide();
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::hide();
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::hide();
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::hide();
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::hide();
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::hide();
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::hide();
	} else {
		static_cast<QWidget*>(ptr)->QWidget::hide();
	}
}

void QWidget_HideEvent(void* ptr, void* event)
{
		static_cast<QWidget*>(ptr)->hideEvent(static_cast<QHideEvent*>(event));
}

void QWidget_HideEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::hideEvent(static_cast<QHideEvent*>(event));
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::hideEvent(static_cast<QHideEvent*>(event));
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::hideEvent(static_cast<QHideEvent*>(event));
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::hideEvent(static_cast<QHideEvent*>(event));
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::hideEvent(static_cast<QHideEvent*>(event));
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::hideEvent(static_cast<QHideEvent*>(event));
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::hideEvent(static_cast<QHideEvent*>(event));
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::hideEvent(static_cast<QHideEvent*>(event));
	} else {
		static_cast<QWidget*>(ptr)->QWidget::hideEvent(static_cast<QHideEvent*>(event));
	}
}

void QWidget_InputMethodEvent(void* ptr, void* event)
{
		static_cast<QWidget*>(ptr)->inputMethodEvent(static_cast<QInputMethodEvent*>(event));
}

void QWidget_InputMethodEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::inputMethodEvent(static_cast<QInputMethodEvent*>(event));
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::inputMethodEvent(static_cast<QInputMethodEvent*>(event));
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::inputMethodEvent(static_cast<QInputMethodEvent*>(event));
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::inputMethodEvent(static_cast<QInputMethodEvent*>(event));
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::inputMethodEvent(static_cast<QInputMethodEvent*>(event));
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::inputMethodEvent(static_cast<QInputMethodEvent*>(event));
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::inputMethodEvent(static_cast<QInputMethodEvent*>(event));
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::inputMethodEvent(static_cast<QInputMethodEvent*>(event));
	} else {
		static_cast<QWidget*>(ptr)->QWidget::inputMethodEvent(static_cast<QInputMethodEvent*>(event));
	}
}

void QWidget_InsertAction(void* ptr, void* before, void* action)
{
		static_cast<QWidget*>(ptr)->insertAction(static_cast<QAction*>(before), static_cast<QAction*>(action));
}

void QWidget_InsertActions(void* ptr, void* before, void* actions)
{
		static_cast<QWidget*>(ptr)->insertActions(static_cast<QAction*>(before), ({ QList<QAction *>* tmpP = static_cast<QList<QAction *>*>(actions); QList<QAction *> tmpV = *tmpP; tmpP->~QList(); free(tmpP); tmpV; }));
}

void QWidget_KeyPressEvent(void* ptr, void* event)
{
		static_cast<QWidget*>(ptr)->keyPressEvent(static_cast<QKeyEvent*>(event));
}

void QWidget_KeyPressEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::keyPressEvent(static_cast<QKeyEvent*>(event));
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::keyPressEvent(static_cast<QKeyEvent*>(event));
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::keyPressEvent(static_cast<QKeyEvent*>(event));
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::keyPressEvent(static_cast<QKeyEvent*>(event));
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::keyPressEvent(static_cast<QKeyEvent*>(event));
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::keyPressEvent(static_cast<QKeyEvent*>(event));
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::keyPressEvent(static_cast<QKeyEvent*>(event));
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::keyPressEvent(static_cast<QKeyEvent*>(event));
	} else {
		static_cast<QWidget*>(ptr)->QWidget::keyPressEvent(static_cast<QKeyEvent*>(event));
	}
}

void QWidget_KeyReleaseEvent(void* ptr, void* event)
{
		static_cast<QWidget*>(ptr)->keyReleaseEvent(static_cast<QKeyEvent*>(event));
}

void QWidget_KeyReleaseEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::keyReleaseEvent(static_cast<QKeyEvent*>(event));
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::keyReleaseEvent(static_cast<QKeyEvent*>(event));
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::keyReleaseEvent(static_cast<QKeyEvent*>(event));
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::keyReleaseEvent(static_cast<QKeyEvent*>(event));
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::keyReleaseEvent(static_cast<QKeyEvent*>(event));
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::keyReleaseEvent(static_cast<QKeyEvent*>(event));
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::keyReleaseEvent(static_cast<QKeyEvent*>(event));
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::keyReleaseEvent(static_cast<QKeyEvent*>(event));
	} else {
		static_cast<QWidget*>(ptr)->QWidget::keyReleaseEvent(static_cast<QKeyEvent*>(event));
	}
}

void QWidget_LeaveEvent(void* ptr, void* event)
{
		static_cast<QWidget*>(ptr)->leaveEvent(static_cast<QEvent*>(event));
}

void QWidget_LeaveEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::leaveEvent(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::leaveEvent(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::leaveEvent(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::leaveEvent(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::leaveEvent(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::leaveEvent(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::leaveEvent(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::leaveEvent(static_cast<QEvent*>(event));
	} else {
		static_cast<QWidget*>(ptr)->QWidget::leaveEvent(static_cast<QEvent*>(event));
	}
}

void QWidget_Lower(void* ptr)
{
		QMetaObject::invokeMethod(static_cast<QWidget*>(ptr), "lower");
}

void QWidget_LowerDefault(void* ptr)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::lower();
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::lower();
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::lower();
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::lower();
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::lower();
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::lower();
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::lower();
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::lower();
	} else {
		static_cast<QWidget*>(ptr)->QWidget::lower();
	}
}

void QWidget_MouseDoubleClickEvent(void* ptr, void* event)
{
		static_cast<QWidget*>(ptr)->mouseDoubleClickEvent(static_cast<QMouseEvent*>(event));
}

void QWidget_MouseDoubleClickEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::mouseDoubleClickEvent(static_cast<QMouseEvent*>(event));
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::mouseDoubleClickEvent(static_cast<QMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::mouseDoubleClickEvent(static_cast<QMouseEvent*>(event));
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::mouseDoubleClickEvent(static_cast<QMouseEvent*>(event));
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::mouseDoubleClickEvent(static_cast<QMouseEvent*>(event));
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::mouseDoubleClickEvent(static_cast<QMouseEvent*>(event));
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::mouseDoubleClickEvent(static_cast<QMouseEvent*>(event));
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::mouseDoubleClickEvent(static_cast<QMouseEvent*>(event));
	} else {
		static_cast<QWidget*>(ptr)->QWidget::mouseDoubleClickEvent(static_cast<QMouseEvent*>(event));
	}
}

void QWidget_MouseMoveEvent(void* ptr, void* event)
{
		static_cast<QWidget*>(ptr)->mouseMoveEvent(static_cast<QMouseEvent*>(event));
}

void QWidget_MouseMoveEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::mouseMoveEvent(static_cast<QMouseEvent*>(event));
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::mouseMoveEvent(static_cast<QMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::mouseMoveEvent(static_cast<QMouseEvent*>(event));
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::mouseMoveEvent(static_cast<QMouseEvent*>(event));
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::mouseMoveEvent(static_cast<QMouseEvent*>(event));
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::mouseMoveEvent(static_cast<QMouseEvent*>(event));
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::mouseMoveEvent(static_cast<QMouseEvent*>(event));
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::mouseMoveEvent(static_cast<QMouseEvent*>(event));
	} else {
		static_cast<QWidget*>(ptr)->QWidget::mouseMoveEvent(static_cast<QMouseEvent*>(event));
	}
}

void QWidget_MousePressEvent(void* ptr, void* event)
{
		static_cast<QWidget*>(ptr)->mousePressEvent(static_cast<QMouseEvent*>(event));
}

void QWidget_MousePressEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::mousePressEvent(static_cast<QMouseEvent*>(event));
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::mousePressEvent(static_cast<QMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::mousePressEvent(static_cast<QMouseEvent*>(event));
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::mousePressEvent(static_cast<QMouseEvent*>(event));
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::mousePressEvent(static_cast<QMouseEvent*>(event));
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::mousePressEvent(static_cast<QMouseEvent*>(event));
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::mousePressEvent(static_cast<QMouseEvent*>(event));
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::mousePressEvent(static_cast<QMouseEvent*>(event));
	} else {
		static_cast<QWidget*>(ptr)->QWidget::mousePressEvent(static_cast<QMouseEvent*>(event));
	}
}

void QWidget_MouseReleaseEvent(void* ptr, void* event)
{
		static_cast<QWidget*>(ptr)->mouseReleaseEvent(static_cast<QMouseEvent*>(event));
}

void QWidget_MouseReleaseEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::mouseReleaseEvent(static_cast<QMouseEvent*>(event));
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::mouseReleaseEvent(static_cast<QMouseEvent*>(event));
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::mouseReleaseEvent(static_cast<QMouseEvent*>(event));
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::mouseReleaseEvent(static_cast<QMouseEvent*>(event));
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::mouseReleaseEvent(static_cast<QMouseEvent*>(event));
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::mouseReleaseEvent(static_cast<QMouseEvent*>(event));
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::mouseReleaseEvent(static_cast<QMouseEvent*>(event));
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::mouseReleaseEvent(static_cast<QMouseEvent*>(event));
	} else {
		static_cast<QWidget*>(ptr)->QWidget::mouseReleaseEvent(static_cast<QMouseEvent*>(event));
	}
}

void QWidget_Move(void* ptr, void* vqp)
{
		static_cast<QWidget*>(ptr)->move(*static_cast<QPoint*>(vqp));
}

void QWidget_Move2(void* ptr, int x, int y)
{
		static_cast<QWidget*>(ptr)->move(x, y);
}

void QWidget_MoveEvent(void* ptr, void* event)
{
		static_cast<QWidget*>(ptr)->moveEvent(static_cast<QMoveEvent*>(event));
}

void QWidget_MoveEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::moveEvent(static_cast<QMoveEvent*>(event));
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::moveEvent(static_cast<QMoveEvent*>(event));
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::moveEvent(static_cast<QMoveEvent*>(event));
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::moveEvent(static_cast<QMoveEvent*>(event));
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::moveEvent(static_cast<QMoveEvent*>(event));
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::moveEvent(static_cast<QMoveEvent*>(event));
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::moveEvent(static_cast<QMoveEvent*>(event));
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::moveEvent(static_cast<QMoveEvent*>(event));
	} else {
		static_cast<QWidget*>(ptr)->QWidget::moveEvent(static_cast<QMoveEvent*>(event));
	}
}

void QWidget_OverrideWindowFlags(void* ptr, long long flags)
{
		static_cast<QWidget*>(ptr)->overrideWindowFlags(static_cast<Qt::WindowType>(flags));
}

void QWidget_PaintEvent(void* ptr, void* event)
{
		static_cast<QWidget*>(ptr)->paintEvent(static_cast<QPaintEvent*>(event));
}

void QWidget_PaintEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::paintEvent(static_cast<QPaintEvent*>(event));
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::paintEvent(static_cast<QPaintEvent*>(event));
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::paintEvent(static_cast<QPaintEvent*>(event));
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::paintEvent(static_cast<QPaintEvent*>(event));
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::paintEvent(static_cast<QPaintEvent*>(event));
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::paintEvent(static_cast<QPaintEvent*>(event));
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::paintEvent(static_cast<QPaintEvent*>(event));
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::paintEvent(static_cast<QPaintEvent*>(event));
	} else {
		static_cast<QWidget*>(ptr)->QWidget::paintEvent(static_cast<QPaintEvent*>(event));
	}
}

void QWidget_Raise(void* ptr)
{
		QMetaObject::invokeMethod(static_cast<QWidget*>(ptr), "raise");
}

void QWidget_RaiseDefault(void* ptr)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::raise();
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::raise();
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::raise();
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::raise();
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::raise();
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::raise();
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::raise();
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::raise();
	} else {
		static_cast<QWidget*>(ptr)->QWidget::raise();
	}
}

void QWidget_ReleaseKeyboard(void* ptr)
{
		static_cast<QWidget*>(ptr)->releaseKeyboard();
}

void QWidget_ReleaseMouse(void* ptr)
{
		static_cast<QWidget*>(ptr)->releaseMouse();
}

void QWidget_ReleaseShortcut(void* ptr, int id)
{
		static_cast<QWidget*>(ptr)->releaseShortcut(id);
}

void QWidget_RemoveAction(void* ptr, void* action)
{
		static_cast<QWidget*>(ptr)->removeAction(static_cast<QAction*>(action));
}

void QWidget_Render(void* ptr, void* target, void* targetOffset, void* sourceRegion, long long renderFlags)
{
	if (dynamic_cast<QWidget*>(static_cast<QObject*>(target))) {
		static_cast<QWidget*>(ptr)->render(static_cast<QWidget*>(target), *static_cast<QPoint*>(targetOffset), *static_cast<QRegion*>(sourceRegion), static_cast<QWidget::RenderFlag>(renderFlags));
	} else {
		static_cast<QWidget*>(ptr)->render(static_cast<QPaintDevice*>(target), *static_cast<QPoint*>(targetOffset), *static_cast<QRegion*>(sourceRegion), static_cast<QWidget::RenderFlag>(renderFlags));
	}
}

void QWidget_Render2(void* ptr, void* painter, void* targetOffset, void* sourceRegion, long long renderFlags)
{
		static_cast<QWidget*>(ptr)->render(static_cast<QPainter*>(painter), *static_cast<QPoint*>(targetOffset), *static_cast<QRegion*>(sourceRegion), static_cast<QWidget::RenderFlag>(renderFlags));
}

void QWidget_Repaint(void* ptr)
{
		QMetaObject::invokeMethod(static_cast<QWidget*>(ptr), "repaint");
}

void QWidget_RepaintDefault(void* ptr)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::repaint();
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::repaint();
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::repaint();
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::repaint();
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::repaint();
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::repaint();
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::repaint();
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::repaint();
	} else {
		static_cast<QWidget*>(ptr)->QWidget::repaint();
	}
}

void QWidget_Repaint3(void* ptr, void* rect)
{
		static_cast<QWidget*>(ptr)->repaint(*static_cast<QRect*>(rect));
}

void QWidget_Repaint4(void* ptr, void* rgn)
{
		static_cast<QWidget*>(ptr)->repaint(*static_cast<QRegion*>(rgn));
}

void QWidget_Repaint2(void* ptr, int x, int y, int w, int h)
{
		static_cast<QWidget*>(ptr)->repaint(x, y, w, h);
}

void QWidget_Resize(void* ptr, void* vqs)
{
		static_cast<QWidget*>(ptr)->resize(*static_cast<QSize*>(vqs));
}

void QWidget_Resize2(void* ptr, int w, int h)
{
		static_cast<QWidget*>(ptr)->resize(w, h);
}

void QWidget_ResizeEvent(void* ptr, void* event)
{
		static_cast<QWidget*>(ptr)->resizeEvent(static_cast<QResizeEvent*>(event));
}

void QWidget_ResizeEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::resizeEvent(static_cast<QResizeEvent*>(event));
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::resizeEvent(static_cast<QResizeEvent*>(event));
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::resizeEvent(static_cast<QResizeEvent*>(event));
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::resizeEvent(static_cast<QResizeEvent*>(event));
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::resizeEvent(static_cast<QResizeEvent*>(event));
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::resizeEvent(static_cast<QResizeEvent*>(event));
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::resizeEvent(static_cast<QResizeEvent*>(event));
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::resizeEvent(static_cast<QResizeEvent*>(event));
	} else {
		static_cast<QWidget*>(ptr)->QWidget::resizeEvent(static_cast<QResizeEvent*>(event));
	}
}

void QWidget_Scroll(void* ptr, int dx, int dy)
{
		static_cast<QWidget*>(ptr)->scroll(dx, dy);
}

void QWidget_Scroll2(void* ptr, int dx, int dy, void* r)
{
		static_cast<QWidget*>(ptr)->scroll(dx, dy, *static_cast<QRect*>(r));
}

void QWidget_SetAcceptDrops(void* ptr, char on)
{
		static_cast<QWidget*>(ptr)->setAcceptDrops(on != 0);
}

void QWidget_SetAccessibleDescription(void* ptr, struct QtWidgets_PackedString description)
{
		static_cast<QWidget*>(ptr)->setAccessibleDescription(QString::fromUtf8(description.data, description.len));
}

void QWidget_SetAccessibleName(void* ptr, struct QtWidgets_PackedString name)
{
		static_cast<QWidget*>(ptr)->setAccessibleName(QString::fromUtf8(name.data, name.len));
}

void QWidget_SetAttribute(void* ptr, long long attribute, char on)
{
		static_cast<QWidget*>(ptr)->setAttribute(static_cast<Qt::WidgetAttribute>(attribute), on != 0);
}

void QWidget_SetAutoFillBackground(void* ptr, char enabled)
{
		static_cast<QWidget*>(ptr)->setAutoFillBackground(enabled != 0);
}

void QWidget_SetBackgroundRole(void* ptr, long long role)
{
		static_cast<QWidget*>(ptr)->setBackgroundRole(static_cast<QPalette::ColorRole>(role));
}

void QWidget_SetBaseSize(void* ptr, void* vqs)
{
		static_cast<QWidget*>(ptr)->setBaseSize(*static_cast<QSize*>(vqs));
}

void QWidget_SetBaseSize2(void* ptr, int basew, int baseh)
{
		static_cast<QWidget*>(ptr)->setBaseSize(basew, baseh);
}

void QWidget_SetContentsMargins2(void* ptr, void* margins)
{
		static_cast<QWidget*>(ptr)->setContentsMargins(*static_cast<QMargins*>(margins));
}

void QWidget_SetContentsMargins(void* ptr, int left, int top, int right, int bottom)
{
		static_cast<QWidget*>(ptr)->setContentsMargins(left, top, right, bottom);
}

void QWidget_SetContextMenuPolicy(void* ptr, long long policy)
{
		static_cast<QWidget*>(ptr)->setContextMenuPolicy(static_cast<Qt::ContextMenuPolicy>(policy));
}

void QWidget_SetCursor(void* ptr, void* vqc)
{
		static_cast<QWidget*>(ptr)->setCursor(*static_cast<QCursor*>(vqc));
}

void QWidget_SetDisabled(void* ptr, char disable)
{
		QMetaObject::invokeMethod(static_cast<QWidget*>(ptr), "setDisabled", Q_ARG(bool, disable != 0));
}

void QWidget_SetDisabledDefault(void* ptr, char disable)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::setDisabled(disable != 0);
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::setDisabled(disable != 0);
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::setDisabled(disable != 0);
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::setDisabled(disable != 0);
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::setDisabled(disable != 0);
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::setDisabled(disable != 0);
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::setDisabled(disable != 0);
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::setDisabled(disable != 0);
	} else {
		static_cast<QWidget*>(ptr)->QWidget::setDisabled(disable != 0);
	}
}

void QWidget_SetEditFocus(void* ptr, char enable)
{
#ifdef QT_KEYPAD_NAVIGATION
		static_cast<QWidget*>(ptr)->setEditFocus(enable != 0);
#endif
}

void QWidget_SetEnabled(void* ptr, char vbo)
{
		QMetaObject::invokeMethod(static_cast<QWidget*>(ptr), "setEnabled", Q_ARG(bool, vbo != 0));
}

void QWidget_SetEnabledDefault(void* ptr, char vbo)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::setEnabled(vbo != 0);
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::setEnabled(vbo != 0);
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::setEnabled(vbo != 0);
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::setEnabled(vbo != 0);
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::setEnabled(vbo != 0);
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::setEnabled(vbo != 0);
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::setEnabled(vbo != 0);
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::setEnabled(vbo != 0);
	} else {
		static_cast<QWidget*>(ptr)->QWidget::setEnabled(vbo != 0);
	}
}

void QWidget_SetFixedHeight(void* ptr, int h)
{
		static_cast<QWidget*>(ptr)->setFixedHeight(h);
}

void QWidget_SetFixedSize(void* ptr, void* s)
{
		static_cast<QWidget*>(ptr)->setFixedSize(*static_cast<QSize*>(s));
}

void QWidget_SetFixedSize2(void* ptr, int w, int h)
{
		static_cast<QWidget*>(ptr)->setFixedSize(w, h);
}

void QWidget_SetFixedWidth(void* ptr, int w)
{
		static_cast<QWidget*>(ptr)->setFixedWidth(w);
}

void QWidget_SetFocus2(void* ptr)
{
		QMetaObject::invokeMethod(static_cast<QWidget*>(ptr), "setFocus");
}

void QWidget_SetFocus2Default(void* ptr)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::setFocus();
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::setFocus();
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::setFocus();
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::setFocus();
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::setFocus();
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::setFocus();
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::setFocus();
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::setFocus();
	} else {
		static_cast<QWidget*>(ptr)->QWidget::setFocus();
	}
}

void QWidget_SetFocus(void* ptr, long long reason)
{
		static_cast<QWidget*>(ptr)->setFocus(static_cast<Qt::FocusReason>(reason));
}

void QWidget_SetFocusPolicy(void* ptr, long long policy)
{
		static_cast<QWidget*>(ptr)->setFocusPolicy(static_cast<Qt::FocusPolicy>(policy));
}

void QWidget_SetFocusProxy(void* ptr, void* w)
{
		static_cast<QWidget*>(ptr)->setFocusProxy(static_cast<QWidget*>(w));
}

void QWidget_SetFont(void* ptr, void* vqf)
{
		static_cast<QWidget*>(ptr)->setFont(*static_cast<QFont*>(vqf));
}

void QWidget_SetForegroundRole(void* ptr, long long role)
{
		static_cast<QWidget*>(ptr)->setForegroundRole(static_cast<QPalette::ColorRole>(role));
}

void QWidget_SetGeometry(void* ptr, void* vqr)
{
		static_cast<QWidget*>(ptr)->setGeometry(*static_cast<QRect*>(vqr));
}

void QWidget_SetGeometry2(void* ptr, int x, int y, int w, int h)
{
		static_cast<QWidget*>(ptr)->setGeometry(x, y, w, h);
}

void QWidget_SetGraphicsEffect(void* ptr, void* effect)
{
		static_cast<QWidget*>(ptr)->setGraphicsEffect(static_cast<QGraphicsEffect*>(effect));
}

void QWidget_SetHidden(void* ptr, char hidden)
{
		QMetaObject::invokeMethod(static_cast<QWidget*>(ptr), "setHidden", Q_ARG(bool, hidden != 0));
}

void QWidget_SetHiddenDefault(void* ptr, char hidden)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::setHidden(hidden != 0);
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::setHidden(hidden != 0);
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::setHidden(hidden != 0);
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::setHidden(hidden != 0);
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::setHidden(hidden != 0);
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::setHidden(hidden != 0);
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::setHidden(hidden != 0);
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::setHidden(hidden != 0);
	} else {
		static_cast<QWidget*>(ptr)->QWidget::setHidden(hidden != 0);
	}
}

void QWidget_SetInputMethodHints(void* ptr, long long hints)
{
		static_cast<QWidget*>(ptr)->setInputMethodHints(static_cast<Qt::InputMethodHint>(hints));
}

void QWidget_SetLayout(void* ptr, void* layout)
{
		static_cast<QWidget*>(ptr)->setLayout(static_cast<QLayout*>(layout));
}

void QWidget_SetLayoutDirection(void* ptr, long long direction)
{
		static_cast<QWidget*>(ptr)->setLayoutDirection(static_cast<Qt::LayoutDirection>(direction));
}

void QWidget_SetLocale(void* ptr, void* locale)
{
		static_cast<QWidget*>(ptr)->setLocale(*static_cast<QLocale*>(locale));
}

void QWidget_SetMask(void* ptr, void* bitmap)
{
		static_cast<QWidget*>(ptr)->setMask(*static_cast<QBitmap*>(bitmap));
}

void QWidget_SetMask2(void* ptr, void* region)
{
		static_cast<QWidget*>(ptr)->setMask(*static_cast<QRegion*>(region));
}

void QWidget_SetMaximumHeight(void* ptr, int maxh)
{
		static_cast<QWidget*>(ptr)->setMaximumHeight(maxh);
}

void QWidget_SetMaximumSize(void* ptr, void* vqs)
{
		static_cast<QWidget*>(ptr)->setMaximumSize(*static_cast<QSize*>(vqs));
}

void QWidget_SetMaximumSize2(void* ptr, int maxw, int maxh)
{
		static_cast<QWidget*>(ptr)->setMaximumSize(maxw, maxh);
}

void QWidget_SetMaximumWidth(void* ptr, int maxw)
{
		static_cast<QWidget*>(ptr)->setMaximumWidth(maxw);
}

void QWidget_SetMinimumHeight(void* ptr, int minh)
{
		static_cast<QWidget*>(ptr)->setMinimumHeight(minh);
}

void QWidget_SetMinimumSize(void* ptr, void* vqs)
{
		static_cast<QWidget*>(ptr)->setMinimumSize(*static_cast<QSize*>(vqs));
}

void QWidget_SetMinimumSize2(void* ptr, int minw, int minh)
{
		static_cast<QWidget*>(ptr)->setMinimumSize(minw, minh);
}

void QWidget_SetMinimumWidth(void* ptr, int minw)
{
		static_cast<QWidget*>(ptr)->setMinimumWidth(minw);
}

void QWidget_SetMouseTracking(void* ptr, char enable)
{
		static_cast<QWidget*>(ptr)->setMouseTracking(enable != 0);
}

void QWidget_SetPalette(void* ptr, void* vqp)
{
		static_cast<QWidget*>(ptr)->setPalette(*static_cast<QPalette*>(vqp));
}

void QWidget_SetParent(void* ptr, void* parent)
{
		static_cast<QWidget*>(ptr)->setParent(static_cast<QWidget*>(parent));
}

void QWidget_SetParent2(void* ptr, void* parent, long long ff)
{
		static_cast<QWidget*>(ptr)->setParent(static_cast<QWidget*>(parent), static_cast<Qt::WindowType>(ff));
}

void QWidget_SetShortcutAutoRepeat(void* ptr, int id, char enable)
{
		static_cast<QWidget*>(ptr)->setShortcutAutoRepeat(id, enable != 0);
}

void QWidget_SetShortcutEnabled(void* ptr, int id, char enable)
{
		static_cast<QWidget*>(ptr)->setShortcutEnabled(id, enable != 0);
}

void QWidget_SetSizeIncrement(void* ptr, void* vqs)
{
		static_cast<QWidget*>(ptr)->setSizeIncrement(*static_cast<QSize*>(vqs));
}

void QWidget_SetSizeIncrement2(void* ptr, int w, int h)
{
		static_cast<QWidget*>(ptr)->setSizeIncrement(w, h);
}

void QWidget_SetSizePolicy(void* ptr, void* vqs)
{
		static_cast<QWidget*>(ptr)->setSizePolicy(*static_cast<QSizePolicy*>(vqs));
}

void QWidget_SetSizePolicy2(void* ptr, long long horizontal, long long vertical)
{
		static_cast<QWidget*>(ptr)->setSizePolicy(static_cast<QSizePolicy::Policy>(horizontal), static_cast<QSizePolicy::Policy>(vertical));
}

void QWidget_SetStatusTip(void* ptr, struct QtWidgets_PackedString vqs)
{
		static_cast<QWidget*>(ptr)->setStatusTip(QString::fromUtf8(vqs.data, vqs.len));
}

void QWidget_SetStyle(void* ptr, void* style)
{
		static_cast<QWidget*>(ptr)->setStyle(static_cast<QStyle*>(style));
}

void QWidget_SetStyleSheet(void* ptr, struct QtWidgets_PackedString styleSheet)
{
		QMetaObject::invokeMethod(static_cast<QWidget*>(ptr), "setStyleSheet", Q_ARG(const QString, QString::fromUtf8(styleSheet.data, styleSheet.len)));
}

void QWidget_SetStyleSheetDefault(void* ptr, struct QtWidgets_PackedString styleSheet)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::setStyleSheet(QString::fromUtf8(styleSheet.data, styleSheet.len));
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::setStyleSheet(QString::fromUtf8(styleSheet.data, styleSheet.len));
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::setStyleSheet(QString::fromUtf8(styleSheet.data, styleSheet.len));
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::setStyleSheet(QString::fromUtf8(styleSheet.data, styleSheet.len));
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::setStyleSheet(QString::fromUtf8(styleSheet.data, styleSheet.len));
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::setStyleSheet(QString::fromUtf8(styleSheet.data, styleSheet.len));
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::setStyleSheet(QString::fromUtf8(styleSheet.data, styleSheet.len));
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::setStyleSheet(QString::fromUtf8(styleSheet.data, styleSheet.len));
	} else {
		static_cast<QWidget*>(ptr)->QWidget::setStyleSheet(QString::fromUtf8(styleSheet.data, styleSheet.len));
	}
}

void QWidget_QWidget_SetTabOrder(void* first, void* second)
{
		QWidget::setTabOrder(static_cast<QWidget*>(first), static_cast<QWidget*>(second));
}

void QWidget_SetTabletTracking(void* ptr, char enable)
{
		static_cast<QWidget*>(ptr)->setTabletTracking(enable != 0);
}

void QWidget_SetToolTip(void* ptr, struct QtWidgets_PackedString vqs)
{
		static_cast<QWidget*>(ptr)->setToolTip(QString::fromUtf8(vqs.data, vqs.len));
}

void QWidget_SetToolTipDuration(void* ptr, int msec)
{
		static_cast<QWidget*>(ptr)->setToolTipDuration(msec);
}

void QWidget_SetUpdatesEnabled(void* ptr, char enable)
{
		static_cast<QWidget*>(ptr)->setUpdatesEnabled(enable != 0);
}

void QWidget_SetVisible(void* ptr, char visible)
{
		QMetaObject::invokeMethod(static_cast<QWidget*>(ptr), "setVisible", Q_ARG(bool, visible != 0));
}

void QWidget_SetVisibleDefault(void* ptr, char visible)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::setVisible(visible != 0);
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::setVisible(visible != 0);
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::setVisible(visible != 0);
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::setVisible(visible != 0);
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::setVisible(visible != 0);
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::setVisible(visible != 0);
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::setVisible(visible != 0);
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::setVisible(visible != 0);
	} else {
		static_cast<QWidget*>(ptr)->QWidget::setVisible(visible != 0);
	}
}

void QWidget_SetWhatsThis(void* ptr, struct QtWidgets_PackedString vqs)
{
		static_cast<QWidget*>(ptr)->setWhatsThis(QString::fromUtf8(vqs.data, vqs.len));
}

void QWidget_SetWindowFilePath(void* ptr, struct QtWidgets_PackedString filePath)
{
		static_cast<QWidget*>(ptr)->setWindowFilePath(QString::fromUtf8(filePath.data, filePath.len));
}

void QWidget_SetWindowFlag(void* ptr, long long flag, char on)
{
		static_cast<QWidget*>(ptr)->setWindowFlag(static_cast<Qt::WindowType>(flag), on != 0);
}

void QWidget_SetWindowFlags(void* ptr, long long ty)
{
		static_cast<QWidget*>(ptr)->setWindowFlags(static_cast<Qt::WindowType>(ty));
}

void QWidget_SetWindowIcon(void* ptr, void* icon)
{
		static_cast<QWidget*>(ptr)->setWindowIcon(*static_cast<QIcon*>(icon));
}

void QWidget_SetWindowIconText(void* ptr, struct QtWidgets_PackedString vqs)
{
		static_cast<QWidget*>(ptr)->setWindowIconText(QString::fromUtf8(vqs.data, vqs.len));
}

void QWidget_SetWindowModality(void* ptr, long long windowModality)
{
		static_cast<QWidget*>(ptr)->setWindowModality(static_cast<Qt::WindowModality>(windowModality));
}

void QWidget_SetWindowModified(void* ptr, char vbo)
{
		QMetaObject::invokeMethod(static_cast<QWidget*>(ptr), "setWindowModified", Q_ARG(bool, vbo != 0));
}

void QWidget_SetWindowModifiedDefault(void* ptr, char vbo)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::setWindowModified(vbo != 0);
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::setWindowModified(vbo != 0);
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::setWindowModified(vbo != 0);
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::setWindowModified(vbo != 0);
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::setWindowModified(vbo != 0);
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::setWindowModified(vbo != 0);
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::setWindowModified(vbo != 0);
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::setWindowModified(vbo != 0);
	} else {
		static_cast<QWidget*>(ptr)->QWidget::setWindowModified(vbo != 0);
	}
}

void QWidget_SetWindowOpacity(void* ptr, double level)
{
		static_cast<QWidget*>(ptr)->setWindowOpacity(level);
}

void QWidget_SetWindowRole(void* ptr, struct QtWidgets_PackedString role)
{
		static_cast<QWidget*>(ptr)->setWindowRole(QString::fromUtf8(role.data, role.len));
}

void QWidget_SetWindowState(void* ptr, long long windowState)
{
		static_cast<QWidget*>(ptr)->setWindowState(static_cast<Qt::WindowState>(windowState));
}

void QWidget_SetWindowTitle(void* ptr, struct QtWidgets_PackedString vqs)
{
		QMetaObject::invokeMethod(static_cast<QWidget*>(ptr), "setWindowTitle", Q_ARG(const QString, QString::fromUtf8(vqs.data, vqs.len)));
}

void QWidget_SetWindowTitleDefault(void* ptr, struct QtWidgets_PackedString vqs)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::setWindowTitle(QString::fromUtf8(vqs.data, vqs.len));
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::setWindowTitle(QString::fromUtf8(vqs.data, vqs.len));
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::setWindowTitle(QString::fromUtf8(vqs.data, vqs.len));
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::setWindowTitle(QString::fromUtf8(vqs.data, vqs.len));
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::setWindowTitle(QString::fromUtf8(vqs.data, vqs.len));
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::setWindowTitle(QString::fromUtf8(vqs.data, vqs.len));
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::setWindowTitle(QString::fromUtf8(vqs.data, vqs.len));
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::setWindowTitle(QString::fromUtf8(vqs.data, vqs.len));
	} else {
		static_cast<QWidget*>(ptr)->QWidget::setWindowTitle(QString::fromUtf8(vqs.data, vqs.len));
	}
}

void QWidget_SetupUi(void* ptr, void* widget)
{
#ifdef Q_QDOC
		static_cast<QWidget*>(ptr)->setupUi(static_cast<QWidget*>(widget));
#endif
}

void QWidget_Show(void* ptr)
{
		QMetaObject::invokeMethod(static_cast<QWidget*>(ptr), "show");
}

void QWidget_ShowDefault(void* ptr)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::show();
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::show();
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::show();
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::show();
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::show();
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::show();
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::show();
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::show();
	} else {
		static_cast<QWidget*>(ptr)->QWidget::show();
	}
}

void QWidget_ShowEvent(void* ptr, void* event)
{
		static_cast<QWidget*>(ptr)->showEvent(static_cast<QShowEvent*>(event));
}

void QWidget_ShowEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::showEvent(static_cast<QShowEvent*>(event));
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::showEvent(static_cast<QShowEvent*>(event));
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::showEvent(static_cast<QShowEvent*>(event));
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::showEvent(static_cast<QShowEvent*>(event));
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::showEvent(static_cast<QShowEvent*>(event));
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::showEvent(static_cast<QShowEvent*>(event));
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::showEvent(static_cast<QShowEvent*>(event));
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::showEvent(static_cast<QShowEvent*>(event));
	} else {
		static_cast<QWidget*>(ptr)->QWidget::showEvent(static_cast<QShowEvent*>(event));
	}
}

void QWidget_ShowFullScreen(void* ptr)
{
		QMetaObject::invokeMethod(static_cast<QWidget*>(ptr), "showFullScreen");
}

void QWidget_ShowFullScreenDefault(void* ptr)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::showFullScreen();
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::showFullScreen();
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::showFullScreen();
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::showFullScreen();
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::showFullScreen();
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::showFullScreen();
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::showFullScreen();
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::showFullScreen();
	} else {
		static_cast<QWidget*>(ptr)->QWidget::showFullScreen();
	}
}

void QWidget_ShowMaximized(void* ptr)
{
		QMetaObject::invokeMethod(static_cast<QWidget*>(ptr), "showMaximized");
}

void QWidget_ShowMaximizedDefault(void* ptr)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::showMaximized();
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::showMaximized();
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::showMaximized();
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::showMaximized();
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::showMaximized();
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::showMaximized();
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::showMaximized();
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::showMaximized();
	} else {
		static_cast<QWidget*>(ptr)->QWidget::showMaximized();
	}
}

void QWidget_ShowMinimized(void* ptr)
{
		QMetaObject::invokeMethod(static_cast<QWidget*>(ptr), "showMinimized");
}

void QWidget_ShowMinimizedDefault(void* ptr)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::showMinimized();
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::showMinimized();
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::showMinimized();
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::showMinimized();
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::showMinimized();
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::showMinimized();
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::showMinimized();
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::showMinimized();
	} else {
		static_cast<QWidget*>(ptr)->QWidget::showMinimized();
	}
}

void QWidget_ShowNormal(void* ptr)
{
		QMetaObject::invokeMethod(static_cast<QWidget*>(ptr), "showNormal");
}

void QWidget_ShowNormalDefault(void* ptr)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::showNormal();
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::showNormal();
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::showNormal();
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::showNormal();
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::showNormal();
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::showNormal();
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::showNormal();
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::showNormal();
	} else {
		static_cast<QWidget*>(ptr)->QWidget::showNormal();
	}
}

void QWidget_StackUnder(void* ptr, void* w)
{
		static_cast<QWidget*>(ptr)->stackUnder(static_cast<QWidget*>(w));
}

void QWidget_TabletEvent(void* ptr, void* event)
{
		static_cast<QWidget*>(ptr)->tabletEvent(static_cast<QTabletEvent*>(event));
}

void QWidget_TabletEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::tabletEvent(static_cast<QTabletEvent*>(event));
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::tabletEvent(static_cast<QTabletEvent*>(event));
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::tabletEvent(static_cast<QTabletEvent*>(event));
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::tabletEvent(static_cast<QTabletEvent*>(event));
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::tabletEvent(static_cast<QTabletEvent*>(event));
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::tabletEvent(static_cast<QTabletEvent*>(event));
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::tabletEvent(static_cast<QTabletEvent*>(event));
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::tabletEvent(static_cast<QTabletEvent*>(event));
	} else {
		static_cast<QWidget*>(ptr)->QWidget::tabletEvent(static_cast<QTabletEvent*>(event));
	}
}

void QWidget_UngrabGesture(void* ptr, long long gesture)
{
		static_cast<QWidget*>(ptr)->ungrabGesture(static_cast<Qt::GestureType>(gesture));
}

void QWidget_UnsetCursor(void* ptr)
{
		static_cast<QWidget*>(ptr)->unsetCursor();
}

void QWidget_UnsetLayoutDirection(void* ptr)
{
		static_cast<QWidget*>(ptr)->unsetLayoutDirection();
}

void QWidget_UnsetLocale(void* ptr)
{
		static_cast<QWidget*>(ptr)->unsetLocale();
}

void QWidget_Update(void* ptr)
{
		QMetaObject::invokeMethod(static_cast<QWidget*>(ptr), "update");
}

void QWidget_UpdateDefault(void* ptr)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::update();
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::update();
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::update();
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::update();
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::update();
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::update();
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::update();
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::update();
	} else {
		static_cast<QWidget*>(ptr)->QWidget::update();
	}
}

void QWidget_Update3(void* ptr, void* rect)
{
		static_cast<QWidget*>(ptr)->update(*static_cast<QRect*>(rect));
}

void QWidget_Update4(void* ptr, void* rgn)
{
		static_cast<QWidget*>(ptr)->update(*static_cast<QRegion*>(rgn));
}

void QWidget_Update2(void* ptr, int x, int y, int w, int h)
{
		static_cast<QWidget*>(ptr)->update(x, y, w, h);
}

void QWidget_UpdateGeometry(void* ptr)
{
		static_cast<QWidget*>(ptr)->updateGeometry();
}

void QWidget_UpdateMicroFocus(void* ptr)
{
		QMetaObject::invokeMethod(static_cast<QWidget*>(ptr), "updateMicroFocus");
}

void QWidget_UpdateMicroFocusDefault(void* ptr)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::updateMicroFocus();
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::updateMicroFocus();
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::updateMicroFocus();
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::updateMicroFocus();
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::updateMicroFocus();
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::updateMicroFocus();
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::updateMicroFocus();
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::updateMicroFocus();
	} else {
		static_cast<QWidget*>(ptr)->QWidget::updateMicroFocus();
	}
}

void QWidget_WheelEvent(void* ptr, void* event)
{
		static_cast<QWidget*>(ptr)->wheelEvent(static_cast<QWheelEvent*>(event));
}

void QWidget_WheelEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::wheelEvent(static_cast<QWheelEvent*>(event));
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::wheelEvent(static_cast<QWheelEvent*>(event));
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::wheelEvent(static_cast<QWheelEvent*>(event));
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::wheelEvent(static_cast<QWheelEvent*>(event));
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::wheelEvent(static_cast<QWheelEvent*>(event));
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::wheelEvent(static_cast<QWheelEvent*>(event));
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::wheelEvent(static_cast<QWheelEvent*>(event));
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::wheelEvent(static_cast<QWheelEvent*>(event));
	} else {
		static_cast<QWidget*>(ptr)->QWidget::wheelEvent(static_cast<QWheelEvent*>(event));
	}
}

void QWidget_ConnectWindowIconChanged(void* ptr, long long t)
{
	QObject::connect(static_cast<QWidget*>(ptr), static_cast<void (QWidget::*)(const QIcon &)>(&QWidget::windowIconChanged), static_cast<MyQWidget*>(ptr), static_cast<void (MyQWidget::*)(const QIcon &)>(&MyQWidget::Signal_WindowIconChanged), static_cast<Qt::ConnectionType>(t));
}

void QWidget_DisconnectWindowIconChanged(void* ptr)
{
	QObject::disconnect(static_cast<QWidget*>(ptr), static_cast<void (QWidget::*)(const QIcon &)>(&QWidget::windowIconChanged), static_cast<MyQWidget*>(ptr), static_cast<void (MyQWidget::*)(const QIcon &)>(&MyQWidget::Signal_WindowIconChanged));
}

void QWidget_WindowIconChanged(void* ptr, void* icon)
{
		static_cast<QWidget*>(ptr)->windowIconChanged(*static_cast<QIcon*>(icon));
}

void QWidget_ConnectWindowTitleChanged(void* ptr, long long t)
{
	QObject::connect(static_cast<QWidget*>(ptr), static_cast<void (QWidget::*)(const QString &)>(&QWidget::windowTitleChanged), static_cast<MyQWidget*>(ptr), static_cast<void (MyQWidget::*)(const QString &)>(&MyQWidget::Signal_WindowTitleChanged), static_cast<Qt::ConnectionType>(t));
}

void QWidget_DisconnectWindowTitleChanged(void* ptr)
{
	QObject::disconnect(static_cast<QWidget*>(ptr), static_cast<void (QWidget::*)(const QString &)>(&QWidget::windowTitleChanged), static_cast<MyQWidget*>(ptr), static_cast<void (MyQWidget::*)(const QString &)>(&MyQWidget::Signal_WindowTitleChanged));
}

void QWidget_WindowTitleChanged(void* ptr, struct QtWidgets_PackedString title)
{
		static_cast<QWidget*>(ptr)->windowTitleChanged(QString::fromUtf8(title.data, title.len));
}

void QWidget_DestroyQWidget(void* ptr)
{
	static_cast<QWidget*>(ptr)->~QWidget();
}

void QWidget_DestroyQWidgetDefault(void* ptr)
{
	Q_UNUSED(ptr);

}

void* QWidget_BackingStore(void* ptr)
{
		return static_cast<QWidget*>(ptr)->backingStore();
}

void* QWidget_SaveGeometry(void* ptr)
{
		return new QByteArray(static_cast<QWidget*>(ptr)->saveGeometry());
}

void* QWidget_Cursor(void* ptr)
{
		return new QCursor(static_cast<QWidget*>(ptr)->cursor());
}

void* QWidget_FontInfo(void* ptr)
{
		return new QFontInfo(static_cast<QWidget*>(ptr)->fontInfo());
}

void* QWidget_FontMetrics(void* ptr)
{
		return new QFontMetrics(static_cast<QWidget*>(ptr)->fontMetrics());
}

void* QWidget_GraphicsEffect(void* ptr)
{
		return static_cast<QWidget*>(ptr)->graphicsEffect();
}

void* QWidget_GraphicsProxyWidget(void* ptr)
{
		return static_cast<QWidget*>(ptr)->graphicsProxyWidget();
}

void* QWidget_WindowIcon(void* ptr)
{
		return new QIcon(static_cast<QWidget*>(ptr)->windowIcon());
}

void* QWidget_Layout(void* ptr)
{
		return static_cast<QWidget*>(ptr)->layout();
}

struct QtWidgets_PackedList QWidget_Actions(void* ptr)
{
		return ({ QList<QAction *>* tmpValue268e58 = new QList<QAction *>(static_cast<QWidget*>(ptr)->actions()); QtWidgets_PackedList { tmpValue268e58, tmpValue268e58->size() }; });
}

void* QWidget_Locale(void* ptr)
{
		return new QLocale(static_cast<QWidget*>(ptr)->locale());
}

void* QWidget_ContentsMargins(void* ptr)
{
		return ({ QMargins tmpValue = static_cast<QWidget*>(ptr)->contentsMargins(); new QMargins(tmpValue.left(), tmpValue.top(), tmpValue.right(), tmpValue.bottom()); });
}

void* QWidget_PaintEngine(void* ptr)
{
		return static_cast<QWidget*>(ptr)->paintEngine();
}

void* QWidget_PaintEngineDefault(void* ptr)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		return static_cast<QMenu*>(ptr)->QMenu::paintEngine();
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		return static_cast<QLabel*>(ptr)->QLabel::paintEngine();
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsView*>(ptr)->QGraphicsView::paintEngine();
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		return static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::paintEngine();
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		return static_cast<QFrame*>(ptr)->QFrame::paintEngine();
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::paintEngine();
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		return static_cast<QScrollBar*>(ptr)->QScrollBar::paintEngine();
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		return static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::paintEngine();
	} else {
		return static_cast<QWidget*>(ptr)->QWidget::paintEngine();
	}
}

long long QWidget_BackgroundRole(void* ptr)
{
		return static_cast<QWidget*>(ptr)->backgroundRole();
}

long long QWidget_ForegroundRole(void* ptr)
{
		return static_cast<QWidget*>(ptr)->foregroundRole();
}

void* QWidget_MapFrom(void* ptr, void* parent, void* pos)
{
		return ({ QPoint tmpValue = static_cast<QWidget*>(ptr)->mapFrom(static_cast<QWidget*>(parent), *static_cast<QPoint*>(pos)); new QPoint(tmpValue.x(), tmpValue.y()); });
}

void* QWidget_MapFromGlobal(void* ptr, void* pos)
{
		return ({ QPoint tmpValue = static_cast<QWidget*>(ptr)->mapFromGlobal(*static_cast<QPoint*>(pos)); new QPoint(tmpValue.x(), tmpValue.y()); });
}

void* QWidget_MapFromParent(void* ptr, void* pos)
{
		return ({ QPoint tmpValue = static_cast<QWidget*>(ptr)->mapFromParent(*static_cast<QPoint*>(pos)); new QPoint(tmpValue.x(), tmpValue.y()); });
}

void* QWidget_MapTo(void* ptr, void* parent, void* pos)
{
		return ({ QPoint tmpValue = static_cast<QWidget*>(ptr)->mapTo(static_cast<QWidget*>(parent), *static_cast<QPoint*>(pos)); new QPoint(tmpValue.x(), tmpValue.y()); });
}

void* QWidget_MapToGlobal(void* ptr, void* pos)
{
		return ({ QPoint tmpValue = static_cast<QWidget*>(ptr)->mapToGlobal(*static_cast<QPoint*>(pos)); new QPoint(tmpValue.x(), tmpValue.y()); });
}

void* QWidget_MapToParent(void* ptr, void* pos)
{
		return ({ QPoint tmpValue = static_cast<QWidget*>(ptr)->mapToParent(*static_cast<QPoint*>(pos)); new QPoint(tmpValue.x(), tmpValue.y()); });
}

void* QWidget_Pos(void* ptr)
{
		return ({ QPoint tmpValue = static_cast<QWidget*>(ptr)->pos(); new QPoint(tmpValue.x(), tmpValue.y()); });
}

void* QWidget_ChildrenRect(void* ptr)
{
		return ({ QRect tmpValue = static_cast<QWidget*>(ptr)->childrenRect(); new QRect(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QWidget_ContentsRect(void* ptr)
{
		return ({ QRect tmpValue = static_cast<QWidget*>(ptr)->contentsRect(); new QRect(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QWidget_FrameGeometry(void* ptr)
{
		return ({ QRect tmpValue = static_cast<QWidget*>(ptr)->frameGeometry(); new QRect(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QWidget_NormalGeometry(void* ptr)
{
		return ({ QRect tmpValue = static_cast<QWidget*>(ptr)->normalGeometry(); new QRect(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QWidget_Rect(void* ptr)
{
		return ({ QRect tmpValue = static_cast<QWidget*>(ptr)->rect(); new QRect(tmpValue.x(), tmpValue.y(), tmpValue.width(), tmpValue.height()); });
}

void* QWidget_ChildrenRegion(void* ptr)
{
		return new QRegion(static_cast<QWidget*>(ptr)->childrenRegion());
}

void* QWidget_Mask(void* ptr)
{
		return new QRegion(static_cast<QWidget*>(ptr)->mask());
}

void* QWidget_VisibleRegion(void* ptr)
{
		return new QRegion(static_cast<QWidget*>(ptr)->visibleRegion());
}

void* QWidget_BaseSize(void* ptr)
{
		return ({ QSize tmpValue = static_cast<QWidget*>(ptr)->baseSize(); new QSize(tmpValue.width(), tmpValue.height()); });
}

void* QWidget_FrameSize(void* ptr)
{
		return ({ QSize tmpValue = static_cast<QWidget*>(ptr)->frameSize(); new QSize(tmpValue.width(), tmpValue.height()); });
}

void* QWidget_MaximumSize(void* ptr)
{
		return ({ QSize tmpValue = static_cast<QWidget*>(ptr)->maximumSize(); new QSize(tmpValue.width(), tmpValue.height()); });
}

void* QWidget_MinimumSize(void* ptr)
{
		return ({ QSize tmpValue = static_cast<QWidget*>(ptr)->minimumSize(); new QSize(tmpValue.width(), tmpValue.height()); });
}

void* QWidget_MinimumSizeHint(void* ptr)
{
		return ({ QSize tmpValue = static_cast<QWidget*>(ptr)->minimumSizeHint(); new QSize(tmpValue.width(), tmpValue.height()); });
}

void* QWidget_MinimumSizeHintDefault(void* ptr)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		return ({ QSize tmpValue = static_cast<QMenu*>(ptr)->QMenu::minimumSizeHint(); new QSize(tmpValue.width(), tmpValue.height()); });
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		return ({ QSize tmpValue = static_cast<QLabel*>(ptr)->QLabel::minimumSizeHint(); new QSize(tmpValue.width(), tmpValue.height()); });
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		return ({ QSize tmpValue = static_cast<QGraphicsView*>(ptr)->QGraphicsView::minimumSizeHint(); new QSize(tmpValue.width(), tmpValue.height()); });
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		return ({ QSize tmpValue = static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::minimumSizeHint(); new QSize(tmpValue.width(), tmpValue.height()); });
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		return ({ QSize tmpValue = static_cast<QFrame*>(ptr)->QFrame::minimumSizeHint(); new QSize(tmpValue.width(), tmpValue.height()); });
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		return ({ QSize tmpValue = static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::minimumSizeHint(); new QSize(tmpValue.width(), tmpValue.height()); });
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		return ({ QSize tmpValue = static_cast<QScrollBar*>(ptr)->QScrollBar::minimumSizeHint(); new QSize(tmpValue.width(), tmpValue.height()); });
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		return ({ QSize tmpValue = static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::minimumSizeHint(); new QSize(tmpValue.width(), tmpValue.height()); });
	} else {
		return ({ QSize tmpValue = static_cast<QWidget*>(ptr)->QWidget::minimumSizeHint(); new QSize(tmpValue.width(), tmpValue.height()); });
	}
}

void* QWidget_Size(void* ptr)
{
		return ({ QSize tmpValue = static_cast<QWidget*>(ptr)->size(); new QSize(tmpValue.width(), tmpValue.height()); });
}

void* QWidget_SizeHint(void* ptr)
{
		return ({ QSize tmpValue = static_cast<QWidget*>(ptr)->sizeHint(); new QSize(tmpValue.width(), tmpValue.height()); });
}

void* QWidget_SizeHintDefault(void* ptr)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		return ({ QSize tmpValue = static_cast<QMenu*>(ptr)->QMenu::sizeHint(); new QSize(tmpValue.width(), tmpValue.height()); });
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		return ({ QSize tmpValue = static_cast<QLabel*>(ptr)->QLabel::sizeHint(); new QSize(tmpValue.width(), tmpValue.height()); });
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		return ({ QSize tmpValue = static_cast<QGraphicsView*>(ptr)->QGraphicsView::sizeHint(); new QSize(tmpValue.width(), tmpValue.height()); });
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		return ({ QSize tmpValue = static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::sizeHint(); new QSize(tmpValue.width(), tmpValue.height()); });
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		return ({ QSize tmpValue = static_cast<QFrame*>(ptr)->QFrame::sizeHint(); new QSize(tmpValue.width(), tmpValue.height()); });
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		return ({ QSize tmpValue = static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::sizeHint(); new QSize(tmpValue.width(), tmpValue.height()); });
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		return ({ QSize tmpValue = static_cast<QScrollBar*>(ptr)->QScrollBar::sizeHint(); new QSize(tmpValue.width(), tmpValue.height()); });
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		return ({ QSize tmpValue = static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::sizeHint(); new QSize(tmpValue.width(), tmpValue.height()); });
	} else {
		return ({ QSize tmpValue = static_cast<QWidget*>(ptr)->QWidget::sizeHint(); new QSize(tmpValue.width(), tmpValue.height()); });
	}
}

void* QWidget_SizeIncrement(void* ptr)
{
		return ({ QSize tmpValue = static_cast<QWidget*>(ptr)->sizeIncrement(); new QSize(tmpValue.width(), tmpValue.height()); });
}

void* QWidget_SizePolicy(void* ptr)
{
		return new QSizePolicy(static_cast<QWidget*>(ptr)->sizePolicy());
}

struct QtWidgets_PackedString QWidget_AccessibleDescription(void* ptr)
{
		return ({ QByteArray tb88bc9 = static_cast<QWidget*>(ptr)->accessibleDescription().toUtf8(); QtWidgets_PackedString { const_cast<char*>(tb88bc9.prepend("WHITESPACE").constData()+10), tb88bc9.size()-10 }; });
}

struct QtWidgets_PackedString QWidget_AccessibleName(void* ptr)
{
		return ({ QByteArray t32cbb8 = static_cast<QWidget*>(ptr)->accessibleName().toUtf8(); QtWidgets_PackedString { const_cast<char*>(t32cbb8.prepend("WHITESPACE").constData()+10), t32cbb8.size()-10 }; });
}

struct QtWidgets_PackedString QWidget_StatusTip(void* ptr)
{
		return ({ QByteArray t96d9a1 = static_cast<QWidget*>(ptr)->statusTip().toUtf8(); QtWidgets_PackedString { const_cast<char*>(t96d9a1.prepend("WHITESPACE").constData()+10), t96d9a1.size()-10 }; });
}

struct QtWidgets_PackedString QWidget_StyleSheet(void* ptr)
{
		return ({ QByteArray tb180d7 = static_cast<QWidget*>(ptr)->styleSheet().toUtf8(); QtWidgets_PackedString { const_cast<char*>(tb180d7.prepend("WHITESPACE").constData()+10), tb180d7.size()-10 }; });
}

struct QtWidgets_PackedString QWidget_ToolTip(void* ptr)
{
		return ({ QByteArray t791287 = static_cast<QWidget*>(ptr)->toolTip().toUtf8(); QtWidgets_PackedString { const_cast<char*>(t791287.prepend("WHITESPACE").constData()+10), t791287.size()-10 }; });
}

struct QtWidgets_PackedString QWidget_WhatsThis(void* ptr)
{
		return ({ QByteArray tb9ec26 = static_cast<QWidget*>(ptr)->whatsThis().toUtf8(); QtWidgets_PackedString { const_cast<char*>(tb9ec26.prepend("WHITESPACE").constData()+10), tb9ec26.size()-10 }; });
}

struct QtWidgets_PackedString QWidget_WindowFilePath(void* ptr)
{
		return ({ QByteArray tc809cf = static_cast<QWidget*>(ptr)->windowFilePath().toUtf8(); QtWidgets_PackedString { const_cast<char*>(tc809cf.prepend("WHITESPACE").constData()+10), tc809cf.size()-10 }; });
}

struct QtWidgets_PackedString QWidget_WindowIconText(void* ptr)
{
		return ({ QByteArray t309e48 = static_cast<QWidget*>(ptr)->windowIconText().toUtf8(); QtWidgets_PackedString { const_cast<char*>(t309e48.prepend("WHITESPACE").constData()+10), t309e48.size()-10 }; });
}

struct QtWidgets_PackedString QWidget_WindowRole(void* ptr)
{
		return ({ QByteArray t64c9c6 = static_cast<QWidget*>(ptr)->windowRole().toUtf8(); QtWidgets_PackedString { const_cast<char*>(t64c9c6.prepend("WHITESPACE").constData()+10), t64c9c6.size()-10 }; });
}

struct QtWidgets_PackedString QWidget_WindowTitle(void* ptr)
{
		return ({ QByteArray tf3cd6c = static_cast<QWidget*>(ptr)->windowTitle().toUtf8(); QtWidgets_PackedString { const_cast<char*>(tf3cd6c.prepend("WHITESPACE").constData()+10), tf3cd6c.size()-10 }; });
}

void* QWidget_Style(void* ptr)
{
		return static_cast<QWidget*>(ptr)->style();
}

void* QWidget_InputMethodQuery(void* ptr, long long query)
{
		return new QVariant(static_cast<QWidget*>(ptr)->inputMethodQuery(static_cast<Qt::InputMethodQuery>(query)));
}

void* QWidget_InputMethodQueryDefault(void* ptr, long long query)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		return new QVariant(static_cast<QMenu*>(ptr)->QMenu::inputMethodQuery(static_cast<Qt::InputMethodQuery>(query)));
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		return new QVariant(static_cast<QLabel*>(ptr)->QLabel::inputMethodQuery(static_cast<Qt::InputMethodQuery>(query)));
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		return new QVariant(static_cast<QGraphicsView*>(ptr)->QGraphicsView::inputMethodQuery(static_cast<Qt::InputMethodQuery>(query)));
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		return new QVariant(static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::inputMethodQuery(static_cast<Qt::InputMethodQuery>(query)));
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		return new QVariant(static_cast<QFrame*>(ptr)->QFrame::inputMethodQuery(static_cast<Qt::InputMethodQuery>(query)));
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		return new QVariant(static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::inputMethodQuery(static_cast<Qt::InputMethodQuery>(query)));
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		return new QVariant(static_cast<QScrollBar*>(ptr)->QScrollBar::inputMethodQuery(static_cast<Qt::InputMethodQuery>(query)));
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		return new QVariant(static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::inputMethodQuery(static_cast<Qt::InputMethodQuery>(query)));
	} else {
		return new QVariant(static_cast<QWidget*>(ptr)->QWidget::inputMethodQuery(static_cast<Qt::InputMethodQuery>(query)));
	}
}

void* QWidget_ChildAt2(void* ptr, void* p)
{
		return static_cast<QWidget*>(ptr)->childAt(*static_cast<QPoint*>(p));
}

void* QWidget_ChildAt(void* ptr, int x, int y)
{
		return static_cast<QWidget*>(ptr)->childAt(x, y);
}

void* QWidget_FocusProxy(void* ptr)
{
		return static_cast<QWidget*>(ptr)->focusProxy();
}

void* QWidget_FocusWidget(void* ptr)
{
		return static_cast<QWidget*>(ptr)->focusWidget();
}

void* QWidget_NativeParentWidget(void* ptr)
{
		return static_cast<QWidget*>(ptr)->nativeParentWidget();
}

void* QWidget_NextInFocusChain(void* ptr)
{
		return static_cast<QWidget*>(ptr)->nextInFocusChain();
}

void* QWidget_ParentWidget(void* ptr)
{
		return static_cast<QWidget*>(ptr)->parentWidget();
}

void* QWidget_PreviousInFocusChain(void* ptr)
{
		return static_cast<QWidget*>(ptr)->previousInFocusChain();
}

void* QWidget_Window(void* ptr)
{
		return static_cast<QWidget*>(ptr)->window();
}

void* QWidget_WindowHandle(void* ptr)
{
		return static_cast<QWidget*>(ptr)->windowHandle();
}

long long QWidget_ContextMenuPolicy(void* ptr)
{
		return static_cast<QWidget*>(ptr)->contextMenuPolicy();
}

long long QWidget_FocusPolicy(void* ptr)
{
		return static_cast<QWidget*>(ptr)->focusPolicy();
}

long long QWidget_InputMethodHints(void* ptr)
{
		return static_cast<QWidget*>(ptr)->inputMethodHints();
}

long long QWidget_LayoutDirection(void* ptr)
{
		return static_cast<QWidget*>(ptr)->layoutDirection();
}

long long QWidget_WindowFlags(void* ptr)
{
		return static_cast<QWidget*>(ptr)->windowFlags();
}

long long QWidget_WindowModality(void* ptr)
{
		return static_cast<QWidget*>(ptr)->windowModality();
}

long long QWidget_WindowState(void* ptr)
{
		return static_cast<QWidget*>(ptr)->windowState();
}

long long QWidget_WindowType(void* ptr)
{
		return static_cast<QWidget*>(ptr)->windowType();
}

uintptr_t QWidget_EffectiveWinId(void* ptr)
{
		return static_cast<QWidget*>(ptr)->effectiveWinId();
}

uintptr_t QWidget_WinId(void* ptr)
{
		return static_cast<QWidget*>(ptr)->winId();
}

char QWidget_AcceptDrops(void* ptr)
{
		return static_cast<QWidget*>(ptr)->acceptDrops();
}

char QWidget_AutoFillBackground(void* ptr)
{
		return static_cast<QWidget*>(ptr)->autoFillBackground();
}

char QWidget_HasEditFocus(void* ptr)
{
#ifdef QT_KEYPAD_NAVIGATION
		return static_cast<QWidget*>(ptr)->hasEditFocus();
#else
	return false;
#endif
}

char QWidget_HasFocus(void* ptr)
{
		return static_cast<QWidget*>(ptr)->hasFocus();
}

char QWidget_HasHeightForWidth(void* ptr)
{
		return static_cast<QWidget*>(ptr)->hasHeightForWidth();
}

char QWidget_HasHeightForWidthDefault(void* ptr)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		return static_cast<QMenu*>(ptr)->QMenu::hasHeightForWidth();
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		return static_cast<QLabel*>(ptr)->QLabel::hasHeightForWidth();
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsView*>(ptr)->QGraphicsView::hasHeightForWidth();
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		return static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::hasHeightForWidth();
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		return static_cast<QFrame*>(ptr)->QFrame::hasHeightForWidth();
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::hasHeightForWidth();
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		return static_cast<QScrollBar*>(ptr)->QScrollBar::hasHeightForWidth();
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		return static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::hasHeightForWidth();
	} else {
		return static_cast<QWidget*>(ptr)->QWidget::hasHeightForWidth();
	}
}

char QWidget_HasMouseTracking(void* ptr)
{
		return static_cast<QWidget*>(ptr)->hasMouseTracking();
}

char QWidget_HasTabletTracking(void* ptr)
{
		return static_cast<QWidget*>(ptr)->hasTabletTracking();
}

char QWidget_IsActiveWindow(void* ptr)
{
		return static_cast<QWidget*>(ptr)->isActiveWindow();
}

char QWidget_IsAncestorOf(void* ptr, void* child)
{
		return static_cast<QWidget*>(ptr)->isAncestorOf(static_cast<QWidget*>(child));
}

char QWidget_IsEnabled(void* ptr)
{
		return static_cast<QWidget*>(ptr)->isEnabled();
}

char QWidget_IsEnabledTo(void* ptr, void* ancestor)
{
		return static_cast<QWidget*>(ptr)->isEnabledTo(static_cast<QWidget*>(ancestor));
}

char QWidget_IsFullScreen(void* ptr)
{
		return static_cast<QWidget*>(ptr)->isFullScreen();
}

char QWidget_IsHidden(void* ptr)
{
		return static_cast<QWidget*>(ptr)->isHidden();
}

char QWidget_IsMaximized(void* ptr)
{
		return static_cast<QWidget*>(ptr)->isMaximized();
}

char QWidget_IsMinimized(void* ptr)
{
		return static_cast<QWidget*>(ptr)->isMinimized();
}

char QWidget_IsModal(void* ptr)
{
		return static_cast<QWidget*>(ptr)->isModal();
}

char QWidget_IsVisible(void* ptr)
{
		return static_cast<QWidget*>(ptr)->isVisible();
}

char QWidget_IsVisibleTo(void* ptr, void* ancestor)
{
		return static_cast<QWidget*>(ptr)->isVisibleTo(static_cast<QWidget*>(ancestor));
}

char QWidget_IsWindow(void* ptr)
{
		return static_cast<QWidget*>(ptr)->isWindow();
}

char QWidget_IsWindowModified(void* ptr)
{
		return static_cast<QWidget*>(ptr)->isWindowModified();
}

char QWidget_TestAttribute(void* ptr, long long attribute)
{
		return static_cast<QWidget*>(ptr)->testAttribute(static_cast<Qt::WidgetAttribute>(attribute));
}

char QWidget_UnderMouse(void* ptr)
{
		return static_cast<QWidget*>(ptr)->underMouse();
}

char QWidget_UpdatesEnabled(void* ptr)
{
		return static_cast<QWidget*>(ptr)->updatesEnabled();
}

void* QWidget_Font(void* ptr)
{
		return const_cast<QFont*>(&static_cast<QWidget*>(ptr)->font());
}

void* QWidget_MetaObject(void* ptr)
{
		return const_cast<QMetaObject*>(static_cast<QWidget*>(ptr)->metaObject());
}

void* QWidget_MetaObjectDefault(void* ptr)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		return const_cast<QMetaObject*>(static_cast<QMenu*>(ptr)->QMenu::metaObject());
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		return const_cast<QMetaObject*>(static_cast<QLabel*>(ptr)->QLabel::metaObject());
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		return const_cast<QMetaObject*>(static_cast<QGraphicsView*>(ptr)->QGraphicsView::metaObject());
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		return const_cast<QMetaObject*>(static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::metaObject());
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		return const_cast<QMetaObject*>(static_cast<QFrame*>(ptr)->QFrame::metaObject());
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		return const_cast<QMetaObject*>(static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::metaObject());
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		return const_cast<QMetaObject*>(static_cast<QScrollBar*>(ptr)->QScrollBar::metaObject());
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		return const_cast<QMetaObject*>(static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::metaObject());
	} else {
		return const_cast<QMetaObject*>(static_cast<QWidget*>(ptr)->QWidget::metaObject());
	}
}

void* QWidget_Palette(void* ptr)
{
		return const_cast<QPalette*>(&static_cast<QWidget*>(ptr)->palette());
}

void* QWidget_Geometry(void* ptr)
{
		return const_cast<QRect*>(&static_cast<QWidget*>(ptr)->geometry());
}

int QWidget_Height(void* ptr)
{
		return static_cast<QWidget*>(ptr)->height();
}

int QWidget_HeightForWidth(void* ptr, int w)
{
		return static_cast<QWidget*>(ptr)->heightForWidth(w);
}

int QWidget_HeightForWidthDefault(void* ptr, int w)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		return static_cast<QMenu*>(ptr)->QMenu::heightForWidth(w);
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		return static_cast<QLabel*>(ptr)->QLabel::heightForWidth(w);
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsView*>(ptr)->QGraphicsView::heightForWidth(w);
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		return static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::heightForWidth(w);
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		return static_cast<QFrame*>(ptr)->QFrame::heightForWidth(w);
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::heightForWidth(w);
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		return static_cast<QScrollBar*>(ptr)->QScrollBar::heightForWidth(w);
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		return static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::heightForWidth(w);
	} else {
		return static_cast<QWidget*>(ptr)->QWidget::heightForWidth(w);
	}
}

int QWidget_MaximumHeight(void* ptr)
{
		return static_cast<QWidget*>(ptr)->maximumHeight();
}

int QWidget_MaximumWidth(void* ptr)
{
		return static_cast<QWidget*>(ptr)->maximumWidth();
}

int QWidget_Metric(void* ptr, long long m)
{
		return static_cast<QWidget*>(ptr)->metric(static_cast<QPaintDevice::PaintDeviceMetric>(m));
}

int QWidget_MetricDefault(void* ptr, long long m)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		return static_cast<QMenu*>(ptr)->QMenu::metric(static_cast<QPaintDevice::PaintDeviceMetric>(m));
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		return static_cast<QLabel*>(ptr)->QLabel::metric(static_cast<QPaintDevice::PaintDeviceMetric>(m));
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		return static_cast<QGraphicsView*>(ptr)->QGraphicsView::metric(static_cast<QPaintDevice::PaintDeviceMetric>(m));
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		return static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::metric(static_cast<QPaintDevice::PaintDeviceMetric>(m));
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		return static_cast<QFrame*>(ptr)->QFrame::metric(static_cast<QPaintDevice::PaintDeviceMetric>(m));
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		return static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::metric(static_cast<QPaintDevice::PaintDeviceMetric>(m));
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		return static_cast<QScrollBar*>(ptr)->QScrollBar::metric(static_cast<QPaintDevice::PaintDeviceMetric>(m));
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		return static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::metric(static_cast<QPaintDevice::PaintDeviceMetric>(m));
	} else {
		return static_cast<QWidget*>(ptr)->QWidget::metric(static_cast<QPaintDevice::PaintDeviceMetric>(m));
	}
}

int QWidget_MinimumHeight(void* ptr)
{
		return static_cast<QWidget*>(ptr)->minimumHeight();
}

int QWidget_MinimumWidth(void* ptr)
{
		return static_cast<QWidget*>(ptr)->minimumWidth();
}

int QWidget_ToolTipDuration(void* ptr)
{
		return static_cast<QWidget*>(ptr)->toolTipDuration();
}

int QWidget_Width(void* ptr)
{
		return static_cast<QWidget*>(ptr)->width();
}

int QWidget_X(void* ptr)
{
		return static_cast<QWidget*>(ptr)->x();
}

int QWidget_Y(void* ptr)
{
		return static_cast<QWidget*>(ptr)->y();
}

double QWidget_WindowOpacity(void* ptr)
{
		return static_cast<QWidget*>(ptr)->windowOpacity();
}

void QWidget_EnsurePolished(void* ptr)
{
		static_cast<QWidget*>(ptr)->ensurePolished();
}

void QWidget_GetContentsMargins(void* ptr, int left, int top, int right, int bottom)
{
		static_cast<QWidget*>(ptr)->getContentsMargins(&left, &top, &right, &bottom);
}

void QWidget_InitPainter(void* ptr, void* painter)
{
		static_cast<QWidget*>(ptr)->initPainter(static_cast<QPainter*>(painter));
}

void QWidget_InitPainterDefault(void* ptr, void* painter)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::initPainter(static_cast<QPainter*>(painter));
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::initPainter(static_cast<QPainter*>(painter));
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::initPainter(static_cast<QPainter*>(painter));
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::initPainter(static_cast<QPainter*>(painter));
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::initPainter(static_cast<QPainter*>(painter));
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::initPainter(static_cast<QPainter*>(painter));
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::initPainter(static_cast<QPainter*>(painter));
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::initPainter(static_cast<QPainter*>(painter));
	} else {
		static_cast<QWidget*>(ptr)->QWidget::initPainter(static_cast<QPainter*>(painter));
	}
}

void* QWidget___addActions_actions_atList(void* ptr, int i)
{
		return ({QAction * tmp = static_cast<QList<QAction *>*>(ptr)->at(i); if (i == static_cast<QList<QAction *>*>(ptr)->size()-1) { static_cast<QList<QAction *>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QWidget___addActions_actions_setList(void* ptr, void* i)
{
		static_cast<QList<QAction *>*>(ptr)->append(static_cast<QAction*>(i));
}

void* QWidget___addActions_actions_newList(void* ptr)
{
	Q_UNUSED(ptr);
		return new QList<QAction *>();
}

void* QWidget___insertActions_actions_atList(void* ptr, int i)
{
		return ({QAction * tmp = static_cast<QList<QAction *>*>(ptr)->at(i); if (i == static_cast<QList<QAction *>*>(ptr)->size()-1) { static_cast<QList<QAction *>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QWidget___insertActions_actions_setList(void* ptr, void* i)
{
		static_cast<QList<QAction *>*>(ptr)->append(static_cast<QAction*>(i));
}

void* QWidget___insertActions_actions_newList(void* ptr)
{
	Q_UNUSED(ptr);
		return new QList<QAction *>();
}

void* QWidget___actions_atList(void* ptr, int i)
{
		return ({QAction * tmp = static_cast<QList<QAction *>*>(ptr)->at(i); if (i == static_cast<QList<QAction *>*>(ptr)->size()-1) { static_cast<QList<QAction *>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QWidget___actions_setList(void* ptr, void* i)
{
		static_cast<QList<QAction *>*>(ptr)->append(static_cast<QAction*>(i));
}

void* QWidget___actions_newList(void* ptr)
{
	Q_UNUSED(ptr);
		return new QList<QAction *>();
}

void* QWidget___dynamicPropertyNames_atList(void* ptr, int i)
{
		return new QByteArray(({QByteArray tmp = static_cast<QList<QByteArray>*>(ptr)->at(i); if (i == static_cast<QList<QByteArray>*>(ptr)->size()-1) { static_cast<QList<QByteArray>*>(ptr)->~QList(); free(ptr); }; tmp; }));
}

void QWidget___dynamicPropertyNames_setList(void* ptr, void* i)
{
		static_cast<QList<QByteArray>*>(ptr)->append(*static_cast<QByteArray*>(i));
}

void* QWidget___dynamicPropertyNames_newList(void* ptr)
{
	Q_UNUSED(ptr);
		return new QList<QByteArray>();
}

void* QWidget___findChildren_atList2(void* ptr, int i)
{
		return ({QObject* tmp = static_cast<QList<QObject*>*>(ptr)->at(i); if (i == static_cast<QList<QObject*>*>(ptr)->size()-1) { static_cast<QList<QObject*>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QWidget___findChildren_setList2(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QLayout*>(i));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QWidget*>(i));
	} else {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QObject*>(i));
	}
}

void* QWidget___findChildren_newList2(void* ptr)
{
	Q_UNUSED(ptr);
		return new QList<QObject*>();
}

void* QWidget___findChildren_atList3(void* ptr, int i)
{
		return ({QObject* tmp = static_cast<QList<QObject*>*>(ptr)->at(i); if (i == static_cast<QList<QObject*>*>(ptr)->size()-1) { static_cast<QList<QObject*>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QWidget___findChildren_setList3(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QLayout*>(i));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QWidget*>(i));
	} else {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QObject*>(i));
	}
}

void* QWidget___findChildren_newList3(void* ptr)
{
	Q_UNUSED(ptr);
		return new QList<QObject*>();
}

void* QWidget___findChildren_atList(void* ptr, int i)
{
		return ({QObject* tmp = static_cast<QList<QObject*>*>(ptr)->at(i); if (i == static_cast<QList<QObject*>*>(ptr)->size()-1) { static_cast<QList<QObject*>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QWidget___findChildren_setList(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QLayout*>(i));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QWidget*>(i));
	} else {
		static_cast<QList<QObject*>*>(ptr)->append(static_cast<QObject*>(i));
	}
}

void* QWidget___findChildren_newList(void* ptr)
{
	Q_UNUSED(ptr);
		return new QList<QObject*>();
}

void* QWidget___children_atList(void* ptr, int i)
{
		return ({QObject * tmp = static_cast<QList<QObject *>*>(ptr)->at(i); if (i == static_cast<QList<QObject *>*>(ptr)->size()-1) { static_cast<QList<QObject *>*>(ptr)->~QList(); free(ptr); }; tmp; });
}

void QWidget___children_setList(void* ptr, void* i)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject *>*>(ptr)->append(static_cast<QGraphicsObject*>(i));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject *>*>(ptr)->append(static_cast<QGraphicsWidget*>(i));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject *>*>(ptr)->append(static_cast<QLayout*>(i));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(i))) {
		static_cast<QList<QObject *>*>(ptr)->append(static_cast<QWidget*>(i));
	} else {
		static_cast<QList<QObject *>*>(ptr)->append(static_cast<QObject*>(i));
	}
}

void* QWidget___children_newList(void* ptr)
{
	Q_UNUSED(ptr);
		return new QList<QObject *>();
}

char QWidget_EventFilter(void* ptr, void* watched, void* event)
{
	if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(watched))) {
		return static_cast<QWidget*>(ptr)->eventFilter(static_cast<QGraphicsObject*>(watched), static_cast<QEvent*>(event));
	} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(watched))) {
		return static_cast<QWidget*>(ptr)->eventFilter(static_cast<QGraphicsWidget*>(watched), static_cast<QEvent*>(event));
	} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(watched))) {
		return static_cast<QWidget*>(ptr)->eventFilter(static_cast<QLayout*>(watched), static_cast<QEvent*>(event));
	} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(watched))) {
		return static_cast<QWidget*>(ptr)->eventFilter(static_cast<QWidget*>(watched), static_cast<QEvent*>(event));
	} else {
		return static_cast<QWidget*>(ptr)->eventFilter(static_cast<QObject*>(watched), static_cast<QEvent*>(event));
	}
}

char QWidget_EventFilterDefault(void* ptr, void* watched, void* event)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(watched))) {
			return static_cast<QMenu*>(ptr)->QMenu::eventFilter(static_cast<QGraphicsObject*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QMenu*>(ptr)->QMenu::eventFilter(static_cast<QGraphicsWidget*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(watched))) {
			return static_cast<QMenu*>(ptr)->QMenu::eventFilter(static_cast<QLayout*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QMenu*>(ptr)->QMenu::eventFilter(static_cast<QWidget*>(watched), static_cast<QEvent*>(event));
		} else {
			return static_cast<QMenu*>(ptr)->QMenu::eventFilter(static_cast<QObject*>(watched), static_cast<QEvent*>(event));
		}
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(watched))) {
			return static_cast<QLabel*>(ptr)->QLabel::eventFilter(static_cast<QGraphicsObject*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QLabel*>(ptr)->QLabel::eventFilter(static_cast<QGraphicsWidget*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(watched))) {
			return static_cast<QLabel*>(ptr)->QLabel::eventFilter(static_cast<QLayout*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QLabel*>(ptr)->QLabel::eventFilter(static_cast<QWidget*>(watched), static_cast<QEvent*>(event));
		} else {
			return static_cast<QLabel*>(ptr)->QLabel::eventFilter(static_cast<QObject*>(watched), static_cast<QEvent*>(event));
		}
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsView*>(ptr)->QGraphicsView::eventFilter(static_cast<QGraphicsObject*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsView*>(ptr)->QGraphicsView::eventFilter(static_cast<QGraphicsWidget*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsView*>(ptr)->QGraphicsView::eventFilter(static_cast<QLayout*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QGraphicsView*>(ptr)->QGraphicsView::eventFilter(static_cast<QWidget*>(watched), static_cast<QEvent*>(event));
		} else {
			return static_cast<QGraphicsView*>(ptr)->QGraphicsView::eventFilter(static_cast<QObject*>(watched), static_cast<QEvent*>(event));
		}
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(watched))) {
			return static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::eventFilter(static_cast<QGraphicsObject*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::eventFilter(static_cast<QGraphicsWidget*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(watched))) {
			return static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::eventFilter(static_cast<QLayout*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::eventFilter(static_cast<QWidget*>(watched), static_cast<QEvent*>(event));
		} else {
			return static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::eventFilter(static_cast<QObject*>(watched), static_cast<QEvent*>(event));
		}
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(watched))) {
			return static_cast<QFrame*>(ptr)->QFrame::eventFilter(static_cast<QGraphicsObject*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QFrame*>(ptr)->QFrame::eventFilter(static_cast<QGraphicsWidget*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(watched))) {
			return static_cast<QFrame*>(ptr)->QFrame::eventFilter(static_cast<QLayout*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QFrame*>(ptr)->QFrame::eventFilter(static_cast<QWidget*>(watched), static_cast<QEvent*>(event));
		} else {
			return static_cast<QFrame*>(ptr)->QFrame::eventFilter(static_cast<QObject*>(watched), static_cast<QEvent*>(event));
		}
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(watched))) {
			return static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::eventFilter(static_cast<QGraphicsObject*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::eventFilter(static_cast<QGraphicsWidget*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(watched))) {
			return static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::eventFilter(static_cast<QLayout*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::eventFilter(static_cast<QWidget*>(watched), static_cast<QEvent*>(event));
		} else {
			return static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::eventFilter(static_cast<QObject*>(watched), static_cast<QEvent*>(event));
		}
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(watched))) {
			return static_cast<QScrollBar*>(ptr)->QScrollBar::eventFilter(static_cast<QGraphicsObject*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QScrollBar*>(ptr)->QScrollBar::eventFilter(static_cast<QGraphicsWidget*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(watched))) {
			return static_cast<QScrollBar*>(ptr)->QScrollBar::eventFilter(static_cast<QLayout*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QScrollBar*>(ptr)->QScrollBar::eventFilter(static_cast<QWidget*>(watched), static_cast<QEvent*>(event));
		} else {
			return static_cast<QScrollBar*>(ptr)->QScrollBar::eventFilter(static_cast<QObject*>(watched), static_cast<QEvent*>(event));
		}
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(watched))) {
			return static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::eventFilter(static_cast<QGraphicsObject*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::eventFilter(static_cast<QGraphicsWidget*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(watched))) {
			return static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::eventFilter(static_cast<QLayout*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::eventFilter(static_cast<QWidget*>(watched), static_cast<QEvent*>(event));
		} else {
			return static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::eventFilter(static_cast<QObject*>(watched), static_cast<QEvent*>(event));
		}
	} else {
		if (dynamic_cast<QGraphicsObject*>(static_cast<QObject*>(watched))) {
			return static_cast<QWidget*>(ptr)->QWidget::eventFilter(static_cast<QGraphicsObject*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QGraphicsWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QWidget*>(ptr)->QWidget::eventFilter(static_cast<QGraphicsWidget*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QLayout*>(static_cast<QObject*>(watched))) {
			return static_cast<QWidget*>(ptr)->QWidget::eventFilter(static_cast<QLayout*>(watched), static_cast<QEvent*>(event));
		} else if (dynamic_cast<QWidget*>(static_cast<QObject*>(watched))) {
			return static_cast<QWidget*>(ptr)->QWidget::eventFilter(static_cast<QWidget*>(watched), static_cast<QEvent*>(event));
		} else {
			return static_cast<QWidget*>(ptr)->QWidget::eventFilter(static_cast<QObject*>(watched), static_cast<QEvent*>(event));
		}
	}
}

void QWidget_ChildEvent(void* ptr, void* event)
{
		static_cast<QWidget*>(ptr)->childEvent(static_cast<QChildEvent*>(event));
}

void QWidget_ChildEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::childEvent(static_cast<QChildEvent*>(event));
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::childEvent(static_cast<QChildEvent*>(event));
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::childEvent(static_cast<QChildEvent*>(event));
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::childEvent(static_cast<QChildEvent*>(event));
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::childEvent(static_cast<QChildEvent*>(event));
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::childEvent(static_cast<QChildEvent*>(event));
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::childEvent(static_cast<QChildEvent*>(event));
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::childEvent(static_cast<QChildEvent*>(event));
	} else {
		static_cast<QWidget*>(ptr)->QWidget::childEvent(static_cast<QChildEvent*>(event));
	}
}

void QWidget_ConnectNotify(void* ptr, void* sign)
{
		static_cast<QWidget*>(ptr)->connectNotify(*static_cast<QMetaMethod*>(sign));
}

void QWidget_ConnectNotifyDefault(void* ptr, void* sign)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::connectNotify(*static_cast<QMetaMethod*>(sign));
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::connectNotify(*static_cast<QMetaMethod*>(sign));
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::connectNotify(*static_cast<QMetaMethod*>(sign));
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::connectNotify(*static_cast<QMetaMethod*>(sign));
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::connectNotify(*static_cast<QMetaMethod*>(sign));
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::connectNotify(*static_cast<QMetaMethod*>(sign));
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::connectNotify(*static_cast<QMetaMethod*>(sign));
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::connectNotify(*static_cast<QMetaMethod*>(sign));
	} else {
		static_cast<QWidget*>(ptr)->QWidget::connectNotify(*static_cast<QMetaMethod*>(sign));
	}
}

void QWidget_CustomEvent(void* ptr, void* event)
{
		static_cast<QWidget*>(ptr)->customEvent(static_cast<QEvent*>(event));
}

void QWidget_CustomEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::customEvent(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::customEvent(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::customEvent(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::customEvent(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::customEvent(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::customEvent(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::customEvent(static_cast<QEvent*>(event));
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::customEvent(static_cast<QEvent*>(event));
	} else {
		static_cast<QWidget*>(ptr)->QWidget::customEvent(static_cast<QEvent*>(event));
	}
}

void QWidget_DeleteLater(void* ptr)
{
		QMetaObject::invokeMethod(static_cast<QWidget*>(ptr), "deleteLater");
}

void QWidget_DeleteLaterDefault(void* ptr)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::deleteLater();
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::deleteLater();
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::deleteLater();
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::deleteLater();
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::deleteLater();
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::deleteLater();
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::deleteLater();
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::deleteLater();
	} else {
		static_cast<QWidget*>(ptr)->QWidget::deleteLater();
	}
}

void QWidget_DisconnectNotify(void* ptr, void* sign)
{
		static_cast<QWidget*>(ptr)->disconnectNotify(*static_cast<QMetaMethod*>(sign));
}

void QWidget_DisconnectNotifyDefault(void* ptr, void* sign)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::disconnectNotify(*static_cast<QMetaMethod*>(sign));
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::disconnectNotify(*static_cast<QMetaMethod*>(sign));
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::disconnectNotify(*static_cast<QMetaMethod*>(sign));
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::disconnectNotify(*static_cast<QMetaMethod*>(sign));
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::disconnectNotify(*static_cast<QMetaMethod*>(sign));
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::disconnectNotify(*static_cast<QMetaMethod*>(sign));
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::disconnectNotify(*static_cast<QMetaMethod*>(sign));
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::disconnectNotify(*static_cast<QMetaMethod*>(sign));
	} else {
		static_cast<QWidget*>(ptr)->QWidget::disconnectNotify(*static_cast<QMetaMethod*>(sign));
	}
}

void QWidget_TimerEvent(void* ptr, void* event)
{
		static_cast<QWidget*>(ptr)->timerEvent(static_cast<QTimerEvent*>(event));
}

void QWidget_TimerEventDefault(void* ptr, void* event)
{
	if (dynamic_cast<QMenu*>(static_cast<QObject*>(ptr))) {
		static_cast<QMenu*>(ptr)->QMenu::timerEvent(static_cast<QTimerEvent*>(event));
	} else if (dynamic_cast<QLabel*>(static_cast<QObject*>(ptr))) {
		static_cast<QLabel*>(ptr)->QLabel::timerEvent(static_cast<QTimerEvent*>(event));
	} else if (dynamic_cast<QGraphicsView*>(static_cast<QObject*>(ptr))) {
		static_cast<QGraphicsView*>(ptr)->QGraphicsView::timerEvent(static_cast<QTimerEvent*>(event));
	} else if (dynamic_cast<QAbstractScrollArea*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractScrollArea*>(ptr)->QAbstractScrollArea::timerEvent(static_cast<QTimerEvent*>(event));
	} else if (dynamic_cast<QFrame*>(static_cast<QObject*>(ptr))) {
		static_cast<QFrame*>(ptr)->QFrame::timerEvent(static_cast<QTimerEvent*>(event));
	} else if (dynamic_cast<QDesktopWidget*>(static_cast<QObject*>(ptr))) {
		static_cast<QDesktopWidget*>(ptr)->QDesktopWidget::timerEvent(static_cast<QTimerEvent*>(event));
	} else if (dynamic_cast<QScrollBar*>(static_cast<QObject*>(ptr))) {
		static_cast<QScrollBar*>(ptr)->QScrollBar::timerEvent(static_cast<QTimerEvent*>(event));
	} else if (dynamic_cast<QAbstractSlider*>(static_cast<QObject*>(ptr))) {
		static_cast<QAbstractSlider*>(ptr)->QAbstractSlider::timerEvent(static_cast<QTimerEvent*>(event));
	} else {
		static_cast<QWidget*>(ptr)->QWidget::timerEvent(static_cast<QTimerEvent*>(event));
	}
}

